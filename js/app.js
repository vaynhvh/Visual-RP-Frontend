(function(e) {
    function t(t) {
        for (var i, r, o = t[0], c = t[1], l = t[2], m = 0, d = []; m < o.length; m++) r = o[m], Object.prototype.hasOwnProperty.call(s, r) && s[r] && d.push(s[r][0]), s[r] = 0;
        for (i in c) Object.prototype.hasOwnProperty.call(c, i) && (e[i] = c[i]);
        u && u(t);
        while (d.length) d.shift()();
        return n.push.apply(n, l || []), a()
    }

    function a() {
        for (var e, t = 0; t < n.length; t++) {
            for (var a = n[t], i = !0, o = 1; o < a.length; o++) {
                var c = a[o];
                0 !== s[c] && (i = !1)
            }
            i && (n.splice(t--, 1), e = r(r.s = a[0]))
        }
        return e
    }
    var i = {},
        s = {
            app: 0
        },
        n = [];

    function r(t) {
        if (i[t]) return i[t].exports;
        var a = i[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(a.exports, a, a.exports, r), a.l = !0, a.exports
    }
    r.m = e, r.c = i, r.d = function(e, t, a) {
        r.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: a
        })
    }, r.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, r.t = function(e, t) {
        if (1 & t && (e = r(e)), 8 & t) return e;
        if (4 & t && "object" === typeof e && e && e.__esModule) return e;
        var a = Object.create(null);
        if (r.r(a), Object.defineProperty(a, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var i in e) r.d(a, i, function(t) {
                return e[t]
            }.bind(null, i));
        return a
    }, r.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e["default"]
        } : function() {
            return e
        };
        return r.d(t, "a", t), t
    }, r.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, r.p = "/";
    var o = window["webpackJsonp"] = window["webpackJsonp"] || [],
        c = o.push.bind(o);
    o.push = t, o = o.slice();
    for (var l = 0; l < o.length; l++) t(o[l]);
    var u = c;
    n.push([0, "chunk-vendors"]), a()
})({
    0: function(e, t, a) {
        e.exports = a("56d7")
    },
    "00a8": function(e, t, a) {},
    "02a3": function(e, t, a) {},
    "02d7": function(e, t, a) {},
    "032f": function(e, t, a) {
        "use strict";
        a("2d19")
    },
    "040c": function(e, t, a) {},
    "0518": function(e, t, a) {},
    "0631": function(e, t, a) {
        "use strict";
        a("fc3e")
    },
    "0705": function(e, t, a) {
        "use strict";
        a("8a30")
    },
    "073d": function(e, t, a) {},
    "0959": function(e, t, a) {
        "use strict";
        a("8f59")
    },
    "09cd": function(e, t, a) {},
    "09dd": function(e, t, a) {
        "use strict";
        a("7e25")
    },
    "09f7": function(e, t, a) {
        "use strict";
        a("68b2")
    },
    "0a3d": function(e, t, a) {},
    "0add": function(e, t, a) {},
    "0b22": function(e, t, a) {},
    "0b6b": function(e, t, a) {},
    "0c8c": function(e, t, a) {},
    "0cc6": function(e, t, a) {},
    "0cce": function(e, t, a) {},
    "0e25": function(e, t, a) {},
    "0e39": function(e, t, a) {
        "use strict";
        a("0a3d")
    },
    "0e54": function(e, t, a) {
        "use strict";
        a("1db1")
    },
    "10ab": function(e, t, a) {},
    "10dc": function(e, t, a) {
        "use strict";
        a("6082")
    },
    "113a": function(e, t, a) {},
    1155: function(e, t, a) {
        "use strict";
        a("4bd2")
    },
    1179: function(e, t, a) {
        "use strict";
        a("7af3")
    },
    1247: function(e, t, a) {
        "use strict";
        a("e5c1")
    },
    "12cc": function(e, t, a) {},
    "12d9": function(e, t, a) {
        "use strict";
        a("f7fc")
    },
    "131c": function(e, t, a) {
        "use strict";
        a("7c8f")
    },
    "13b0": function(e, t, a) {
        "use strict";
        a("d438")
    },
    "13bb": function(e, t, a) {
        "use strict";
        a("9987")
    },
    1578: function(e, t, a) {
        "use strict";
        a("63a4")
    },
    1649: function(e, t, a) {},
    "16d2": function(e, t, a) {
        "use strict";
        a("d95c")
    },
    1991: function(e, t, a) {},
    "1aef": function(e, t, a) {},
    "1b9b": function(e, t, a) {
        "use strict";
        a("a800")
    },
    "1c51": function(e, t, a) {
        "use strict";
        a("4ab4")
    },
    "1cd9": function(e, t, a) {
        "use strict";
        a("f2d4")
    },
    "1d5d": function(e, t, a) {
        "use strict";
        a("040c")
    },
    "1d69": function(e, t, a) {
        "use strict";
        a("94c7")
    },
    "1db1": function(e, t, a) {},
    "1df8": function(e, t, a) {},
    "1e7c": function(e, t, a) {},
    "1eb1": function(e, t, a) {},
    "1ed6": function(e, t, a) {},
    2040: function(e, t, a) {},
    "20d0": function(e, t, a) {},
    "20f2": function(e, t, a) {
        "use strict";
        a("1991")
    },
    "217f": function(e, t, a) {
        "use strict";
        a("38f3")
    },
    "225f": function(e, t, a) {
        "use strict";
        a("510c")
    },
    2318: function(e, t, a) {},
    2453: function(e, t, a) {
        "use strict";
        a("7010")
    },
    "24d1": function(e, t, a) {
        "use strict";
        a("e983")
    },
    "256c": function(e, t, a) {},
    "25f7": function(e, t, a) {},
    "26f5": function(e, t, a) {},
    "27a2": function(e, t, a) {},
    "285f": function(e, t, a) {},
    "28b1": function(e, t, a) {},
    "28e4": function(e, t, a) {
        "use strict";
        a("bc37")
    },
    "29ee": function(e, t, a) {},
    "2aaf": function(e, t, a) {
        "use strict";
        a("b1d2")
    },
    "2c60": function(e, t, a) {
        "use strict";
        a("1e7c")
    },
    "2cc1": function(e, t, a) {},
    "2d19": function(e, t, a) {},
    "2da0": function(e, t, a) {
        "use strict";
        a("df93")
    },
    "2e52": function(e, t, a) {},
    "2f92": function(e, t, a) {},
    "2f99": function(e, t, a) {
        "use strict";
        a("f4d2")
    },
    3141: function(e, t, a) {
        "use strict";
        a("c202")
    },
    3174: function(e, t, a) {},
    "32be": function(e, t, a) {
        "use strict";
        a("b831")
    },
    3347: function(e, t, a) {},
    "33f2": function(e, t, a) {},
    "34d6": function(e, t, a) {
        "use strict";
        a("256c")
    },
    "35ee": function(e, t, a) {},
    "35ee6": function(e, t, a) {
        "use strict";
        a("841c9")
    },
    "36f6": function(e, t, a) {
        "use strict";
        a("39ca")
    },
    "380a": function(e, t, a) {
        "use strict";
        a("593f")
    },
    3812: function(e, t, a) {
        "use strict";
        a("02d7")
    },
    "38f3": function(e, t, a) {},
    "39a6": function(e, t, a) {},
    "39ca": function(e, t, a) {},
    "39f1": function(e, t, a) {
        "use strict";
        a("0add")
    },
    "3ba9": function(e, t, a) {
        "use strict";
        a("25f7")
    },
    "3bbd": function(e, t, a) {
        "use strict";
        a("98b9")
    },
    "3c6e": function(e, t, a) {
        "use strict";
        a("20d0")
    },
    "3d8f": function(e, t, a) {},
    "3e55": function(e, t, a) {},
    "3e98": function(e, t, a) {},
    "41df": function(e, t, a) {},
    4272: function(e, t, a) {
        "use strict";
        a("26f5")
    },
    4319: function(e, t, a) {},
    "43fe": function(e, t, a) {
        "use strict";
        a("0cce")
    },
    4678: function(e, t, a) {
        var i = {
            "./af": "2bfb",
            "./af.js": "2bfb",
            "./ar": "8e73",
            "./ar-dz": "a356",
            "./ar-dz.js": "a356",
            "./ar-kw": "423e",
            "./ar-kw.js": "423e",
            "./ar-ly": "1cfd",
            "./ar-ly.js": "1cfd",
            "./ar-ma": "0a84",
            "./ar-ma.js": "0a84",
            "./ar-sa": "8230",
            "./ar-sa.js": "8230",
            "./ar-tn": "6d83",
            "./ar-tn.js": "6d83",
            "./ar.js": "8e73",
            "./az": "485c",
            "./az.js": "485c",
            "./be": "1fc1",
            "./be.js": "1fc1",
            "./bg": "84aa",
            "./bg.js": "84aa",
            "./bm": "a7fa",
            "./bm.js": "a7fa",
            "./bn": "9043",
            "./bn-bd": "9686",
            "./bn-bd.js": "9686",
            "./bn.js": "9043",
            "./bo": "d26a",
            "./bo.js": "d26a",
            "./br": "6887",
            "./br.js": "6887",
            "./bs": "2554",
            "./bs.js": "2554",
            "./ca": "d716",
            "./ca.js": "d716",
            "./cs": "3c0d",
            "./cs.js": "3c0d",
            "./cv": "03ec",
            "./cv.js": "03ec",
            "./cy": "9797",
            "./cy.js": "9797",
            "./da": "0f14",
            "./da.js": "0f14",
            "./de": "b469",
            "./de-at": "b3eb",
            "./de-at.js": "b3eb",
            "./de-ch": "bb71",
            "./de-ch.js": "bb71",
            "./de.js": "b469",
            "./dv": "598a",
            "./dv.js": "598a",
            "./el": "8d47",
            "./el.js": "8d47",
            "./en-au": "0e6b",
            "./en-au.js": "0e6b",
            "./en-ca": "3886",
            "./en-ca.js": "3886",
            "./en-gb": "39a6b",
            "./en-gb.js": "39a6b",
            "./en-ie": "e1d3",
            "./en-ie.js": "e1d3",
            "./en-il": "7333",
            "./en-il.js": "7333",
            "./en-in": "ec2e",
            "./en-in.js": "ec2e",
            "./en-nz": "6f50",
            "./en-nz.js": "6f50",
            "./en-sg": "b7e9",
            "./en-sg.js": "b7e9",
            "./eo": "65db",
            "./eo.js": "65db",
            "./es": "898b",
            "./es-do": "0a3c",
            "./es-do.js": "0a3c",
            "./es-mx": "b5b7",
            "./es-mx.js": "b5b7",
            "./es-us": "55c9",
            "./es-us.js": "55c9",
            "./es.js": "898b",
            "./et": "ec18",
            "./et.js": "ec18",
            "./eu": "0ff2",
            "./eu.js": "0ff2",
            "./fa": "8df4",
            "./fa.js": "8df4",
            "./fi": "81e9",
            "./fi.js": "81e9",
            "./fil": "d69a",
            "./fil.js": "d69a",
            "./fo": "0721",
            "./fo.js": "0721",
            "./fr": "9f26",
            "./fr-ca": "d9f8",
            "./fr-ca.js": "d9f8",
            "./fr-ch": "0e49",
            "./fr-ch.js": "0e49",
            "./fr.js": "9f26",
            "./fy": "7118",
            "./fy.js": "7118",
            "./ga": "5120",
            "./ga.js": "5120",
            "./gd": "f6b4",
            "./gd.js": "f6b4",
            "./gl": "8840",
            "./gl.js": "8840",
            "./gom-deva": "aaf2",
            "./gom-deva.js": "aaf2",
            "./gom-latn": "0caa",
            "./gom-latn.js": "0caa",
            "./gu": "e0c5",
            "./gu.js": "e0c5",
            "./he": "c7aa",
            "./he.js": "c7aa",
            "./hi": "dc4d",
            "./hi.js": "dc4d",
            "./hr": "4ba9",
            "./hr.js": "4ba9",
            "./hu": "5b14",
            "./hu.js": "5b14",
            "./hy-am": "d6b6",
            "./hy-am.js": "d6b6",
            "./id": "5038",
            "./id.js": "5038",
            "./is": "0558",
            "./is.js": "0558",
            "./it": "6e98",
            "./it-ch": "6f12",
            "./it-ch.js": "6f12",
            "./it.js": "6e98",
            "./ja": "079e",
            "./ja.js": "079e",
            "./jv": "b540",
            "./jv.js": "b540",
            "./ka": "201b",
            "./ka.js": "201b",
            "./kk": "6d79",
            "./kk.js": "6d79",
            "./km": "e81d",
            "./km.js": "e81d",
            "./kn": "3e92",
            "./kn.js": "3e92",
            "./ko": "22f8",
            "./ko.js": "22f8",
            "./ku": "2421",
            "./ku.js": "2421",
            "./ky": "9609",
            "./ky.js": "9609",
            "./lb": "440c",
            "./lb.js": "440c",
            "./lo": "b29d",
            "./lo.js": "b29d",
            "./lt": "26f9",
            "./lt.js": "26f9",
            "./lv": "b97c",
            "./lv.js": "b97c",
            "./me": "293c",
            "./me.js": "293c",
            "./mi": "688b",
            "./mi.js": "688b",
            "./mk": "6909",
            "./mk.js": "6909",
            "./ml": "02fb",
            "./ml.js": "02fb",
            "./mn": "958b",
            "./mn.js": "958b",
            "./mr": "39bd",
            "./mr.js": "39bd",
            "./ms": "ebe4",
            "./ms-my": "6403",
            "./ms-my.js": "6403",
            "./ms.js": "ebe4",
            "./mt": "1b45",
            "./mt.js": "1b45",
            "./my": "8689",
            "./my.js": "8689",
            "./nb": "6ce3",
            "./nb.js": "6ce3",
            "./ne": "3a39",
            "./ne.js": "3a39",
            "./nl": "facd",
            "./nl-be": "db29",
            "./nl-be.js": "db29",
            "./nl.js": "facd",
            "./nn": "b84c",
            "./nn.js": "b84c",
            "./oc-lnc": "167b",
            "./oc-lnc.js": "167b",
            "./pa-in": "f3ff",
            "./pa-in.js": "f3ff",
            "./pl": "8d57",
            "./pl.js": "8d57",
            "./pt": "f260",
            "./pt-br": "d2d4",
            "./pt-br.js": "d2d4",
            "./pt.js": "f260",
            "./ro": "972c",
            "./ro.js": "972c",
            "./ru": "957c",
            "./ru.js": "957c",
            "./sd": "6784",
            "./sd.js": "6784",
            "./se": "ffff",
            "./se.js": "ffff",
            "./si": "eda5",
            "./si.js": "eda5",
            "./sk": "7be6",
            "./sk.js": "7be6",
            "./sl": "8155",
            "./sl.js": "8155",
            "./sq": "c8f3",
            "./sq.js": "c8f3",
            "./sr": "cf1e",
            "./sr-cyrl": "13e9",
            "./sr-cyrl.js": "13e9",
            "./sr.js": "cf1e",
            "./ss": "52bd",
            "./ss.js": "52bd",
            "./sv": "5fbd",
            "./sv.js": "5fbd",
            "./sw": "74dc",
            "./sw.js": "74dc",
            "./ta": "3de5",
            "./ta.js": "3de5",
            "./te": "5cbb",
            "./te.js": "5cbb",
            "./tet": "576c",
            "./tet.js": "576c",
            "./tg": "3b1b",
            "./tg.js": "3b1b",
            "./th": "10e8",
            "./th.js": "10e8",
            "./tk": "5aff",
            "./tk.js": "5aff",
            "./tl-ph": "0f38",
            "./tl-ph.js": "0f38",
            "./tlh": "cf75",
            "./tlh.js": "cf75",
            "./tr": "0e81",
            "./tr.js": "0e81",
            "./tzl": "cf51",
            "./tzl.js": "cf51",
            "./tzm": "c109",
            "./tzm-latn": "b53d",
            "./tzm-latn.js": "b53d",
            "./tzm.js": "c109",
            "./ug-cn": "6117",
            "./ug-cn.js": "6117",
            "./uk": "ada2",
            "./uk.js": "ada2",
            "./ur": "5294",
            "./ur.js": "5294",
            "./uz": "2e8c",
            "./uz-latn": "010e",
            "./uz-latn.js": "010e",
            "./uz.js": "2e8c",
            "./vi": "2921",
            "./vi.js": "2921",
            "./x-pseudo": "fd7e",
            "./x-pseudo.js": "fd7e",
            "./yo": "7f33",
            "./yo.js": "7f33",
            "./zh-cn": "5c3a",
            "./zh-cn.js": "5c3a",
            "./zh-hk": "49ab",
            "./zh-hk.js": "49ab",
            "./zh-mo": "3a6c",
            "./zh-mo.js": "3a6c",
            "./zh-tw": "90ea",
            "./zh-tw.js": "90ea"
        };

        function s(e) {
            var t = n(e);
            return a(t)
        }

        function n(e) {
            if (!a.o(i, e)) {
                var t = new Error("Cannot find module '" + e + "'");
                throw t.code = "MODULE_NOT_FOUND", t
            }
            return i[e]
        }
        s.keys = function() {
            return Object.keys(i)
        }, s.resolve = n, e.exports = s, s.id = "4678"
    },
    4867: function(e, t, a) {
        "use strict";
        a("e8e7")
    },
    4941: function(e, t, a) {
        "use strict";
        a("e9b2")
    },
    "4a78": function(e, t, a) {},
    "4ab4": function(e, t, a) {},
    "4ae5": function(e, t, a) {
        "use strict";
        a("9b06")
    },
    "4b17": function(e, t, a) {
        "use strict";
        a("29ee")
    },
    "4b8b": function(e, t, a) {},
    "4bd2": function(e, t, a) {},
    "4c80": function(e, t, a) {},
    "4d26": function(e, t, a) {},
    "4e31": function(e, t, a) {
        "use strict";
        a("6e8d")
    },
    "507e": function(e, t, a) {},
    "510c": function(e, t, a) {},
    5177: function(e, t, a) {
        "use strict";
        a("0b6b")
    },
    "51fc": function(e, t, a) {
        "use strict";
        a("fee6")
    },
    "52f6": function(e, t, a) {},
    "53cd": function(e, t, a) {},
    "543d": function(e, t, a) {
        "use strict";
        a("aecd")
    },
    5560: function(e, t, a) {
        "use strict";
        a("2318")
    },
    5566: function(e, t, a) {
        "use strict";
        a("7d99")
    },
    5595: function(e, t, a) {
        "use strict";
        a("1eb1")
    },
    "56d7": function(e, t, a) {
        "use strict";
        a.r(t);
        var i = a("b85c"),
            s = (a("e260"), a("e6cf"), a("cca6"), a("a79d"), a("b0c0"), a("2b0e")),
            n = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.show,
                        expression: "show"
                    }],
                    staticClass: "ui"
                }, [t("PlayerHud"), t(e.openInterface, {
                    tag: "component",
                    attrs: {
                        data: e.data
                    },
                    on: {
                        changeinterface: e.showInterface
                    }
                }), t("Voice"), t("Chat"), t("Bar"), t("XMenu"), t("Licence"), t("Funk"), t("Phone"), t("VehicleHud"), t("PlayTimeHud"), t("PlayerNotify"), t("GlobalNotify"), t("GangwarHud")], 1)
            },
            r = [],
            o = a("5530"),
            c = (a("ac1f"), a("841c"), function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    attrs: {
                        title: "Dev BaseComponents"
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "dev-baseinput d-flex flex-row text-white mb-4"
                }, [t("span", {
                    staticClass: "mr-4"
                }, [e._v("Button")]), t("BaseButton", [e._v("Button")])], 1), t("div", {
                    staticClass: "dev-baseinput d-flex flex-row text-white"
                }, [t("span", {
                    staticClass: "mr-4"
                }, [e._v("Input")]), t("BaseInput", {
                    staticClass: "search",
                    attrs: {
                        placeholder: "Fahrzeug suchen"
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "dev-baseinput d-flex flex-row text-white mt-4"
                }, [t("span", {
                    staticClass: "mr-4"
                }, [e._v("Textarea")]), t("textarea")]), t("div", {
                    staticClass: "dev-baseinput d-flex flex-row text-white mt-4"
                }, [t("span", {
                    staticClass: "mr-4"
                }, [e._v("Popup")]), t("BasePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.popup,
                        expression: "popup"
                    }],
                    staticClass: "d-block",
                    attrs: {
                        header: "BasePopup",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.cancelJobConfirm
                    }
                })], 1), t("div", {
                    staticClass: "dev-baseinput d-flex flex-row text-white mt-4"
                }, [t("span", {
                    staticClass: "mr-4"
                }, [e._v("Table")]), t("BaseTable", [t("thead", [t("tr", [t("th", [e._v("Erster")]), t("th", [e._v("Zweiter")]), t("th", [e._v("Dritter")])])]), t("tbody", {
                    staticClass: "scrollable",
                    staticStyle: {
                        height: "32rem"
                    }
                }, [t("tr", [t("td", [e._v("Eins")]), t("td", [e._v("Eins")]), t("td", [e._v("Eins")])]), t("tr", [t("td", [e._v("Eins")]), t("td", [e._v("Eins")]), t("td", [e._v("Eins")])])])])], 1)])
            }),
            l = [],
            u = {
                name: "DevDebug",
                props: {
                    data: {}
                },
                data: function() {
                    return {}
                },
                methods: {},
                created: function() {},
                mounted: function() {},
                computed: {}
            },
            m = u,
            d = a("2877"),
            h = Object(d["a"])(m, c, l, !1, null, null, null),
            _ = h.exports,
            p = (a("b64b"), a("07ac"), a("5319"), a("d3b7"), a("25f0"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "inventory"
                }, [e.invdata.w && e.itemData ? t("div", {
                    staticClass: "inventory-weapons"
                }, [e.invdata.w.length ? t("div", {
                    staticClass: "inventory-weapons-box"
                }, [e._m(0), e._l(e.invdata.w, (function(a) {
                    return t("div", {
                        key: Object.keys(a)[0],
                        staticClass: "inventory-weapons-weapon",
                        style: {
                            backgroundImage: "url(images/inventoy/items/" + Object.keys(a)[0] + ")"
                        }
                    }, [t("div", {
                        staticClass: "inventory-weapons-weapon-amount"
                    }, [e._v(" " + e._s(Object.values(a)[0]) + " ")]), t("div", {
                        staticClass: "inventory-weapons-weapon-drop"
                    }, [t("span", {
                        staticClass: "mdi mdi-close",
                        on: {
                            click: function(t) {
                                e.removeWeapon(e.invdata.i[1].i, Object.keys(a)[0])
                            }
                        }
                    })])])
                }))], 2) : t("div", {
                    staticClass: "inventory-weapons-box"
                }, [e._m(1), t("div", {
                    staticClass: "inventory-weapons-weapon"
                }, [e._v(" Keine Waffen ")])])]) : e._e(), t("div", {
                    staticClass: "inventory-main"
                }, [t("div", {
                    staticClass: "inventory-box"
                }, [t("div", {
                    staticClass: "inventory-header"
                }, [t("div", {
                    staticClass: "inventory-header-title"
                }, [e._v(" " + e._s(e.inventoryType[e.invdata.i[0].t]) + " "), t("span", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" !== e.tooltipPlayer,
                        expression: "tooltipPlayer !== ''"
                    }]
                }, [e._v("[ " + e._s(e.tooltipPlayer) + " ]")])]), t("div", {
                    staticClass: "inventory-header-space ml-auto"
                }, [e.itemData ? t("span", [e._v(" " + e._s((e.calculatePlayerWeight / 1e3).toString().replace(".", ",")) + " KG / " + e._s(e.invdata.i[0].MaxWeight / 1e3) + " KG ")]) : e._e()]), t("div", {
                    staticClass: "inventory-header-icons"
                }, [t("span", {
                    staticClass: "mdi mdi-pistol icon-button icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipPlayer = "Waffe packen"
                        },
                        click: function(t) {
                            return e.packGun(e.invdata.i[0].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-bag-personal icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipPlayer = "Rucksack packen"
                        },
                        click: function(t) {
                            return e.packBag(e.invdata.i[0].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-key icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipPlayer = "Schlüssel packen"
                        },
                        click: function(t) {
                            return e.openKeyInterface(e.invdata.i[0].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-shield icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipPlayer = "Schutzweste packen"
                        },
                        click: function(t) {
                            return e.packArmor(e.invdata.i[0].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-cash icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipPlayer = "Schwarzgeld packen"
                        },
                        click: function(t) {
                            return e.packblackmoney(e.invdata.i[0].i)
                        }
                    }
                }), t("span", {
                  staticClass: "mdi mdi-close icon",
                  on: {
                      mouseover: function(t) {
                          e.tooltipPlayer = "Inventar schließen"
                      },
                      click: function(t) {
                          return e.hide()
                      }
                  }
              })])]), t("div", {
                    staticClass: "inventory-body",
                    attrs: {
                        id: "0"
                    }
                }, e._l(e.invdata.i[0].s, (function(a) {
                    return t("div", {
                        key: a.id,
                        staticClass: "inventory-body-item item",
                        class: [{
                            empty: -1 == a.id
                        }],
                        style: {
                            backgroundImage: "url(images/inventoy/items/" + a.image + ")"
                        },
                        attrs: {
                            id: a.id,
                        },
                        on: {
                            mouseover: function(t) {
                                e.tooltipOther = "";
                                if (a.itemId != 0) {
                                    e.tooltipPlayer = a.name + " " + a.weight * a.amount / 1e3 + " KG";
                                    e.selectedItem = a.id;
                                } else {
                                    e.tooltipPlayer = "";
                                }
                                e.selectedItemId = a.itemId;
                            },
                        }
                    }, [a.amount > 0 ? t("span", [e._v(e._s(a.amount))]) : t("span")])
                })), 0)]), e.invdata.i.length > 1 ? t("div", {
                    staticClass: "inventory-box"
                }, [t("div", {
                    staticClass: "inventory-header"
                }, [t("div", {
                    staticClass: "inventory-header-title"
                }, [e._v(" " + e._s(e.inventoryType[e.invdata.i[1].t]) + " "), t("span", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.tooltipOther,
                        expression: "tooltipOther!=''"
                    }]
                }, [e._v("[ " + e._s(e.tooltipOther) + " ]")])]), e.itemData ? t("div", {
                    staticClass: "inventory-header-space ml-auto"
                }, [e._v(" " + e._s((e.calculateOtherWeight / 1e3).toString().replace(".", ",")) + " KG / " + e._s(e.invdata.i[1].w / 1e3) + " KG ")]) : e._e(), e.invdata.i[1].m ? t("div", {
                    staticClass: "inventory-header-money"
                }, [e._v(" " + e._s(e.invdata.i[1].m.toLocaleString("de-DE")) + " $ ")]) : e._e(), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: 1 == e.invdata.i[1].t,
                        expression: "data.i[1].t == 1"
                    }],
                    staticClass: "inventory-header-icons"
                }, [t("span", {
                    staticClass: "mdi mdi-shield icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipOther = "Schutzweste packen"
                        },
                        click: function(t) {
                            return e.packArmor(e.invdata.i[1].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-key icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipOther = "Schlüssel packen"
                        },
                        click: function(t) {
                            return e.openKeyInterface(e.invdata.i[1].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-radio-handheld icon-button icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipOther = "Funkgerät packen"
                        },
                        click: function(t) {
                            return e.packRadio(e.invdata.i[1].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-cellphone icon-button icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipOther = "Smartphone packen"
                        },
                        click: function(t) {
                            return e.packPhone(e.invdata.i[1].i)
                        }
                    }
                }), t("span", {
                    staticClass: "mdi mdi-bag-personal icon",
                    on: {
                        mouseover: function(t) {
                            e.tooltipOther = "Rucksack packen"
                        },
                        click: function(t) {
                            return e.packBag(e.invdata.i[1].i)
                        }
                    }
                })])]), t("div", {
                    staticClass: "inventory-body",
                    attrs: {
                        id: "1"
                    }
                }, e._l(e.invdata.i[1].s, (function(a) {
                    return t("div", {
                        key: a.id,
                        staticClass: "inventory-body-item item",
                        class: [{
                            empty: -1 == a.id
                        }],
                        style: {
                            backgroundImage: "url(images/inventoy/items/" + a.image + ")"
                        },
                        attrs: {
                            id: a.id
                        },
                        on: {
                            mouseover: function(t) {
                                e.tooltipPlayer = "";
                                if (a.itemId != 0) {
                                    e.tooltipOther = a.name + " " + a.weight * a.amount / 1e3 + " KG";
                                    e.selectedItem = a.id;
                                } else {
                                    e.tooltipOther = "";
                                }
                                e.selectedItemId = a.itemId;
                            },
                        }
                    }, [a.amount > 0 ? t("span", [e._v(e._s(a.amount))]) : t("span")])
                })), 0)]) : e._e()]), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showContextMenu,
                        expression: "showContextMenu"
                    }],
                    attrs: {
                        id: "contextmenu"
                    }
                }, [e.invdata.p ? e._e() : t("p", {
                    on: {
                        click: e.useItem
                    }
                }, [e._v("Benutzen")]), e.invdata.p ? t("p", {
                    on: {
                        click: e.giveItem
                    }
                }, [e._v("Geben")]) : t("p", {
                    on: {
                        click: e.dropItem
                    }
                }, [e._v("Wegwerfen")])]), t("CoreAmount", {
                    attrs: {
                        data: e.amountInput,
                        disabled: e.inputDisabled
                    },
                    on: {
                        confirm: e.confirmAmount,
                        change: e.changeAmount
                    }
                })], 1)
            }),
            v = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "inventory-weapons-title"
                }, [t("span", [e._v("Waffen")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "inventory-weapons-title"
                }, [t("span", [e._v("Waffen")])])
            }],
            f = a("c7eb"),
            b = a("1da1"),
            g = (a("4de4"), a("13d5"), function() {
                var e = this,
                    t = e._self._c;
                return e.data.show ? t("div", {
                    staticClass: "core-amount",
                    style: e.data.pos
                }, [t("div", {
                    staticClass: "core-amount-adjustments"
                }, [t("CoreButton", {
                    staticClass: "substract",
                    on: {
                        click: e.down
                    }
                }, [e._v("-")]), t("CoreInput", {
                    staticClass: "dark",
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.confirm.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.input,
                        callback: function(t) {
                            e.input = e._n(t)
                        },
                        expression: "input"
                    }
                }), t("span", [e._v(" / " + e._s(e.data.max))]), t("CoreButton", {
                    staticClass: "add",
                    on: {
                        click: e.up
                    }
                }, [e._v("+")])], 1), t("div", {
                    staticClass: "core-amount-confirmations"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.confirm
                    }
                }, [e._v(e._s(e.data.type))]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.cancel
                    }
                }, [e._v("Abbrechen")])], 1)]) : e._e()
            }),
            y = [],
            C = function() {
                var e = this,
                    t = e._self._c;
                return t("button", {
                    staticClass: "core-button",
                    on: {
                        click: e.click
                    }
                }, [e._t("default")], 2)
            },
            k = [],
            w = {
                name: "CoreButton",
                methods: {
                    click: function() {
                        this.$emit("click")
                    }
                }
            },
            S = w,
            M = (a("39f1"), Object(d["a"])(S, C, k, !1, null, "3b5d341f", null)),
            x = M.exports,
            P = function() {
                var e = this,
                    t = e._self._c;
                return t("input", {
                    staticClass: "core-input",
                    attrs: {
                        type: e.type,
                        autocomplete: "off",
                        placeholder: e.placeholder,
                        disabled: e.disabled,
                        min: e.minValue,
                        max: e.maxValue,
                        step: e.stepValue
                    },
                    domProps: {
                        value: e.value
                    },
                    on: {
                        input: function(t) {
                            return e.$emit("input", t.target.value)
                        }
                    }
                })
            },
            T = [],
            F = (a("a9e3"), {
                name: "CoreInput",
                props: {
                    value: {
                        type: [String, Number]
                    },
                    type: {
                        type: String
                    },
                    placeholder: {
                        type: String
                    },
                    disabled: {
                        type: [String, Boolean]
                    },
                    minValue: {
                        type: [String, Number]
                    },
                    maxValue: {
                        type: [String, Number]
                    },
                    stepValue: {
                        type: [String, Number]
                    }
                },
                methods: {
                    focus: function() {
                        this.$refs.input.focus()
                    },
                    blur: function() {
                        this.$refs.input.blur()
                    }
                }
            }),
            B = F,
            I = (a("918c"), Object(d["a"])(B, P, T, !1, null, "554cad98", null)),
            A = I.exports,
            D = {
                name: "CoreAmount",
                components: {
                    CoreInput: A,
                    CoreButton: x
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    },
                    disabled: {
                        type: Boolean,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        input: 0
                    }
                },
                methods: {
                    confirm: function() {
                        this.data.show = !1, this.$emit("confirm", this.input)
                    },
                    cancel: function() {
                        this.data.show = !1, this.$emit("confirm"), this.input = 0
                    },
                    up: function() {
                        this.disabled || this.input >= this.data.max || this.input++
                    },
                    down: function() {
                        this.input < 1 || this.input--
                    }
                },
                watch: {
                    input: function(e) {
                        e = parseInt(e), isNaN(e) && (e = 0), e < 0 || e > this.data.max || this.$emit("change", e)
                    },
                    data: function(e) {
                        e.show && (this.input = this.data.max)
                    }
                }
            },
            N = D,
            O = (a("12d9"), Object(d["a"])(N, g, y, !1, null, "48a356e5", null)),
            L = O.exports,
            H = {
                name: "Inventory",
                components: {
                    CoreAmount: L
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        invdata: JSON.parse(this.data),
                        selectedElement: null,
                        targetElement: null,
                        selectedItem: 0,
                        hoverElement: null,
                        tooltipPlayer: "",
                        tooltipOther: "",
                        startPosition: 0,
                        startPositionY: 0,
                        currentPosition: 0,
                        currentPositionY: 0,
                        distancePosition: 0,
                        distancePositionY: 0,
                        isMouseDown: !1,
                        needForRAF: !0,
                        showContextMenu: !1,
                        itemData: JSON.parse(this.data).itemdata,
                        amountInput: {},
                        movementDisabled: !1,
                        inputDisabled: !1,
                        inventoryType: ["Inventar", "Rucksack", "Fahrzeug", "Haus", "Spind", "Lagerhalle", "Camper", "Exporthandel Danielo Alberto", "FarmingMachine", "FIB Forensische Analyse", "Schließfach", "Fahrzeuginnenraum", "Tresor", "Fraktionslager", "Asservatenkammer", "Container", "Darknet Lieferung", "Garage"],
                        selectedItemId: 0
                    }
                },
                methods: {
                    getSlot: function(e, t) {
                        return e.s[t]
                    },
                    getInventories: function(e, t) {
                        var a = {
                            selectedInventoryType: e,
                            targetInventoryType: t
                        };
                        return e == t ? (a.selectedInventory = this.invdata.i[e], a.targetInventory = this.invdata.i[e]) : 0 == e ? (a.selectedInventory = this.invdata.i[e], a.targetInventory = this.invdata.i[1]) : (a.selectedInventory = this.invdata.i[e], a.targetInventory = this.invdata.i[0]), a
                    },
                    mouseDown: function(e) {
                        if (this.selectedItemId == 0) {
                            return;
                        }

                        "P" != e.target.nodeName && (this.showContextMenu = !1), this.movementDisabled || 2 === e.which || 3 === e.which || e.target.classList.contains("empty") || !e.target.classList.contains("item") || (this.isMouseDown = !0, this.selectedElement = e.target, this.selectedElement.style.zIndex = 100, this.currentPosition = this.getTranslateX(), this.currentPositionY = this.getTranslateY(), this.startPosition = e.clientX, this.startPositionY = e.clientY)
                    },
                    mouseMove: function(e) {
                        if (this.isMouseDown) {
                            this.distancePosition = e.clientX - this.startPosition + this.currentPosition, this.distancePositionY = e.clientY - this.startPositionY + this.currentPositionY, this.needForRAF = !1, this.selectedElement.style.transform = "translate(" + this.distancePosition + "px, " + this.distancePositionY + "px)", this.selectedElement.style.removeProperty("absolute");
                            var t = this.getTargetElement(e.clientX, e.clientY);
                            if (null == t) return;
                            t.classList.add("hover"), t.style.removeProperty("absolute"), this.hoverElement != t && (null != this.hoverElement && (this.hoverElement.classList.remove("hover"), this.hoverElement.style.removeProperty("absolute")), this.hoverElement = t)
                        }
                    },
                    mouseUp: function(e) {
                        if (this.isMouseDown = !1, this.needForRAF = !0, null != this.selectedElement) {
                            if (this.selectedElement.style.removeProperty("transform"), this.selectedElement.style.removeProperty("z-index"), this.selectedElement.style.removeProperty("absolute"), this.targetElement = this.hoverElement, null != this.targetElement && this.selectedElement.parentNode.classList.contains("inventory-body")) {
                                var t = this.selectedElement.parentNode.id,
                                    a = this.targetElement.parentNode.id,
                                    i = this.getInventories(t, a),
                                    s = this.getSlot(i.selectedInventory, this.selectedElement.id),
                                    n = this.getSlot(i.targetInventory, this.targetElement.id);
                                if (e.shiftKey && s.amount > 1 && 0 == n.itemId) this.toggleAmountInput("Teilen", s, n, i, e.target.offsetLeft + e.offsetX, e.target.offsetTop + e.offsetY);
                                else if (null != this.targetElement) {
                                    if (void 0 == n || this.isEqualSlot(s, n, i)) return;
                                    s.itemId == n.itemId && s.customData == n.customData && this.selectedElement != this.targetElement ? this.stackElements(s, n, i) : this.switchElements(s, n, i)
                                }
                            } else {
                                var r = document.elementFromPoint(e.clientX, e.clientY);
                                r.classList.contains("ui") && this.toggleAmountInput("Wegwerfen", this.invdata.i[this.selectedElement.parentNode.id].s[this.selectedElement.id], {}, this.invdata.i[this.selectedElement.parentNode.id].i, e.target.offsetLeft + e.offsetX, e.target.offsetTop + e.offsetY)
                            }
                            null != this.targetElement && (this.selectedElement = null, this.targetElement = null), null != this.hoverElement && (this.hoverElement.classList.remove("hover"), this.hoverElement = null)
                        }
                    },
                    contextMenu: function(e) {
                        if (this.selectedItemId == 0) {
                            this.showContextMenu = false;
                            return;
                        }
                        e.preventDefault(), !e.target.classList.contains("empty") && e.target.classList.contains("item") && (this.showContextMenu = !0, window.contextmenu.style.left = e.target.offsetLeft + e.offsetX + "px", window.contextmenu.style.top = e.target.offsetTop + e.offsetY + "px", this.selectedElement = e.target)
                    },
                    toggleAmountInput: function(e, t, a, i, s, n) {
                        this.movementDisabled = !0, this.amountInput = {
                            show: !0,
                            type: e,
                            oldSlot: t,
                            newSlot: a,
                            inv: i,
                            max: t.amount,
                            itemId: t.itemId,
                            newInvWeight: this.invdata.i.length > 1 ? this.calculateOtherWeight : 0,
                            pos: {
                                position: "absolute",
                                left: s + "px",
                                top: n + "px"
                            }
                        }
                    },
                    confirmAmount: function(e) {
                        this.movementDisabled = !1, void 0 != e && (e < 1 || ("Teilen" == this.amountInput.type ? this.splitItem(this.amountInput.oldSlot, this.amountInput.newSlot, this.amountInput.inv, e) : "Wegwerfen" == this.amountInput.type ? (this.amountInput.oldSlot.amount -= e, this.amountInput.oldSlot.amount < 1 && (this.amountInput.oldSlot.itemId = 0), this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("DropItemOutOfWindow", this.amountInput.inv, this.amountInput.oldSlot.id, e)) : "Geben" == this.amountInput.type && (this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("GiveItem", this.amountInput.oldSlot.id, e), this.hide())))
                    },
                    changeAmount: function(e) {
                        if ("Wegwerfen" != this.amountInput.type && "Geben" != this.amountInput.type) {
                            var t = this.amountInput.newInvWeight + this.itemData[this.amountInput.itemId].weight * e;
                            t > this.invdata.i[this.amountInput.inv.targetInventoryType].weight && this.amountInput.inv.selectedInventory.i != this.amountInput.inv.targetInventory.i || (this.inputDisabled = !1, this.amountInput.newSlot.amount = e, this.amountInput.oldSlot.amount = this.amountInput.max - e, this.amountInput.newSlot.amount < 1 ? this.amountInput.newSlot.itemId = 0 : this.amountInput.newSlot.itemId = this.amountInput.itemId, this.amountInput.oldSlot.amount < 1 ? this.amountInput.oldSlot.itemId = 0 : this.amountInput.oldSlot.itemId = this.amountInput.itemId, (0 == this.amountInput.inv.targetInventoryType ? this.calculatePlayerWeight : this.calculateOtherWeight) != this.invdata.i[this.amountInput.inv.targetInventoryType].w || this.amountInput.inv.selectedInventory.i == this.amountInput.inv.targetInventory.i || (this.inputDisabled = !0))
                        }
                    },
                    mouseOverPlayer: function(e) {
                        if (e.target.classList.contains("item")) {
                            var t = this.invdata.i[0].s[e.target.id],
                                a = t.id,
                                i = t.name;
                            if (void 0 == i) return void(this.tooltipPlayer = 0 == a ? "" : t.name + " " + t.weight * t.amount / 1e3 + " KG");
                            var s = i.split(";"),
                                n = t.name;
                            for (var r in s) {
                                if (void 0 == n) return;
                                n = n.replace("{".concat(r, "}"), s[r])
                            }
                            console.log(t.name);
                            this.tooltipPlayer = n + " " + t.weight * t.amount / 1e3 + " KG"
                        }
                    },
                    mouseOverOther: function(e) {
                        if (e.target.classList.contains("item")) {
                            var t = this.invdata.i[1].s[e.target.id],
                                a = t.id,
                                i = t.name;
                            if (void 0 == i) return void(this.tooltipOther = 0 == a ? "" : t.name + " " + t.weight * t.amount / 1e3 + " KG");
                            var s = i.split(";"),
                                n = t.name;
                            for (var r in s) {
                                if (void 0 == n) return;
                                n = n.replace("{".concat(r, "}"), s[r])
                            }
                            this.tooltipOther = n + " " + t.weight * t.amount / 1e3 + " KG"
                        }
                    },
                    isEqualSlot: function(e, t, a) {
                        return e.id == t.id && a.selectedInventory.i == a.targetInventory.i
                    },
                    getTranslateX: function() {
                        return parseInt(getComputedStyle(this.selectedElement, null).getPropertyValue("transform").split(",")[4])
                    },
                    getTranslateY: function() {
                        return parseInt(getComputedStyle(this.selectedElement, null).getPropertyValue("transform").split(",")[5])
                    },
                    getTargetElement: function(e, t) {
                        var a, s = Object(i["a"])(document.elementsFromPoint(e, t));
                        try {
                            for (s.s(); !(a = s.n()).done;) {
                                var n = a.value;
                                if (n != this.selectedElement && n.classList.contains("item")) return n
                            }
                        } catch (r) {
                            s.e(r)
                        } finally {
                            s.f()
                        }
                        return null
                    },
                    switchElements: function(e, t, a) {
                        var i = a.selectedInventory,
                            s = a.targetInventory,
                            n = a.selectedInventoryType,
                            r = a.targetInventoryType;
                        if (i.i == s.i) {
                            this.emitServer("moveItemInInventory", parseInt(this.selectedElement.id), parseInt(this.targetElement.id), e.amount, i.i, s.i), this.$set(i.s, this.selectedElement.id, t), this.$set(i.s, this.targetElement.id, e);
                            var o = e.id;
                            e.id = t.id, t.id = o
                        } else {
                            var c = e.weight * e.amount,
                                l = t.weight * t.amount,
                                u = 0 == n ? this.calculatePlayerWeight : this.calculateOtherWeight,
                                m = 0 == r ? this.calculatePlayerWeight : this.calculateOtherWeight,
                                d = u + l - c,
                                h = m + c - l;
                                this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("MoveItem", parseInt(this.selectedElement.id), parseInt(this.targetElement.id), i.i, s.i), this.$set(i.s, this.selectedElement.id, t), this.$set(s.s, this.targetElement.id, e);
                                var _ = e.id;
                                e.id = t.id, t.id = _
                        }
                    },
                    stackElements: function(e, t, a) {
                        var i = a.selectedInventory,
                            s = a.targetInventory,
                            n = a.selectedInventoryType,
                            r = a.targetInventoryType,
                            o = e.weight * e.amount,
                            c = 0 == r ? this.calculatePlayerWeight : this.calculateOtherWeight,
                            l = c + o;
                        (i.i == s.i || l <= this.invdata.i[r].w) && this.stackItems(e, t, {
                            selectedInventory: i,
                            targetInventory: s,
                            selectedInventoryType: n,
                            targetInventoryType: r
                        })
                    },
                    stackItems: function(e, t, a) {
                        var i = a.selectedInventory,
                            s = a.targetInventory,
                            n = a.selectedInventoryType,
                            r = a.targetInventoryType,
                            o = e.amount + t.amount,
                            c = t.maxStack;
                        t.amount != c && e.amount != c ? (o <= c ? (e.itemId = 0, e.amount = 0, t.amount = o) : (e.amount = o - c, t.amount = c), i.i != s.i && this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("MoveItem", parseInt(this.selectedElement.id), parseInt(this.targetElement.id), i.i, s.i)) : this.switchElements(e, t, {
                            selectedInventory: i,
                            targetInventory: s,
                            selectedInventoryType: n,
                            targetInventoryType: r
                        })
                    },
                    splitItem: function(e, t, a, i) {
                        if (i == this.amountInput.max) return a.selectedInventory.i != a.targetInventory.i && this.emit("PlayAnim", "mp_common", "givetake2_a", 48), void this.emitServer("MoveItem", e.id, t.id, a.selectedInventory.i, a.targetInventory.i);
                        i < this.amountInput.max && (a.selectedInventory.i != a.targetInventory.i && this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("SplitItem", e.id, t.id, a.selectedInventory.i, a.targetInventory.i, i))
                    },
                    update: function() {
                        this.needForRAF = !0, null != this.selectedElement && (this.selectedElement.style.transform = "translate(" + this.distancePosition + "px, " + this.distancePositionY + "px)")
                    },
                    useItem: function() {

                     console.log("useInventoryItem | " + this.selectedItem)
                        this.emitServer("useInventoryItem", this.selectedItem), this.showContextMenu = !1, this.selectedElement = null, this.hide()
                    },
                    dropItem: function(e) {

                        var t = {};
                        this.invdata.i[0].s.forEach ((a, i) => {
                            if (a.id == this.selectedItem) {
                                t = a;
                            }
                          });
                        this.emit("PlayAnim", "mp_common", "givetake2_a", 48), this.emitServer("DropItem", this.selectedItem, e.shiftKey ? t.amount : 1), t.amount -= e.shiftKey ? t.amount : 1, 0 == t.amount && (t.itemId = 0), this.showContextMenu = !1, this.selectedElement = null
                    },
                    giveItem: function(e) {
                        var t = {};
                        this.invdata.i[0].s.forEach ((a, i) => {

                            console.log("" + a.id);
                            if (a.id == this.selectedItem) {
                                console.log("RIGHT: " + a.id);

                                t = a;
                            }
                          });
                        this.toggleAmountInput("Geben", this.invdata.i[this.selectedElement.parentNode.id].s[this.selectedElement.id], t, this.invdata.i[this.selectedElement.parentNode.id].i, 0, 0)
                    },
                    packGun: function(e) {
                        this.emitServer("packGun"), this.hide()
                    },
                    packblackmoney: function(e) {
                        this.emitServer("packblackmoney"), this.hide()
                    },
                    packBag: function(e) {

                        this.emitServer("PackBag", e), this.hide()
                    },
                    packPhone: function(e) {

                        this.emitServer("PackPhone", e), this.hide()
                    },
                    packRadio: function(e) {

                        this.emitServer("PackRadio", e), this.hide()
                    },
                    openKeyInterface: function(e) {

                        this.emitServer("ShowVehicleKeys", e), this.hide()
                    },
                    packArmor: function(e) {

                        this.emitServer("packArmor"), this.hide()
                    },
                    removeWeapon: function(e, t) {

                        this.data.w = this.data.w.filter((function(e) {
                            return Object.keys(e)[0] != t
                        })), this.emitServer("RemoveItem", e, parseInt(t))
                    }
                },
                computed: {
                    calculatePlayerWeight: function() {
                        var e = this;
                        return this.invdata.i[0].s.reduce((function(t, a) {
                            return t + e.weight * a.amount
                        }), 0)
                    },
                    calculateOtherWeight: function() {
                        var e = this;
                        return this.invdata.i[1].s.reduce((function(t, a) {
                            return t + e.weight * a.amount
                        }), 0)
                    }
                },
                created: function() {
                    var e = this;
                },
                mounted: function() {
                    document.addEventListener("mousedown", this.mouseDown), document.addEventListener("mousemove", this.mouseMove), document.addEventListener("mouseup", this.mouseUp), document.addEventListener("contextmenu", this.contextMenu)
                },
                destroyed: function() {
                    document.removeEventListener("mousedown", this.mouseDown), document.removeEventListener("mousemove", this.mouseMove), document.removeEventListener("mouseup", this.mouseUp), document.removeEventListener("contextmenu", this.contextMenu)
                }
            },
            z = H,
            j = (a("2c60"), Object(d["a"])(z, p, v, !1, null, "3503c754", null)),
            R = j.exports,
            V = (a("4e82"), a("caad"), a("2532"), function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Garage: " + e.garageData.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "garage"
                }, [t("div", {
                    staticClass: "garage-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: this.outPark
                    },
                    on: {
                        click: function(t) {
                            return e.displayOutparkVehicles()
                        }
                    }
                }, [e._v("Ausparken")]), t("CoreButton", {
                    class: {
                        active: !this.outPark
                    },
                    on: {
                        click: function(t) {
                            return e.displayInparkVehicles()
                        }
                    }
                }, [e._v("Einparken")]), !0 === this.garageData.hg ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.requestOpenStorage()
                        }
                    }
                }, [e._v("Lagerraum")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "garage-body"
                }, [t("div", {
                    staticClass: "garage-body-search"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Fahrzeug suchen"
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "garage-body-table"
                }, e._l(e.searchedVehicles.sort((function(t, a) {
                    return e.favorites.includes(t.i) ? e.favorites.includes(a.i) ? t.i - a.i : -1 : 1
                })), (function(a) {
                    return t("CoreItemBox", {
                        key: a.i,
                        staticClass: "h-33 w-10-5"
                    }, [t("div", {
                        attrs: {
                            slot: "details-title"
                        },
                        slot: "details-title"
                    }, [e._v(e._s(a.n) + " [" + e._s(a.i) + "]")]), t("div", {
                        attrs: {
                            slot: "details-description"
                        },
                        slot: "details-description"
                    }, [a.no ? t("div", {
                        staticClass: "text-light"
                    }, [e._v(e._s(a.no))]) : t("div", {
                        staticClass: "text-dark"
                    }, [e._v("Keine Notiz")])]), t("div", {
                        staticClass: "garage-body-icons",
                        attrs: {
                            slot: "image"
                        },
                        slot: "image"
                    }, [t("span", {
                        staticClass: "garage-body-favorite-icon mdi",
                        class: {
                            "mdi-star": e.favorites.includes(a.i),
                            "mdi-star-outline": !e.favorites.includes(a.i)
                        },
                        on: {
                            click: function(t) {
                                return e.toggleFavoriteVehicle(a.i)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi",
                        class: {
                            "mdi-car-arrow-right": e.outPark,
                            "mdi-car-arrow-left": !e.outPark
                        },
                        on: {
                            click: function(t) {
                                return e.handleVehicle(a)
                            }
                        }
                    })])])
                })), 1)])])])
            }),
            E = [],
            G = (a("a434"), a("14d9"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface"
                }, [t("div", {
                    staticClass: "core-interface-header"
                }, [t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.back,
                        expression: "back"
                    }],
                    staticClass: "core-interface-header-back",
                    on: {
                        click: function(t) {
                            return e.show("Self")
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-arrow-left"
                })]), t("div", {
                    staticClass: "core-interface-header-title"
                }, [e._v(" " + e._s(e.title) + " ")]), e.additionalButtonText ? t("div", {
                    staticClass: "core-interface-header-buttons",
                    on: {
                        click: e.additionalButtonClick
                    }
                }, [t("span", [e._v(e._s(e.additionalButtonText))])]) : e._e(), e.closeable ? t("div", {
                    staticClass: "core-interface-header-actions",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })]) : e._e()]), t("div", {
                    staticClass: "core-interface-body"
                }, [e._t("default")], 2)])
            }),
            W = [],
            K = a("2909"),
            U = (a("fb6a"), a("99af"), {
                name: "CoreInterface",
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    closeable: {
                        type: Boolean,
                        required: !1
                    },
                    back: {
                        type: Boolean,
                        required: !1
                    },
                    additionalButtonText: {
                        type: String,
                        required: !1
                    },
                    additionalButtonArgs: {
                        type: Array,
                        required: !1
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    },
                    additionalButtonClick: function() {
                        var e = this.additionalButtonArgs.slice(1, this.additionalButtonArgs.length);
                        this.emitServer.apply(this, [this.additionalButtonArgs[0]].concat(Object(K["a"])(e)))
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            }),
            $ = U,
            q = (a("8483"), Object(d["a"])($, G, W, !1, null, "761dbccc", null)),
            J = q.exports,
            Z = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-button-group"
                }, [e._t("default")], 2)
            },
            X = [],
            Y = {
                name: "CoreButtonGroup"
            },
            Q = Y,
            ee = (a("807c"), Object(d["a"])(Q, Z, X, !1, null, "46e9af2c", null)),
            te = ee.exports,
            ae = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-item-box"
                }, [t("div", {
                    staticClass: "core-item-box-details"
                }, [t("div", {
                    staticClass: "core-item-box-details-title"
                }, [e._t("details-title")], 2), t("div", {
                    staticClass: "core-item-box-details-description"
                }, [e._t("details-description")], 2)]), t("div", {
                    staticClass: "core-item-box-image"
                }, [e._t("image")], 2)])
            },
            ie = [],
            se = {
                name: "CoreItemBox"
            },
            ne = se,
            re = (a("d555"), Object(d["a"])(ne, ae, ie, !1, null, "0de7f820", null)),
            oe = re.exports,
            ce = {
                name: "Garage",
                components: {
                    CoreInput: A,
                    CoreItemBox: oe,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        garageData: JSON.parse(this.data),
                        outParkVehicles: JSON.parse(this.data).data,
                        inParkVehicles: void 0,
                        outPark: !0,
                        search: "",
                        favorites: []
                    }
                },
                methods: {
                    handleVehicle: function(e) {
                        this.outPark ? this.emitServer("ParkOut", "takeout",this.garageData.i, e.i) : this.emitServer("ParkOut", "takein", this.garageData.i, e.i), this.hide()
                    },
                    displayOutparkVehicles: function() {
                        this.outPark = !0, this.garageData.data = this.outParkVehicles
                    },
                    displayInparkVehicles: function() {
                        0 != this.garageData.c && (this.outPark = !1, void 0 === this.inParkVehicles ? this.emitServer("GetInparkVehicles", this.garageData.i) : this.garageData.data = this.inParkVehicles)
                    },
                    sendInparkVehicles: function(e) {
                        this.inParkVehicles = JSON.parse(e), this.garageData.data = this.inParkVehicles
                    },
                    requestOpenStorage: function() {
                        this.emitServer("OpenGarageStorage", this.garageData.i), this.hide()
                    },
                    toggleFavoriteVehicle: function(e) {
                        if (this.favorites.includes(e)) {
                            this.emitServer("RemoveVehicleFromFavorites", e);
                            var t = this.favorites.indexOf(e);
                            this.favorites.splice(t, 1)
                        } else this.emitServer("AddVehicleToFavorites", e), this.favorites.push(e)
                    },
                    sendFavoriteVehicles: function(e) {

                        this.favorites = e.split(',').map(Number);

                        console.log(this.favorites);
                    }
                },
                computed: {
                    searchedVehicles: function() {
                        var e = this;
                        return this.garageData.data.filter((function(t) {
                            return t.n.toLowerCase().includes(e.search.toLowerCase()) || t.no.toLowerCase().includes(e.search.toLowerCase()) || t.i.toString().includes(e.search.toLowerCase())
                        }))
                    }
                },
                created: function() {
                    this.addEvent("SendInparkVehicles", this.sendInparkVehicles), this.addEvent("SendFavoriteVehicles", this.sendFavoriteVehicles), this.emitServer("GetFavoriteVehicles")
                }
            },
            le = ce,
            ue = (a("43fe"), Object(d["a"])(le, V, E, !1, null, null, null)),
            me = ue.exports,
            de = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    class: {
                        "core-interface-lg": ![1, 2].includes(this.bdata.t),
                        "core-interface-xl": [1, 2].includes(this.bdata.t)
                    },
                    attrs: {
                        title: e.bdata.n,
                        additionalData: e.bdata.c,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "bank-interface"
                }, [t("div", {
                    staticClass: "bank-interface-left"
                }, [t("div", {
                    staticClass: "base-interface-left-icon"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/bank/fleeca.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "base-interface-left-money-balance"
                }, [t("div", {
                    staticClass: "base-interface-left-money-balance-cash"
                }, [t("div", {
                    staticClass: "base-interface-left-money-balance-title"
                }, [e._v("Bargeld")]), t("div", {
                    staticClass: "base-interface-left-money-balance-amount"
                }, [e._v(e._s(e.bdata.m.toLocaleString("de-DE")) + " $")])]), t("div", {
                    staticClass: "base-interface-left-money-balance-bank"
                }, [t("div", {
                    staticClass: "base-interface-left-money-balance-title"
                }, [e._v("Kontostand")]), t("div", {
                    staticClass: "base-interface-left-money-balance-amount"
                }, [e._v(e._s(e.bdata.b.toLocaleString("de-DE")) + " $")])])]), t("div", {
                    staticClass: "base-interface-left-bank-interactions"
                }, [t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box"
                }, [t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action"
                }, [t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-title"
                }, [e._v("Einzahlen")]), t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-inputs"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Einzahlen"
                    },
                    model: {
                        value: e.depositValue,
                        callback: function(t) {
                            e.depositValue = e._n(t)
                        },
                        expression: "depositValue"
                    }
                }), t("CoreButton", {
                    on: {
                        click: e.depositAll
                    }
                }, [e._v("Max")])], 1)]), t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action"
                }, [t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-title"
                }, [e._v("auszahlen")]), t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-inputs"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Auszahlen"
                    },
                    model: {
                        value: e.withdrawValue,
                        callback: function(t) {
                            e.withdrawValue = e._n(t)
                        },
                        expression: "withdrawValue"
                    }
                }), t("CoreButton", {
                    attrs: {
                        disabled: ""
                    }
                }, [e._v("MAX")])], 1)]), [1, 2].includes(this.bdata.t) ? t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action"
                }, [t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-title"
                }, [e._v("grund")]), t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-reason"
                }, [t("CoreInput", {
                    staticClass: "base-interface-left-bank-interactions-action-box-action-reason-input dark",
                    attrs: {
                        maxlength: "20",
                        placeholder: "Grund"
                    },
                    model: {
                        value: e.reason,
                        callback: function(t) {
                            e.reason = t
                        },
                        expression: "reason"
                    }
                })], 1)]) : e._e()]), t("div", {
                    staticClass: "base-interface-left-bank-interactions-action-box confirmation-button"
                }, [t("CoreButton", {
                    staticClass: "btn success",
                    attrs: {
                        disabled: e.depositValue > e.bdata.m || e.depositValue < 1
                    },
                    on: {
                        click: e.depositMoney
                    }
                }, [e._v("Einzahlen")]), t("CoreButton", {
                    staticClass: "btn danger",
                    attrs: {
                        disabled: e.withdrawValue > e.bdata.b || e.withdrawValue < 1
                    },
                    on: {
                        click: e.withdrawMoney
                    }
                }, [e._v("Auszahlen")])], 1)])]), t("div", {
                    staticClass: "bank-interface-right"
                }, [t("div", {
                    staticClass: "bank-interface-right-bank-statement"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Kontoauszug durchsuchen"
                    },
                    model: {
                        value: e.infoSearch,
                        callback: function(t) {
                            e.infoSearch = t
                        },
                        expression: "infoSearch"
                    }
                }), t("CoreButton", {
                    on: {
                        click: e.loadInfo
                    }
                }, [e._v("anzeigen")])], 1), t("div", {
                    class: {
                        "bank-interface-right-history-table-small": ![1, 2].includes(this.bdata.t),
                        "bank-interface-right-history-table-large": [1, 2].includes(this.bdata.t)
                    }
                }, [e.info.length ? t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "25%"
                    }
                }, [e._v("Wert")]), t("th", [e._v("Grund")]), t("th", {
                    attrs: {
                        width: "30%"
                    }
                }, [e._v("Datum")])])]), t("tbody", e._l(e.searchInfo, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", {
                        staticClass: "align-middle",
                        class: [{
                            "text-custom-danger": a.v < 0
                        }, {
                            "text-custom-success": a.v > 0
                        }]
                    }, [e._v(" " + e._s(a.v) + " ")]), void 0 === a.n ? t("td", {
                        staticClass: "align-middle"
                    }, [e._v(" " + e._s(a.r) + " ")]) : t("td", {
                        staticClass: "align-middle"
                    }, [e._v(" " + e._s(a.r) + " (" + e._s(a.n) + ") ")]), t("td", {
                        staticClass: "align-middle"
                    }, [e._v(" " + e._s(a.d) + " ")])])
                })), 0)]) : e._e()], 1)])])])
            },
            he = [],
            _e = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-table",
                    class: {
                        "fixed-header": e.fixedHeader,
                        "fixed-footer": e.fixedFooter
                    }
                }, [t("table", [e._t("default")], 2)])
            },
            pe = [],
            ve = {
                name: "CoreTable",
                props: {
                    fixedHeader: {
                        type: Boolean,
                        default: !1
                    },
                    fixedFooter: {
                        type: Boolean,
                        default: !1
                    }
                },
                data: function() {
                    return {}
                },
                methods: {}
            },
            fe = ve,
            be = (a("cef5"), Object(d["a"])(fe, _e, pe, !1, null, "8e3e52f8", null)),
            ge = be.exports,
            ye = {
                name: "Bank",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        bdata: JSON.parse(this.data),
                        deposit: !0,
                        depositValue: "",
                        reason: "",
                        withdrawValue: "",
                        infoSearch: "",
                        info: [],
                        NFormatter: ""
                    }
                },
                methods: {
                    depositMoney: function() {
                     const parsed = parseInt(this.depositValue);

                        if (Number.isInteger(parsed)) {
                    
                            if (this.bdata.fb) {
                                this.emitServer("DepositFrakMoney", parsed); this.hide();
                            } else {
                                this.emitServer("DepositMoney", parsed); this.hide();
                            }
                        } else {
                           console.log("KEENEZAHL");

                        }
                    },
                    withdrawMoney: function() {
                     const parsed = parseInt(this.withdrawValue);

                     if (Number.isInteger(parsed)) {
                        if (this.bdata.fb) {
                            this.emitServer("WithdrawFrakMoney", parsed); this.hide();
                        } else {
                            this.emitServer("WithdrawMoney", parsed); this.hide();
                        }
                        } else {

                           console.log("KEENEZAHL");
                        }
                    },
                    depositAll: function() {
                        this.depositValue = this.bdata.m
                    },
                    withdrawAll: function() {
                        this.withdrawValue = this.bdata.b
                    },
                    loadInfo: function() {
                    

                        if (this.bdata.fb) {
                            this.emitServer("RqFrakBankInfo")
                        } else {
                            this.emitServer("RqBankInfo")
                        }
                    
                    
                    },
                    rsBankInfo: function(e) {
                        this.info = JSON.parse(e)
                    }
                },
                computed: {
                    searchInfo: function() {
                        var e = this;
                        return this.info.filter((function(t) {
                            return t.r.toLowerCase().includes(e.infoSearch.toLowerCase())
                        }))
                    }
                },
                created: function() {
                    this.addEvent("RsBankInfo", this.rsBankInfo), this.NFormatter = new Intl.NumberFormat("de-DE", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    });
                    if (this.bdata.fb) {
                        this.emitServer("RqFrakBankInfo")
                    } else {
                        this.emitServer("RqBankInfo")
                    }
                },
                destroyed: function() {
                  fuckThis("onWindowClosed", "Bank"),
                    this.emit("PlayAnim"), this.emit("SetAtmState", !1)
                },
                mounted: function() {
                    this.emit("SetAtmState", !0)
                }
            },
            Ce = ye,
            ke = (a("1d5d"), Object(d["a"])(Ce, de, he, !1, null, "039c9a20", null)),
            we = ke.exports,
            Se = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-vehicleshop",
                    attrs: {
                        title: e.vehshopdata.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "vehicleshop"
                }, [t("div", {
                    staticClass: "vehicleshop-header"
                }, [null != e.currentVehicle && 1 == e.vehshopdata.d ? t("CoreButton", {
                    on: {
                        click: e.buyDiscountedVehicle
                    }
                }, [e._v(" MIT GUTSCHEIN KAUFEN (" + e._s(e.currency.format(e.getDiscountedPrice)) + "$) ")]) : e._e(), null != e.currentVehicle ? t("CoreButton", {
                    on: {
                        click: e.buyVehicle
                    }
                }, [e._v(" KAUFEN (" + e._s(e.currency.format(e.currentVehicle.p)) + "$) ")]) : e._e(), null != e.currentVehicle ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            e.currentVehicle = null, e.resetColors()
                        }
                    }
                }, [e._v("Zurück")]) : e._e()], 1), t("div", {
                    staticClass: "vehicleshop-body"
                }, [null == e.currentVehicle ? t("div", {
                    staticClass: "vehicleshop-body-row"
                }, e._l(e.vehshopdata.data, (function(a) {
                    return t("CoreItemBox", {
                        key: a.i,
                        staticClass: "h-15"
                    }, [t("div", {
                        attrs: {
                            slot: "details-title"
                        },
                        on: {
                            click: function(t) {
                                return e.showVehicleInfo(a)
                            }
                        },
                        slot: "details-title"
                    }, [e._v(e._s(a.n))]), t("div", {
                        attrs: {
                            slot: "details-description"
                        },
                        slot: "details-description"
                    }, [t("div", {
                        staticClass: "text-success"
                    }, [e._v(e._s(e.currency.format(a.p)) + "$")])]), t("div", {
                        staticClass: "image",
                        attrs: {
                            slot: "image"
                        },
                        on: {
                            click: function(t) {
                                return e.showVehicleInfo(a)
                            }
                        },
                        slot: "image"
                    }, [t("span", {
                        staticClass: "mdi mdi-car-info"
                    })])])
                })), 1) : e._e(), e.currentVehicle ? t("div", {
                    staticClass: "vehicleshop-body-preview"
                }, [t("div", {
                    staticClass: "vehicleshop-body-preview-image"
                }, [t("img", {
                    attrs: {
                        src: e.currentVehicle.ieins,
                        alt: ""
                    },
                    style: {
                     width: "700px",
                     height: "393px"
                 },
                }), t("img", {
                    style: e.getStyle,
                    attrs: {
                     src: e.currentVehicle.izwei,
                     alt: ""
                    },
                    style: {
                     width: "700px",
                     height: "393px"
                 },
                })]), t("div", {
                    staticClass: "vehicleshop-body-preview-details"
                }, [t("p", [e._v("Kategorie: " + e._s(e.currentVehicle.c))]), t("p", [e._v("Sitze: " + e._s(e.currentVehicle.t))]), t("p", [e._v("Kofferraum: " + e._s(e.currentVehicle.k) + " KG")]), t("p", [e._v("Slots: " + e._s(e.currentVehicle.s))])])]) : e._e(), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.currentVehicle,
                        expression: "currentVehicle"
                    }],
                    staticClass: "colorwrapper",
                    attrs: {
                        id: "parent"
                    }
                })])])])
            },
            Me = [],
            xe = a("d4ec"),
            Pe = a("bee2"),
            Te = (a("ddb0"), a("1a12")),
            Fe = function() {
                function e(t, a, i) {
                    Object(xe["a"])(this, e), this.set(t, a, i)
                }
                return Object(Pe["a"])(e, [{
                    key: "toString",
                    value: function() {
                        return "rgb(".concat(Math.round(this.r), ", ").concat(Math.round(this.g), ", ").concat(Math.round(this.b), ")")
                    }
                }, {
                    key: "set",
                    value: function(e, t, a) {
                        this.r = this.clamp(e), this.g = this.clamp(t), this.b = this.clamp(a)
                    }
                }, {
                    key: "hueRotate",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        e = e / 180 * Math.PI;
                        var t = Math.sin(e),
                            a = Math.cos(e);
                        this.multiply([.213 + .787 * a - .213 * t, .715 - .715 * a - .715 * t, .072 - .072 * a + .928 * t, .213 - .213 * a + .143 * t, .715 + .285 * a + .14 * t, .072 - .072 * a - .283 * t, .213 - .213 * a - .787 * t, .715 - .715 * a + .715 * t, .072 + .928 * a + .072 * t])
                    }
                }, {
                    key: "grayscale",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.multiply([.2126 + .7874 * (1 - e), .7152 - .7152 * (1 - e), .0722 - .0722 * (1 - e), .2126 - .2126 * (1 - e), .7152 + .2848 * (1 - e), .0722 - .0722 * (1 - e), .2126 - .2126 * (1 - e), .7152 - .7152 * (1 - e), .0722 + .9278 * (1 - e)])
                    }
                }, {
                    key: "sepia",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.multiply([.393 + .607 * (1 - e), .769 - .769 * (1 - e), .189 - .189 * (1 - e), .349 - .349 * (1 - e), .686 + .314 * (1 - e), .168 - .168 * (1 - e), .272 - .272 * (1 - e), .534 - .534 * (1 - e), .131 + .869 * (1 - e)])
                    }
                }, {
                    key: "saturate",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.multiply([.213 + .787 * e, .715 - .715 * e, .072 - .072 * e, .213 - .213 * e, .715 + .285 * e, .072 - .072 * e, .213 - .213 * e, .715 - .715 * e, .072 + .928 * e])
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        var t = this.clamp(this.r * e[0] + this.g * e[1] + this.b * e[2]),
                            a = this.clamp(this.r * e[3] + this.g * e[4] + this.b * e[5]),
                            i = this.clamp(this.r * e[6] + this.g * e[7] + this.b * e[8]);
                        this.r = t, this.g = a, this.b = i
                    }
                }, {
                    key: "brightness",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.linear(e)
                    }
                }, {
                    key: "contrast",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.linear(e, -.5 * e + .5)
                    }
                }, {
                    key: "linear",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        this.r = this.clamp(this.r * e + 255 * t), this.g = this.clamp(this.g * e + 255 * t), this.b = this.clamp(this.b * e + 255 * t)
                    }
                }, {
                    key: "invert",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this.r = this.clamp(255 * (e + this.r / 255 * (1 - 2 * e))), this.g = this.clamp(255 * (e + this.g / 255 * (1 - 2 * e))), this.b = this.clamp(255 * (e + this.b / 255 * (1 - 2 * e)))
                    }
                }, {
                    key: "hsl",
                    value: function() {
                        var e, t, a = this.r / 255,
                            i = this.g / 255,
                            s = this.b / 255,
                            n = Math.max(a, i, s),
                            r = Math.min(a, i, s),
                            o = (n + r) / 2;
                        if (n === r) e = t = 0;
                        else {
                            var c = n - r;
                            switch (t = o > .5 ? c / (2 - n - r) : c / (n + r), n) {
                                case a:
                                    e = (i - s) / c + (i < s ? 6 : 0);
                                    break;
                                case i:
                                    e = (s - a) / c + 2;
                                    break;
                                case s:
                                    e = (a - i) / c + 4;
                                    break
                            }
                            e /= 6
                        }
                        return {
                            h: 100 * e,
                            s: 100 * t,
                            l: 100 * o
                        }
                    }
                }, {
                    key: "clamp",
                    value: function(e) {
                        return e > 255 ? e = 255 : e < 0 && (e = 0), e
                    }
                }]), e
            }(),
            Be = function() {
                function e(t) {
                    Object(xe["a"])(this, e), this.target = t, this.targetHSL = t.hsl(), this.reusedColor = new Fe(0, 0, 0)
                }
                return Object(Pe["a"])(e, [{
                    key: "solve",
                    value: function() {
                        var e = this.solveNarrow(this.solveWide());
                        return {
                            values: e.values,
                            loss: e.loss,
                            filter: this.css(e.values)
                        }
                    }
                }, {
                    key: "solveWide",
                    value: function() {
                        for (var e = 5, t = 15, a = [60, 180, 18e3, 600, 1.2, 1.2], i = {
                                loss: 1 / 0
                            }, s = 0; i.loss > 25 && s < 3; s++) {
                            var n = [50, 20, 3750, 50, 100, 100],
                                r = this.spsa(e, a, t, n, 1e3);
                            r.loss < i.loss && (i = r)
                        }
                        return i
                    }
                }, {
                    key: "solveNarrow",
                    value: function(e) {
                        var t = e.loss,
                            a = 2,
                            i = t + 1,
                            s = [.25 * i, .25 * i, i, .25 * i, .2 * i, .2 * i];
                        return this.spsa(t, s, a, e.values, 500)
                    }
                }, {
                    key: "spsa",
                    value: function(e, t, a, i, s) {
                        for (var n = 1, r = .16666666666666666, o = null, c = 1 / 0, l = new Array(6), u = new Array(6), m = new Array(6), d = 0; d < s; d++) {
                            for (var h = a / Math.pow(d + 1, r), _ = 0; _ < 6; _++) l[_] = Math.random() > .5 ? 1 : -1, u[_] = i[_] + h * l[_], m[_] = i[_] - h * l[_];
                            for (var p = this.loss(u) - this.loss(m), v = 0; v < 6; v++) {
                                var f = p / (2 * h) * l[v],
                                    b = t[v] / Math.pow(e + d + 1, n);
                                i[v] = y(i[v] - b * f, v)
                            }
                            var g = this.loss(i);
                            g < c && (o = i.slice(0), c = g)
                        }
                        return {
                            values: o,
                            loss: c
                        };

                        function y(e, t) {
                            var a = 100;
                            return 2 === t ? a = 7500 : 4 !== t && 5 !== t || (a = 200), 3 === t ? e > a ? e %= a : e < 0 && (e = a + e % a) : e < 0 ? e = 0 : e > a && (e = a), e
                        }
                    }
                }, {
                    key: "loss",
                    value: function(e) {
                        var t = this.reusedColor;
                        t.set(0, 0, 0), t.invert(e[0] / 100), t.sepia(e[1] / 100), t.saturate(e[2] / 100), t.hueRotate(3.6 * e[3]), t.brightness(e[4] / 100), t.contrast(e[5] / 100);
                        var a = t.hsl();
                        return Math.abs(t.r - this.target.r) + Math.abs(t.g - this.target.g) + Math.abs(t.b - this.target.b) + Math.abs(a.h - this.targetHSL.h) + Math.abs(a.s - this.targetHSL.s) + Math.abs(a.l - this.targetHSL.l)
                    }
                }, {
                    key: "css",
                    value: function(e) {
                        function t(t) {
                            var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                            return Math.round(e[t] * a)
                        }
                        return "filter: invert(".concat(t(0), "%) sepia(").concat(t(1), "%) saturate(").concat(t(2), "%) hue-rotate(").concat(t(3, 3.6), "deg) brightness(").concat(t(4), "%) contrast(").concat(t(5), "%);")
                    }
                }]), e
            }(),
            Ie = {
                name: "VehicleShopNew",
                components: {
                    CoreItemBox: oe,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        picker: null,
                        vehshopdata: JSON.parse(this.data),
                        vehicleClassification: ["PKW", "BIKE", "BOOT", "LKW", "TRAILER", "SMALL LKW", "MOTORRAD", "HELIKOPTER", "FLUGZEUG", "BAUFAHRZEUG"],
                        currentVehicle: null,
                        formatConfig: {
                            style: "currency",
                            currency: "USD",
                            minimumFractionDigits: 2,
                            currencyDisplay: "symbol"
                        },
                        currency: new Intl.NumberFormat("en-GB", this.formatConfig)
                    }
                },
                methods: {
                    buyVehicle: function() {
                        var e = this.picker.color._rgba;
                        this.emitServer("BuyVehicle", "" + this.vehshopdata.i, "" + this.currentVehicle.vi, parseInt(e[0]), parseInt(e[1]), parseInt(e[2])), this.hide()
                    },
                    buyDiscountedVehicle: function() {
                        var e = this.picker.color._rgba;
                        this.emitServer("BuyVehicle", "" + this.vehshopdata.i, "" + this.currentVehicle.vi, parseInt(e[0]), parseInt(e[1]), parseInt(e[2])), this.hide()
                    },
                    refundVehicle: function() {
                        this.emitServer("RefundVehicle", this.vehshopdata.i, this.currentVehicle.i), this.hide()
                    },
                    showVehicleInfo: function(e) {
                        this.currentVehicle = e
                    },
                    resetColors: function() {
                        this.picker.setColor("white", !0)
                    }
                },
                computed: {
                    getStyle: function() {
                        if (null != this.picker) {
                            var e = this.picker.color._rgba,
                                t = new Fe(e[0], e[1], e[2]),
                                a = new Be(t),
                                i = a.solve();
                            return "width: 94%;" + i.filter
                        }
                        return ""
                    },
                    getDiscountedPrice: function() {
                        var e = .15,
                            t = 75e3;
                        return this.currentVehicle.p * e > t ? this.currentVehicle.p - t : this.currentVehicle.p * (1 - e)
                    }
                },
                created: function() {
                    this.$nextTick((function() {
                        var e = document.querySelector("#parent");
                        this.picker = new Te["a"]({
                            parent: e,
                            popup: !1,
                            editor: !1,
                            alpha: !1
                        }), this.picker.openHandler(), this.picker.setColor("white", !0)
                    }))
                }
            },
            Ae = Ie,
            De = (a("be37"), Object(d["a"])(Ae, Se, Me, !1, null, null, null)),
            Ne = De.exports,
            Oe = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        back: "",
                        title: e.teamdata.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "team"
                }, [t("div", {
                    staticClass: "team-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: e.onlineMember
                    },
                    on: {
                        click: function(t) {
                            e.onlineMember = !0
                        }
                    }
                }, [e._v("Anwesend (" + e._s(e.teamdata.data.length) + ")")]), t("CoreButton", {
                    class: {
                        active: !e.onlineMember
                    },
                    on: {
                        click: e.showAllMember
                    }
                }, [e._v(e._s(null == e.team ? "Alle" : "Alle (" + this.team.length + ")"))]), e.teamdata.v ? t("CoreButton", {
                    staticClass: "text-custom-success",
                    on: {
                        click: e.ShowInviteMemberPrompt
                    }
                }, [e._v("Mitglied einladen")]) : e._e(), e.teamdata.r <= 11 ? t("CoreButton", {
                    staticClass: "text-custom-danger",
                    on: {
                        click: e.leave
                    }
                }, [e._v(e._s(e.teamdata.t ? "Fraktion" : "Business") + " Verlassen")]) : e._e(), t("CoreButton", {
                    on: {
                        click: e.showMOTD
                    }
                }, [e._v("Notiz")]), 1 == e.teamdata.t && e.teamdata.v ? t("CoreButton", {
                    staticClass: "text-custom-warning",
                    on: {
                        click: e.sendTeamNotify
                    }
                }, [t("i", {
                    staticClass: "fas fa-bell fa-fw"
                }), e._v(" Everyone ")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "team-body"
                }, [t("div", {
                    staticClass: "team-body-search"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Name"
                    },
                    model: {
                        value: e.memberSearch,
                        callback: function(t) {
                            e.memberSearch = t
                        },
                        expression: "memberSearch"
                    }
                })], 1), t("div", {
                    staticClass: "team-body-table"
                }, [e.onlineMember ? t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Rang")]), e.teamdata.d ? t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Dienstnr.")]) : e._e(), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Aktionen")])])]), t("tbody", e._l(e.onlineMembersList, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(" " + e._s(a.n) + " "), void 0 != a.d && a.d || e.teamdata.d ? t("span", {
                        class: {
                            "text-custom-success": a.d,
                            "text-custom-danger": !a.d
                        }
                    }, [e._v(" " + e._s(a.d ? "(Im Dienst)" : "(Außer Dienst)") + " ")]) : e._e()]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.r))]), e.teamdata.d ? t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.dn))]) : e._e(), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.emitServer("Call", a.ph)
                            }
                        }
                    }, [e._v("anrufen")])], 1)])
                })), 0)]) : t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Rang")]), e.teamdata.d ? t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Dienstnr.")]) : e._e(), e.teamdata.v ? t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Verwaltung")]) : e._e()])]), t("tbody", e._l(e.allMembersList, (function(a) {
                    return t("tr", {
                        key: a.i,
                        class: {
                            selected: null != e.selectedMember && e.selectedMember.n == a.n
                        }
                    }, [t("td", [e._v(" " + e._s(a.n) + " ")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(" " + e._s(a.r) + " ")]), e.teamdata.d ? t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.dn))]) : e._e(), e.teamdata.v ? t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.manageMember(a)
                            }
                        }
                    }, [e._v("Verwalten")])], 1) : e._e()])
                })), 0)])], 1)])]), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.motd.v,
                        expression: "motd.v"
                    }],
                    staticClass: "team-motd"
                }, [t("div", {
                    staticClass: "team-motd-headline"
                }, [t("div", [e._v("Message of the day")]), t("div", {
                    staticClass: "team-motd-headline-edit",
                    class: {
                        active: e.motd.e
                    },
                    on: {
                        click: e.editMOTD
                    }
                }, [t("i", {
                    staticClass: "fas fa-edit fa-fw"
                })])]), t("div", {
                    staticClass: "team-motd-description",
                    domProps: {
                        innerHTML: e._s(e.teamdata.motd)
                    }
                })]), e.motd.e && e.motd.v ? t("div", {
                    staticClass: "team-motd-edit-box"
                }, [t("div", {
                    staticClass: "team-motd-edit-box-actions"
                }, [t("CoreButton", {
                    staticClass: "dark",
                    attrs: {
                        title: "Text Fett"
                    },
                    on: {
                        click: e.insertBold
                    }
                }, [e._v("B")]), t("CoreButton", {
                    staticClass: "dark",
                    attrs: {
                        title: "Text unterstrichen"
                    },
                    on: {
                        click: e.insertUnderline
                    }
                }, [e._v("U")]), t("CoreButton", {
                    staticClass: "dark",
                    attrs: {
                        title: "Text Serif"
                    },
                    on: {
                        click: e.insertSerif
                    }
                }, [e._v("I")]), t("CoreButton", {
                    staticClass: "dark",
                    attrs: {
                        title: "Liste einfügen"
                    },
                    on: {
                        click: e.insertList
                    }
                }, [e._v("UL")]), t("CoreButton", {
                    staticClass: "dark",
                    attrs: {
                        title: "Listenelement einfügen"
                    },
                    on: {
                        click: e.insertListItem
                    }
                }, [e._v("LI")])], 1), t("CoreButton", {
                    staticClass: "dark save-button",
                    on: {
                        click: e.saveMOTD
                    }
                }, [e._v("Speichern")])], 1) : e._e(), e.motd.e && e.motd.v ? t("div", {
                    staticClass: "team-motd-text-box"
                }, [t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.data.motd,
                        expression: "data.motd"
                    }],
                    attrs: {
                        id: "",
                        cols: "30",
                        rows: "10"
                    },
                    domProps: {
                        value: e.teamdata.motd,
                        innerHTML: e._s(e.teamdata.motd)
                    },
                    on: {
                        keyup: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.insertLinebreak.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || e.$set(e.teamdata, "motd", t.target.value)
                        }
                    }
                })]) : e._e(), null != e.selectedMember ? t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.manageBox,
                        expression: "manageBox"
                    }],
                    staticClass: "team-manage-box"
                }, [t("div", {
                    staticClass: "team-manage-box-title"
                }, [e._v(" " + e._s(e.selectedMember.n) + " verwalten"), t("br"), t("span", {
                    staticClass: "small"
                }, [e._v("Zuletzt gesehen: " + e._s(e.selectedMember.l))])]), t("div", {
                    staticClass: "team-manage-box-settings"
                }, [this.teamdata.t ? e._e() : t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Tankrechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "tank"
                    },
                    domProps: {
                        checked: e.selectedMember.t
                    },
                    on: {
                        change: e.changeTank
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "tank"
                    }
                })])])]), this.teamdata.t ? e._e() : t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Shoprechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "shop"
                    },
                    domProps: {
                        checked: e.selectedMember.s
                    },
                    on: {
                        change: e.changeShop
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "shop"
                    }
                })])])]), t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Verwaltungsrechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "manage"
                    },
                    domProps: {
                        checked: e.selectedMember.v
                    },
                    on: {
                        change: e.changeManage
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "manage"
                    }
                })])])]), t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Bankrechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "bank"
                    },
                    domProps: {
                        checked: e.selectedMember.b
                    },
                    on: {
                        change: e.changeBank
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "bank"
                    }
                })])])]), this.teamdata.t ? t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Inventarrechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "inventory"
                    },
                    domProps: {
                        checked: e.selectedMember.inv
                    },
                    on: {
                        change: e.changeInventory
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "inventory"
                    }
                })])])]) : e._e(), 27 === this.teamdata.i ? t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Waffenrechte:")]), t("div", {
                    staticClass: "settings-box-switch"
                }, [t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "vehWeapons"
                    },
                    domProps: {
                        checked: e.selectedMember.vw
                    },
                    on: {
                        change: e.changeVehicleWeapons
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "vehWeapons"
                    }
                })])])]) : e._e(), t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Rang: "), t("span", {
                    staticClass: "text-bold text-underline"
                }, [e._v(e._s(e.selectedMember.r))])]), t("div", {
                    staticClass: "settings-box-buttons"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeRank(!0)
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-plus"
                })]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeRank(!1)
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-minus"
                })])], 1)]), e.teamdata.t && e.teamdata.d ? t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Dienstnummer:")]), t("div", {
                    staticClass: "settings-box-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number",
                        "min-value": 1,
                        "max-value": 999,
                        "step-value": 1
                    },
                    model: {
                        value: e.selectedMember.dn,
                        callback: function(t) {
                            e.$set(e.selectedMember, "dn", e._n(t))
                        },
                        expression: "selectedMember.dn"
                    }
                }), t("CoreButton", {
                    on: {
                        click: e.changeDutynumber
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-check"
                })])], 1)]) : e._e(), e.teamdata.t && !e.teamdata.d ? t("div", {
                    staticClass: "settings-box"
                }, [t("div", {
                    staticClass: "settings-box-title"
                }, [e._v("Waffenpakete:")]), t("div", {
                    staticClass: "settings-box-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    model: {
                        value: e.selectedMember.m,
                        callback: function(t) {
                            e.$set(e.selectedMember, "m", e._n(t))
                        },
                        expression: "selectedMember.m"
                    }
                }), t("CoreButton", {
                    on: {
                        click: e.changeMagAmount
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-check"
                })])], 1)]) : e._e()]), t("div", {
                    staticClass: "team-manage-box-actions"
                }, [t("CoreButton", {
                    on: {
                        click: e.kickMember
                    }
                }, [e._v("Rauswerfen")]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.closeManageMember
                    }
                }, [e._v("Schließen")])], 1)]) : e._e(), t("CorePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.popup,
                        expression: "popup"
                    }],
                    attrs: {
                        header: "Wirklich entfernen?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.confirm
                    }
                }), t("CorePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.popup2,
                        expression: "popup2"
                    }],
                    attrs: {
                        header: "Wirklich verlassen?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.confirm2
                    }
                }), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.invitePrompt,
                        expression: "invitePrompt"
                    }],
                    attrs: {
                        message: "Wie heißt das Mitglied?",
                        confirmText: "Einladen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.inviteMember
                    },
                    model: {
                        value: e.member,
                        callback: function(t) {
                            e.member = t
                        },
                        expression: "member"
                    }
                })], 1)
            },
            Le = [],
            He = (a("498a"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-prompt"
                }, [t("div", {
                    staticClass: "core-prompt-title"
                }, [e._v(e._s(e.message))]), t("div", {
                    staticClass: "core-prompt-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.confirm.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.input,
                        callback: function(t) {
                            e.input = t
                        },
                        expression: "input"
                    }
                })], 1), t("div", {
                    staticClass: "core-prompt-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.confirm
                    }
                }, [e._v(e._s(e.confirmText))]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: function(t) {
                            return e.$emit("confirm")
                        }
                    }
                }, [e._v(e._s(e.cancelText))])], 1)])
            }),
            ze = [],
            je = {
                name: "CorePrompt",
                props: {
                    message: {
                        type: String,
                        required: !0
                    },
                    confirmText: {
                        type: String,
                        required: !0
                    },
                    cancelText: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        input: ""
                    }
                },
                methods: {
                    confirm: function() {
                        this.$emit("confirm", this.input), this.input = ""
                    }
                }
            },
            Re = je,
            Ve = (a("b46a"), Object(d["a"])(Re, He, ze, !1, null, "8ee048c4", null)),
            Ee = Ve.exports,
            Ge = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-popup"
                }, [t("div", {
                    staticClass: "core-popup-title"
                }, [e._v(e._s(e.header))]), t("div", {
                    staticClass: "core-popup-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: function(t) {
                            return e.$emit("confirm", !0)
                        }
                    }
                }, [e._v(e._s(e.confirmButton))]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: function(t) {
                            return e.$emit("confirm", !1)
                        }
                    }
                }, [e._v(e._s(e.cancelButton))])], 1)])
            },
            We = [],
            Ke = {
                name: "CorePopup",
                props: {
                    header: {
                        type: String,
                        required: !0
                    },
                    confirmButton: {
                        type: String,
                        required: !0
                    },
                    cancelButton: {
                        type: String,
                        required: !0
                    }
                }
            },
            Ue = Ke,
            $e = (a("5595"), Object(d["a"])(Ue, Ge, We, !1, null, "3f22c9e8", null)),
            qe = $e.exports,
            Je = {
                name: "Team",
                components: {
                    CorePopup: qe,
                    CoreTable: ge,
                    CoreInput: A,
                    CorePrompt: Ee,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        teamdata: JSON.parse(this.data),
                        onlineMember: !0,
                        selectedMember: null,
                        member: "",
                        popup: !1,
                        popup2: !1,
                        team: null,
                        memberSearch: "",
                        invitePrompt: !1,
                        manageBox: !1,
                        motd: {
                            v: !1,
                            e: !1
                        },
                        lastInteraction: null,
                        clickCooldown: 1e3
                    }
                },
                methods: {
                    showMOTD: function() {
                        this.motd.v = !this.motd.v, this.motd.v || (this.motd.e = !1)
                    },
                    editMOTD: function() {
                        this.teamdata.v && (this.motd.e = !this.motd.e)
                    },
                    saveMOTD: function() {
                        if (this.teamdata.v && 0 !== this.teamdata.motd.length) {
                            var e = Date.now();
                            e - this.lastInteraction > this.clickCooldown ? (this.teamdata.t && this.emitServer("ChangeTeamMOTD", this.teamdata.motd), this.teamdata.t || this.emitServer("ChangeBusinessMOTD", this.teamdata.motd), this.motd.e = !1, this.lastInteraction = e) : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                        }
                    },
                    showAllMember: function() {
                        var e = Date.now();
                        e - this.lastInteraction > this.clickCooldown ? (null == this.team && (this.teamdata.t ? this.emitServer("RqTeam") : this.emitServer("RqBusiness"), this.dev && this.rsTeam({
                            d: [{
                                i: 2,
                                n: "Simon Hooker",
                                r: 12,
                                b: !0,
                                v: !1,
                                m: 13,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 3,
                                n: "Diego Valdez",
                                r: 11,
                                b: !0,
                                v: !0,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !0
                            }, {
                                i: 4,
                                n: "John Franklyn",
                                r: 10,
                                b: !1,
                                v: !0,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 5,
                                n: "Nico Salazar",
                                r: 9,
                                b: !1,
                                v: !0,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 6,
                                n: "Chris Salamanca-Teflon",
                                r: 9,
                                b: !1,
                                v: !0,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 7,
                                n: "Samael Teflon",
                                r: 5,
                                b: !1,
                                v: !1,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 8,
                                n: "Marcel King",
                                r: 5,
                                b: !1,
                                v: !1,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }, {
                                i: 9,
                                n: "Max Mueller",
                                r: 1,
                                b: !1,
                                v: !1,
                                l: "Sonntag, 29. März 2020 05:34:43",
                                o: !1
                            }]
                        })), this.onlineMember = !1, this.lastInteraction = e) : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    kickMember: function() {
                        this.popup = !0
                    },
                    leave: function() {
                        this.popup2 = !0
                    },
                    inviteMember: function(e) {
                        if (this.invitePrompt = !1, void 0 !== e) {
                            if (this.member = e.trim(), "" == this.member) return;
                            this.teamdata.t ? this.emitServer("InviteMemberToTeam", this.member) : this.emitServer("InviteMemberToBusiness", this.member), this.member = ""
                        }
                    },
                    changeRank: function(e) {
                        var t = Date.now();
                        t - this.lastInteraction > this.clickCooldown ? this.teamdata.v ? this.selectedMember.r >= this.teamdata.r ? fuckThis("fromUINot","Dazu hast du keine Berechtigung.", "#c72020") : e && this.selectedMember.r >= 11 || !e && this.selectedMember.r <= 0 || (e ? this.selectedMember.r++ : this.selectedMember.r--, this.teamdata.t ? this.emitServer("ChangeTeamRank", this.selectedMember.p, this.selectedMember.r) : this.emitServer("ChangeBusinessRank", this.selectedMember.p, this.selectedMember.r), this.lastInteraction = t) : fuckThis("fromUINot","Dazu hast du keine Berechtigung.", "#c72020") : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeManage: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            var t = !this.selectedMember.v;
                            this.selectedMember.v = t, (this.teamdata.t ? this.emitServer("ChangeTeamManage", this.selectedMember.p, t) : this.emitServer("ChangeBusinessManage", this.selectedMember.p, t), this.lastInteraction = e)
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeInventory: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            if (this.teamdata.t) {
                                var t = !this.selectedMember.inv;
                                this.selectedMember.inv = t, this.emitServer("ChangeTeamInventory", this.selectedMember.p, t)
                            }
                            this.lastInteraction = e
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeBank: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            var t = !this.selectedMember.b;
                            this.selectedMember.b = t, this.teamdata.t ? this.emitServer("ChangeTeamBank", this.selectedMember.p, t) : this.emitServer("ChangeBusinessBank", this.selectedMember.i, t), this.lastInteraction = e
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeTank: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            var t = !this.selectedMember.t;
                            this.selectedMember.t = t, this.teamdata.t || this.emitServer("ChangeBusinessTank", this.selectedMember.p, t), this.lastInteraction = e
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeShop: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            var t = !this.selectedMember.s;
                            this.selectedMember.s = t, this.teamdata.t || this.emitServer("ChangeBusinessShop", this.selectedMember.p, t), this.lastInteraction = e
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeVehicleWeapons: function() {
                        var e = Date.now();
                        if (e - this.lastInteraction > this.clickCooldown) {
                            if (this.teamdata.t) {
                                var t = !this.selectedMember.vw;
                                this.selectedMember.vw = t, this.emitServer("ChangeTeamVehicleWeapons", this.selectedMember.p, t)
                            }
                            this.lastInteraction = e
                        } else fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeDutynumber: function() {
                        var e = Date.now();
                        e - this.lastInteraction > this.clickCooldown ? this.selectedMember.dn <= 0 || (this.emitServer("ChangeDutynumber", this.selectedMember.p, this.selectedMember.dn), this.lastInteraction = e) : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    changeMagAmount: function() {
                        var e = Date.now();
                        e - this.lastInteraction > this.clickCooldown ? this.selectedMember.m < 1 || (this.emitServer("ChangeMag", this.selectedMember.p, this.selectedMember.m), this.lastInteraction = e) : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    confirm: function(e) {
                        var t = this;
                        e && (this.teamdata.data = this.teamdata.data.filter((function(e) {
                            return e.i != t.selectedMember.i
                        })), this.team = this.team.filter((function(e) {
                            return e.i != t.selectedMember.i
                        })), this.teamdata.t ? this.emitServer("KickMemberFromTeam", this.selectedMember.p) : this.emitServer("KickMemberFromBusiness", this.selectedMember.p)), this.manageBox = !1, this.popup = !1
                    },
                    confirm2: function(e) {
                        e ? (this.data.t ? this.emitServer("LeaveTeam") : this.emitServer("LeaveBusiness"), this.hide()) : this.popup2 = !1
                    },
                    getIcon: function(e) {
                        return e >= 10 ? "mdi-account-star" : "mdi-account"
                    },
                    getIconStatus: function(e) {
                        return e ? "is-success" : "is-danger"
                    },
                    allMembers: function() {
                        return null == this.team ? "Alle" : "Alle (" + this.team.length + ")"
                    },
                    rsTeam: function(e) {
                        this.team = JSON.parse(e)
                    },
                    ShowInviteMemberPrompt: function() {
                        this.invitePrompt = !0
                    },
                    manageMember: function(e) {
                        this.manageBox = !0, this.selectedMember = e
                    },
                    sendTeamNotify: function() {
                        var e = Date.now();
                        e - this.lastInteraction > 10 * this.clickCooldown ? (this.emitServer("SendTeamNotify"), this.lastInteraction = e) : fuckThis("fromUINot","Vielleicht bist du im Bett so schnell, aber hier musst du ein wenig Ruhe bewahren.", "#c72020")
                    },
                    closeManageMember: function() {
                        this.manageBox = !1, this.selectedMember = null
                    },
                    insertBold: function() {
                        this.teamdata.motd = this.teamdata.motd + "<b>TEXT_HIER</b>"
                    },
                    insertUnderline: function() {
                        this.teamdata.motd = this.teamdata.motd + "<u>TEXT_HIER</u>"
                    },
                    insertSerif: function() {
                        this.teamdata.motd = this.teamdata.motd + "<i>TEXT_HIER</i>"
                    },
                    insertList: function() {
                        this.teamdata.motd = this.teamdata.motd + "<ul>HIER_MÜSSEN_NOCH_LIST_ITEMS_(LI)_REIN!!</ul>"
                    },
                    insertListItem: function() {
                        this.teamdata.motd = this.teamdata.motd + "<li>TEXT_HIER</li>"
                    },
                    insertLinebreak: function() {
                        this.teamdata.motd = this.teamdata.motd + "</br>"
                    }
                },
                computed: {
                    onlineMembersList: function() {
                        var e = this;
                        return this.teamdata.data.filter((function(t) {
                            return t.n.toLowerCase().includes(e.memberSearch.toLowerCase())
                        }))
                    },
                    allMembersList: function() {
                        var e = this;
                        return this.team.filter((function(t) {
                            return t.n.toLowerCase().includes(e.memberSearch.toLowerCase())
                        }))
                    }
                },
                created: function() {
                    this.addEvent("RsTeam", this.rsTeam), this.dev && (this.motd = {
                        e: !1,
                        v: !1,
                        d: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ex tortor, sagittis sed rutrum eu, fringilla in ante. Cras et nunc lobortis, scelerisque est quis, elementum ex. Cras nec metus volutpat, viverra ligula in, vehicula lorem. Pellentesque vitae mattis justo. Pellentesque in fermentum tellus. Sed et feugiat massa. Sed pretium mauris nec metus vestibulum, sit amet vulputate libero iaculis. Pellentesque euismod elementum sem, sit amet tempor nisl tristique non. Morbi suscipit iaculis eros, ut dictum quam dictum vel. Maecenas malesuada congue erat sit amet facilisis. Morbi eget risus id lectus aliquam pharetra non in urna. Donec sagittis finibus ex, eu dignissim lectus placerat vel. Sed convallis diam urna, posuere facilisis neque ornare at. Maecenas vehicula tristique lorem, quis hendrerit purus venenatis in. Sed id velit sed augue gravida fermentum."
                    })
                }
            },
            Ze = Je,
            Xe = (a("704b"), Object(d["a"])(Ze, Oe, Le, !1, null, null, null)),
            Ye = Xe.exports,
            Qe = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("div", {
                    staticClass: "clothshop-categories"
                }, [t("ul", {
                    staticClass: "clothshop-categories-list"
                }, [e._l(e.cdata.data, (function(a) {
                    return t("li", {
                        key: a.i,
                        staticClass: "clothshop-categories-list-item",
                        class: {
                            active: e.clothTypeId == a.i
                        },
                        on: {
                            click: function(t) {
                                return e.getClothesByTypeId(a.i)
                            }
                        }
                    }, [t("span", [e._v(e._s(a.n))]), t("span", {
                        staticClass: "mdi mdi-close clickable",
                        on: {
                            click: function(t) {
                                return e.takeOff(a.i)
                            }
                        }
                    })])
                })), t("li", {
                    class: {
                        active: 3 == e.clothTypeId
                    },
                    on: {
                        click: function(t) {
                            return e.getClothesByTypeId(3)
                        }
                    }
                }, [e._v("Körper")]), -1 == this.cdata.i ? t("li", {
                    class: {
                        "active-outfit": e.outfitActive
                    },
                    on: {
                        click: e.showOutfits
                    }
                }, [e._v("Outfits")]) : e._e()], 2)]), t("div", {
                    staticClass: "clothshop-left"
                }, [t("div", {
                    staticClass: "clothshop-selection"
                }, [e.outfitActive ? t("div", {
                    staticClass: "clothshop-selection-outfits"
                }, [t("div", {
                    staticClass: "clothshop-item-header"
                }, [e._v("Outfits")]), t("ul", {
                    staticClass: "clothshop-list outfit-list"
                }, e._l(e.outfits, (function(a) {
                    return t("li", {
                        key: a.i,
                        staticClass: "clothshop-list-item",
                        class: {
                            active: a == e.selectedOutfit
                        },
                        on: {
                            click: function(t) {
                                return e.selectOutfit(a)
                            }
                        }
                    }, [t("span", [e._v(e._s(a.n))])])
                })), 0), t("div", {
                    staticClass: "clothshop-item-button"
                }, [null != this.selectedOutfit ? t("BaseButton", {
                    staticClass: "success",
                    on: {
                        click: e.wearOutfit
                    }
                }, [e._v("Anziehen")]) : e._e(), null != this.selectedOutfit ? t("BaseButton", {
                    staticClass: "cancel",
                    on: {
                        click: function(t) {
                            e.deleteOutfit(), e.selectedOutfit = null
                        }
                    }
                }, [e._v("Löschen")]) : t("BaseButton", {
                    staticClass: "success",
                    on: {
                        click: function(t) {
                            e.prompt = !0
                        }
                    }
                }, [e._v("Outfit hinzufügen")])], 1)]) : t("div", [t("div", {
                    staticClass: "clothshop-item-search"
                }, [t("BaseInput", {
                    staticClass: "base-input-dark",
                    attrs: {
                        placeholder: "Durchsuchen..."
                    },
                    model: {
                        value: e.searchCloth,
                        callback: function(t) {
                            e.searchCloth = t
                        },
                        expression: "searchCloth"
                    }
                })], 1), t("div", {
                    staticClass: "clothshop-item-header"
                }, [e._v("Kleidungsstück")]), t("ul", {
                    staticClass: "clothshop-list"
                }, e._l(e.filterCloth, (function(a) {
                    return t("li", {
                        key: a.v,
                        staticClass: "clothshop-list-item",
                        class: {
                            active: a == e.selected
                        },
                        on: {
                            click: function(t) {
                                return e.showCloth(a)
                            }
                        }
                    }, [t("span", [e._v(e._s(a.n))]), -1 != e.cdata.i ? t("span", {
                        staticClass: "ml-auto"
                    }, [t("v-ons-icon", {
                        staticClass: "clickable",
                        attrs: {
                            icon: "ion-navicon, material:money",
                            size: "12px, material: 1rem"
                        },
                        on: {
                            click: function(t) {
                                return e.addClothToShoppingCart(a)
                            }
                        }
                    })]) : e._e()])
                })), 0)])]), t("div", {
                    staticClass: "clothshop-shopping-cart"
                }, [t("div", {
                    staticClass: "clothshop-item-header"
                }, [e._v("Warenkorb")]), t("ul", {
                    staticClass: "clothshop-list"
                }, e._l(e.clothShoppingCardData, (function(a) {
                    return t("li", {
                        key: a.n,
                        staticClass: "clothshop-list-item",
                        on: {
                            click: function(t) {
                                return e.removeFromShoppingCart(a)
                            }
                        }
                    }, [t("span", [e._v(e._s(a.n))]), -1 != e.cdata.i ? t("span", {
                        staticClass: "ml-auto"
                    }, [e._v(e._s(a.p) + " $")]) : e._e()])
                })), 0)])]), t("div", {
                    staticClass: "clothshop-confirmations"
                }, [e.outfitActive ? e._e() : t("div", {
                    staticClass: "clothshop-confirmations-info"
                }, [e._v(" Gesamtbetrag: "), t("span", [e._v(e._s(e.price) + " $")])]), t("div", {
                    staticClass: "clothshop-confirmations-buttons"
                }, [t("BaseButton", {
                    staticClass: "clothshop-confirmations-buttons-cancel",
                    on: {
                        click: e.close
                    }
                }, [e._v(" Schließen ")]), -1 == e.cdata.i ? t("BaseButton", {
                    staticClass: "clothshop-confirmations-buttons-buy",
                    attrs: {
                        disabled: e.clothShoppingCardData.length < 1
                    },
                    on: {
                        click: e.buyShoppingCard
                    }
                }, [e._v(" Anziehen ")]) : t("BaseButton", {
                    staticClass: "clothshop-confirmations-buttons-buy",
                    attrs: {
                        disabled: e.clothShoppingCardData.length < 1
                    },
                    on: {
                        click: e.buyShoppingCard
                    }
                }, [e._v(" Kleidung kaufen ")])], 1)]), t("BaseSlider", {
                    staticClass: "rotation-slider",
                    attrs: {
                        min: "-180",
                        max: "180"
                    },
                    on: {
                        input: e.setRotation
                    },
                    model: {
                        value: e.rotation,
                        callback: function(t) {
                            e.rotation = t
                        },
                        expression: "rotation"
                    }
                }), t("BasePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    attrs: {
                        message: "Outfitname",
                        confirmText: "Erstellen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirm
                    }
                })], 1)
            },
            et = [],
            tt = (a("159b"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-slider-box"
                }, [t("div", {
                    staticClass: "base-slider-title"
                }, [t("span", {
                    staticClass: "base-slider-title-name"
                }, [e._v(e._s(e.name))]), e.additionalValue ? t("span", [e._v(" | ")]) : e._e(), e.additionalValue ? t("span", {
                    staticClass: "base-slider-title-value"
                }, [e._v("( " + e._s(e.additionalValue) + " )")]) : e._e()]), t("input", {
                    staticClass: "base-slider-input",
                    attrs: {
                        name: e.name,
                        min: e.min,
                        step: e.steps,
                        max: e.max,
                        type: "range"
                    },
                    domProps: {
                        value: e.value
                    },
                    on: {
                        input: function(t) {
                            return e.$emit("input", t.target.value)
                        }
                    }
                })])
            }),
            at = [],
            it = {
                name: "BaseSlider",
                props: {
                    name: {
                        type: String
                    },
                    additionalValue: {
                        type: String
                    },
                    min: {
                        type: [String, Number]
                    },
                    max: {
                        type: [String, Number]
                    },
                    steps: {
                        type: [String, Number]
                    },
                    value: {
                        type: [String, Number]
                    }
                },
                methods: {
                    click: function() {
                        this.$emit("click")
                    }
                }
            },
            st = it,
            nt = Object(d["a"])(st, tt, at, !1, null, null, null),
            rt = nt.exports,
            ot = function() {
                var e = this,
                    t = e._self._c;
                return t("button", {
                    staticClass: "base-button",
                    on: {
                        click: e.click
                    }
                }, [void 0 == e.text ? e._t("default") : e._e(), e._v(" " + e._s(e.text) + " ")], 2)
            },
            ct = [],
            lt = {
                name: "BaseButton",
                props: {
                    text: {
                        type: String
                    }
                },
                methods: {
                    click: function() {
                        this.$emit("click")
                    }
                }
            },
            ut = lt,
            mt = Object(d["a"])(ut, ot, ct, !1, null, null, null),
            dt = mt.exports,
            ht = function() {
                var e = this,
                    t = e._self._c;
                return t("input", {
                    ref: "input",
                    staticClass: "base-input",
                    attrs: {
                        type: e.type,
                        autocomplete: "off",
                        placeholder: e.placeholder,
                        disabled: e.disabled
                    },
                    domProps: {
                        value: e.value
                    },
                    on: {
                        input: function(t) {
                            return e.$emit("input", t.target.value)
                        }
                    }
                })
            },
            _t = [],
            pt = {
                name: "BaseInput",
                props: {
                    value: {
                        type: [String, Number]
                    },
                    type: {
                        type: String
                    },
                    placeholder: {
                        type: String
                    },
                    disabled: {
                        type: [String, Boolean]
                    }
                },
                methods: {
                    focus: function() {
                        this.$refs.input.focus()
                    },
                    blur: function() {
                        this.$refs.input.blur()
                    }
                }
            },
            vt = pt,
            ft = Object(d["a"])(vt, ht, _t, !1, null, null, null),
            bt = ft.exports,
            gt = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-prompt"
                }, [t("div", {
                    staticClass: "base-prompt-title"
                }, [e._v(e._s(e.message))]), t("div", {
                    staticClass: "base-prompt-input"
                }, [t("BaseInput", {
                    staticClass: "base-input-dark",
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.confirm.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.input,
                        callback: function(t) {
                            e.input = t
                        },
                        expression: "input"
                    }
                })], 1), t("div", {
                    staticClass: "base-prompt-actions"
                }, [t("BaseButton", {
                    attrs: {
                        text: e.confirmText
                    },
                    on: {
                        click: e.confirm
                    }
                }), t("BaseButton", {
                    attrs: {
                        text: e.cancelText
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("confirm")
                        }
                    }
                })], 1)])
            },
            yt = [],
            Ct = {
                name: "BasePrompt",
                props: {
                    message: {
                        type: String,
                        required: !0
                    },
                    confirmText: {
                        type: String,
                        required: !0
                    },
                    cancelText: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        input: ""
                    }
                },
                methods: {
                    confirm: function() {
                        this.$emit("confirm", this.input), this.input = ""
                    }
                }
            },
            kt = Ct,
            wt = Object(d["a"])(kt, gt, yt, !1, null, null, null),
            St = wt.exports,
            Mt = {
                name: "ClothShop",
                components: {
                    BasePrompt: St,
                    BaseInput: bt,
                    BaseButton: dt,
                    BaseSlider: rt
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        cdata: JSON.parse(this.data),
                        prompt: !1,
                        selectedOutfit: null,
                        outfits: [],
                        outfitActive: !1,
                        lastInteract: 0,
                        selected: null,
                        selected2: null,
                        selectedShoppingCartItem: null,
                        clothTypeId: -3,
                        clothData: [],
                        clothVariationData: [],
                        clothShoppingCardData: [],
                        alllocalSavedClothData: {},
                        price: 0,
                        searchCloth: "",
                        searchVariation: "",
                        selectCloth: !0,
                        index: -1,
                        rotation: 0,
                        bodiesMan: [{
                            n: "T-Shirt",
                            v: 0,
                            p: 0,
                            values: [{
                                n: "T-Shirt",
                                v: 9506
                            }]
                        }, {
                            n: "Unterhemd",
                            v: 2,
                            p: 0,
                            values: [{
                                n: "Unterhemd",
                                v: 9508
                            }]
                        }, {
                            n: "Unterhemd 2",
                            v: 5,
                            p: 0,
                            values: [{
                                n: "Unterhemd 2",
                                v: 17617
                            }]
                        }, {
                            n: "Langarm",
                            v: 1,
                            p: 0,
                            values: [{
                                n: "Langarm",
                                v: 9507
                            }]
                        }, {
                            n: "Langarm 2",
                            v: 4,
                            p: 0,
                            values: [{
                                n: "Langarm 2",
                                v: 9509
                            }]
                        }, {
                            n: "Langarm 3",
                            v: 6,
                            p: 0,
                            values: [{
                                n: "Langarm 3",
                                v: 17614
                            }]
                        }, {
                            n: "Hemd gekrämpelt",
                            v: 8,
                            p: 0,
                            values: [{
                                n: "Hemd gekrämpelt",
                                v: 17615
                            }]
                        }, {
                            n: "Oberkörper",
                            v: 15,
                            p: 0,
                            values: [{
                                n: "Oberkörper",
                                v: 12358
                            }]
                        }, {
                            n: "Ganzkörper",
                            v: 3,
                            p: 0,
                            values: [{
                                n: "Ganzkörper",
                                v: 17616
                            }]
                        }, {
                            n: "Jacke",
                            v: 11,
                            p: 0,
                            values: [{
                                n: "Jacke",
                                v: 17618
                            }]
                        }, {
                            n: "Jacke 2",
                            v: 12,
                            p: 0,
                            values: [{
                                n: "Jacke 2",
                                v: 17619
                            }]
                        }, {
                            n: "Jacke offen",
                            v: 14,
                            p: 0,
                            values: [{
                                n: "Jacke offen",
                                v: 17633
                            }]
                        }, {
                            n: "Jacke offen kurzarm",
                            v: 184,
                            p: 0,
                            values: [{
                                n: "Jacke offen kurzarm",
                                v: 18391
                            }]
                        }],
                        bodiesWoman: [{
                            n: "T-Shirt",
                            v: 14,
                            p: 0,
                            values: [{
                                n: "T-Shirt",
                                v: 17632
                            }]
                        }, {
                            n: "T-Shirt Ausschnitt",
                            v: 0,
                            p: 0,
                            values: [{
                                n: "T-Shirt Ausschnitt",
                                v: 17620
                            }]
                        }, {
                            n: "Einseitig Schulterfrei",
                            v: 2,
                            p: 0,
                            values: [{
                                n: "Einseitig Schulterfrei",
                                v: 17622
                            }]
                        }, {
                            n: "Bluse",
                            v: 9,
                            p: 0,
                            values: [{
                                n: "Bluse",
                                v: 17629
                            }]
                        }, {
                            n: "Langarm",
                            v: 3,
                            p: 0,
                            values: [{
                                n: "Langarm",
                                v: 17623
                            }]
                        }, {
                            n: "Langarm Ausschnitt",
                            v: 7,
                            p: 0,
                            values: [{
                                n: "Langarm Ausschnitt",
                                v: 17627
                            }]
                        }, {
                            n: "Jacke offen",
                            v: 1,
                            p: 0,
                            values: [{
                                n: "Jacke offen",
                                v: 17621
                            }]
                        }, {
                            n: "Jacke 3/4 offen",
                            v: 5,
                            p: 0,
                            values: [{
                                n: "Jacke 3/4 offen",
                                v: 17625
                            }]
                        }, {
                            n: "Jacke offen 2",
                            v: 6,
                            p: 0,
                            values: [{
                                n: "Jacke offen 2",
                                v: 17626
                            }]
                        }, {
                            n: "Jacke offen kurzarm",
                            v: 6,
                            p: 0,
                            values: [{
                                n: "Jacke offen kurzarm",
                                v: 18395
                            }]
                        }, {
                            n: "Oberkörper",
                            v: 15,
                            p: 0,
                            values: [{
                                n: "Oberkörper",
                                v: 12360
                            }]
                        }, {
                            n: "Ganzkörper",
                            v: 8,
                            p: 0,
                            values: [{
                                n: "Ganzkörper",
                                v: 17628
                            }]
                        }, {
                            n: "Bandeau",
                            v: 4,
                            p: 0,
                            values: [{
                                n: "Bandeau",
                                v: 17624
                            }]
                        }, {
                            n: "Bandeautop",
                            v: 11,
                            p: 0,
                            values: [{
                                n: "Bandeautop",
                                v: 17630
                            }]
                        }, {
                            n: "Korsett",
                            v: 12,
                            p: 0,
                            values: [{
                                n: "Korsett",
                                v: 17631
                            }]
                        }, {
                            n: "Croptop",
                            v: 153,
                            p: 0,
                            values: [{
                                n: "Croptop",
                                v: 24242
                            }]
                        }, {
                            n: "Bauchfrei Fux",
                            v: 161,
                            p: 0,
                            values: [{
                                n: "Bauchfrei Fux",
                                v: 24241
                            }]
                        }]
                    }
                },
                methods: {
                    close: function() {
                       this.emitServer("CloseCloth"), fuckThis("ResetCam"), this.hide()
                    },
                    confirm: function(e) {
                        void 0 != e ? e.length < 1 || e.length > 30 || (this.prompt = !1, this.emitServer("CreateOutfit", e)) : this.prompt = !1
                    },
                    getClothesByTypeId: function(e) {
                        var t = Date.now();
                        t - this.lastInteract > 100 && (this.lastInteract = t, this.clothTypeId = e, this.clothVariationData = [], this.selected = null, this.selected2 = null, void 0 == this.alllocalSavedClothData[e] || null == this.alllocalSavedClothData[e] ? this.emitServer("GetClothesByTypeId", this.data.i, e) : this.clothData = this.alllocalSavedClothData[e])
                    },
                    addClothToShoppingCart: function(e) {
                        // Jennileon30

                        var    i = new Object;
                        i.n = e.n, i.c = e.c, i.t = e.t, i.d = e.d, i.p = e.p, i.prop = e.prop;
                        
                        
                       if (this.canAdd(i)) { 
                        
                        
                        this.emitServer("clothingShopDress", i.c, i.d, i.t, i.prop);
                        this.price += i.p;
                        this.clothShoppingCardData.push(i);
                        } else { fuckThis("fromUINot","Kleidungsstück ist bereits im Warenkorb", "#c72020")
                    }
                    },
                    showCloth: function(e) {
       
                        var    i = new Object;
                        i.n = e.n, i.c = e.c, i.t = e.t, i.d = e.d, i.p = e.p, i.prop = e.prop;
                        
                                            
                        
                        this.emitServer("clothingShopDress", i.c, i.d, i.t, i.prop);
                    
                    },
                    removeFromShoppingCart: function(e) {
                        for (var t = 0; t < this.clothShoppingCardData.length; t) {
                            var a = this.clothShoppingCardData[t];
                            this.emitServer("clothingShopUndress", "" + a.c);
                            a.c == e.c && a.t == e.t && a.d == e.d && (this.clothShoppingCardData.splice(t, 1), this.selectedShoppingCartItem = [], this.price -= e.p), t += 1
                        }
                    },
                    buyShoppingCard: function() {
                        -1 == this.data.i || this.emitServer("BuyClothes", this.data.i, JSON.stringify(this.clothShoppingCardData))
                    },
                    canAdd: function(e) {
                        var t = !1;
                        return this.clothShoppingCardData.forEach((function(a) {
                            a.c == e.c && a.t == e.t && a.d == e.d && (t = !0)
                        })), !t
                    },
                    select: function(e) {
                        this.selected = e, this.selected2 = e.values[0], this.clothVariationData = e.values, this.emitServer("SetClothShopCloth", this.clothTypeId > 0, e.values[0].i), this.selectCloth = !0, this.index = this.clothData.indexOf(e)
                    },
                    select2: function(e) {
                        this.selected2 = e, this.emitServer("SetClothShopCloth", this.clothTypeId > 0, e.v), this.selectCloth = !1, this.index = this.clothVariationData.indexOf(e)
                    },
                    selectOutfit: function(e) {
                        this.selectedOutfit != e ? (this.selectedOutfit = e, this.emitServer("SelectOutfit", this.selectedOutfit.i)) : this.selectedOutfit = null
                    },
                    wearOutfit: function() {
                        null != this.selectedOutfit && this.emitServer("WearOutfit", this.selectedOutfit.i)
                    },
                    deleteOutfit: function() {
                        var e = this;
                        null != this.selectedOutfit && (this.emitServer("DeleteOutfit", this.selectedOutfit.i), this.outfits = this.outfits.filter((function(t) {
                            return t.i != e.selectedOutfit.i
                        })), this.selectedOutfit = null)
                    },
                    RsOutfits: function(e) {
                        this.outfits = e.data
                    },
                    SendClothesToClient: function(e) {
                        this.alllocalSavedClothData[this.clothTypeId] = JSON.parse(e), this.clothData = JSON.parse(e)
                    },
                    FinishChangeCloth: function() {
                        this.clothShoppingCardData = [], this.selectedShoppingCartItem = null
                    },
                    FinishClothBuy: function() {
                        var e = arguments.length <= 2 ? void 0 : arguments[2];
                        this.price = 0, this.clothShoppingCardData = [], this.selectedShoppingCartItem = null, this.data.data.m = this.data.data.m - e
                    },
                    showBodies: function() {
                        this.clothVariationData = [], this.clothData = this.data.g ? this.bodiesWoman : this.bodiesMan, this.clothTypeId = 3
                    },
                    showOutfits: function() {
                        this.outfitActive || this.outfits.length || this.emitServer("RqOutfits"), this.outfitActive = !this.outfitActive
                    },
                    takeOff: function(e) {
                        e < 1 ? this.emitServer("ClearProp", -1 * e) : this.emitServer("ClearCloth", e), -1 == this.data.i && this.emitServer("ClothOff", e)
                    },
                    keydown: function(e) {
                        if (null != this.selected) {
                            if (40 == e.which) this.index++;
                            else if (38 == e.which) this.index--;
                            else {
                                if (37 != e.which && 39 != e.which) return;
                                this.selectCloth = !this.selectCloth, this.index = 0
                            }
                            this.selectCloth ? (this.index >= this.clothData.length ? this.index = 0 : this.index < 0 && (this.index = this.clothData.length - 1), this.select(this.clothData[this.index]), document.getElementById("cloth").childNodes[this.index].scrollIntoView(!1)) : (this.index >= this.clothVariationData.length ? this.index = 0 : this.index < 0 && (this.index = this.clothVariationData.length - 1), this.select2(this.clothVariationData[this.index]), document.getElementById("variation").childNodes[this.index].scrollIntoView(!1))
                        }
                    },
                    setRotation: function() {
                        fuckThis("SetRotation", this.rotation)
                    }
                },
                computed: {
                    checkIsBuyable: function() {
                        return -1 != this.data.i ? 0 == this.clothShoppingCardData.length || this.price > this.data.m : 0 == this.clothShoppingCardData.length
                    },
                    filterCloth: function() {
                        var e = this;
                        return this.clothData.filter((function(t) {
                            return t.n.toLowerCase().includes(e.searchCloth.toLowerCase())
                        }))
                    },
                    filterVariation: function() {
                        var e = this;
                        return this.clothVariationData.filter((function(t) {
                            return t.n.toLowerCase().includes(e.searchVariation.toLowerCase())
                        }))
                    },
                    getHeight: function() {
                        var e = 3 * (Math.ceil(this.data.data.length / 4) - 1) + 40;
                        return e.toString()
                    }
                },
                created: function() {
                    this.emit("CreateTattoCamera", -1), document.addEventListener("keydown", this.keydown), this.addEvent("SendClothesToClient", this.SendClothesToClient), this.addEvent("FinishClothBuy", this.FinishClothBuy), this.addEvent("FinishChangeCloth", this.FinishChangeCloth), this.addEvent("RsOutfits", this.RsOutfits), this.addEvent("CloseIF", this.close)
                },
                destroyed: function() {
                    document.removeEventListener("keydown", this.keydown)
                }
            },
            xt = Mt,
            Pt = (a("90f5"), Object(d["a"])(xt, Qe, et, !1, null, "2c8e2001", null)),
            Tt = Pt.exports,
            Ft = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: e.data.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "teamkeystorage"
                }, [t("div", {
                    staticClass: "teamkeystorage-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: this.showKeys
                    },
                    on: {
                        click: function(t) {
                            return e.displayKeys()
                        }
                    }
                }, [e._v("Schlüssel anzeigen")]), 0 != this.data.i && -1 != this.data.i ? t("CoreButton", {
                    class: {
                        active: !this.showKeys
                    },
                    on: {
                        click: function(t) {
                            return e.displayLogs()
                        }
                    }
                }, [e._v("Schlüssel Logs")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "teamkeystorage-body"
                }, [e.showKeys ? t("CoreTable", {
                    staticClass: "table table-borderless text-white"
                }, [t("thead", [t("tr", [t("th", [e._v("Fahrzeugnummer")]), t("th", [e._v("Fahrzeugtyp")]), t("th", [e._v("Notiz")]), t("th", [e._v("Besitzer")]), t("th", [e._v("Datum")]), t("th", [e._v("Entnehmen")])])]), t("tbody", e._l(e.keys, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable"
                    }, [t("td", [e._v(e._s(a.v))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.z))]), t("td", [e._v(e._s(a.p))]), t("td", [e._v(e._s(a.c))]), t("td", [t("BaseButton", {
                        on: {
                            click: function(t) {
                                return e.takeKey(a)
                            }
                        }
                    }, [e._v("Entnehmen")])], 1)])
                })), 0)]) : e._e(), e.showKeys ? e._e() : t("CoreTable", {
                    staticClass: "table table-borderless text-white"
                }, [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Bürger")]), t("th", [e._v("Fahrzeug Id")]), t("th", [e._v("Fahrzeugname")]), t("th", [e._v("Notiz")]), t("th", [e._v("Typ")]), t("th", [e._v("Datum")])])]), e.orderedLogs.length > 0 ? t("tbody", e._l(e.orderedLogs, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(a.i))]), t("td", [e._v(e._s(a.p))]), t("td", [e._v(e._s(a.v))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.z))]), t("td", [t("span", {
                        class: {
                            "text-success": a.t,
                            "text-danger": !a.t
                        }
                    }, [e._v(e._s(a.t ? "Reingelegt" : "Entnommen"))])]), t("td", [e._v(e._s(a.d))])])
                })), 0) : e._e()])], 1)])])
            },
            Bt = [],
            It = a("2ef0"),
            At = a.n(It),
            Dt = {
                name: "TeamKeyStorage",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        showKeys: !0,
                        keys: this.data.data,
                        logs: []
                    }
                },
                computed: {
                    orderedLogs: function() {
                        return At.a.orderBy(this.logs, "i", ["desc"])
                    }
                },
                methods: {
                    displayKeys: function() {
                        this.showKeys = !0
                    },
                    displayLogs: function() {
                        this.showKeys = !1, 0 == this.logs.length ? this.emitServer("RqKeyLogs", this.data.i) : this.data.data = this.logs
                    },
                    takeKey: function(e) {
                        if (0 == this.data.i) this.emitServer("PackVehicleKey", e.v);
                        else {
                            if (-1 == this.data.i) return;
                            this.emitServer("TakeKeyFromStorage", this.data.i, e.i)
                        }
                        this.keys.splice(this.keys.indexOf(e), 1)
                    },
                    rsKeyLogs: function(e) {
                        this.logs = e
                    }
                },
                created: function() {
                    this.addEvent("RsKeyLogs", this.rsKeyLogs)
                }
            },
            Nt = Dt,
            Ot = (a("225f"), Object(d["a"])(Nt, Ft, Bt, !1, null, "11b1dd19", null)),
            Lt = Ot.exports,
            Ht = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    attrs: {
                        "with-second-tab": ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    attrs: {
                        slot: "computer-header-buttons"
                    },
                    slot: "computer-header-buttons"
                }, [t("button", {
                    on: {
                        click: function(t) {
                            return e.switchControlCenter()
                        }
                    }
                }, [1 == e.cdata.oo ? t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("Leitstelle abgeben")]) : t("span", {
                    staticClass: "text-custom-success"
                }, [e._v("Leitstelle übernehmen")])]), t("button", {
                    on: {
                        click: e.sendGovMessage
                    }
                }, [e._v("Öffentliche Nachricht")]), 1 == e.cdata.oo ? t("button", {
                    on: {
                        click: function(t) {
                            return e.emitServer("ControlMap")
                        }
                    }
                }, [e._v("Leitstellenkarte")]) : e._e(), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.govPrompt,
                        expression: "govPrompt"
                    }],
                    attrs: {
                        message: "Gov Nachricht:",
                        confirmText: "Absenden",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirmGovMessage
                    }
                })], 1), t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "images/teams/3.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" LSPD Computer ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("LSPD")]), t("span", [e._v(e._s(e.pageTitle))])]), t("div", {
                    staticClass: "computer-body-content-search",
                    attrs: {
                        slot: "computer-body-content-search"
                    },
                    slot: "computer-body-content-search"
                }, [2 == e.page ? t("span", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.searchPlayerName,
                        expression: "searchPlayerName"
                    }],
                    attrs: {
                        type: "text",
                        autocomplete: "off",
                        placeholder: "Suchen..."
                    },
                    domProps: {
                        value: e.searchPlayerName
                    },
                    on: {
                        keyup: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.searchPlayerByName.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.searchPlayerName = t.target.value)
                        }
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.searchPlayerByName.apply(null, arguments)
                        }
                    }
                }), t("button", {
                    on: {
                        click: e.searchPlayerByName
                    }
                }, [e._v("Suchen")])]) : e._e(), 3 == e.page ? t("span", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.searchPrisonerName,
                        expression: "searchPrisonerName"
                    }],
                    attrs: {
                        type: "text",
                        autocomplete: "off",
                        placeholder: "Häftlinge durchsuchen..."
                    },
                    domProps: {
                        value: e.searchPrisonerName
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.searchPrisonerName = t.target.value)
                        }
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.searchPrisonerByName.apply(null, arguments)
                        }
                    }
                }), t("button", {
                    on: {
                        click: e.searchPrisonerByName
                    }
                }, [e._v("Suchen")])]) : e._e(), 4 == e.page ? t("span", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.exclusionZone,
                        expression: "exclusionZone"
                    }],
                    attrs: {
                        type: "text",
                        autocomplete: "off",
                        placeholder: "Sperrzone suchen"
                    },
                    domProps: {
                        value: e.exclusionZone
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.exclusionZone = t.target.value)
                        }
                    }
                }), e.filteredExclusionZone ? t("button", {
                    staticClass: "btn-danger",
                    on: {
                        click: e.clearExclusionZoneSearch
                    }
                }, [e._v("Leeren")]) : t("button", {
                    on: {
                        click: e.searchExclusionZone
                    }
                }, [e._v("Suchen")])]) : e._e(), 5 == e.page && 2 == e.subPageTab ? t("span", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    attrs: {
                        type: "text",
                        autocomplete: "off",
                        placeholder: "Straftat suchen..."
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                }), t("button", {
                    on: {
                        click: e.searchCrimeByName
                    }
                }, [e._v("Suchen")])]) : e._e()]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 0 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(0, "Informationen")
                        }
                    }
                }, [t("a", {}, [e._v("Informationen")])]), t("li", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.emitServer("Services")
                        }
                    }
                }, [t("a", {}, [e._v("Offene Services")])]), t("li", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(2, "Personensuche")
                        }
                    }
                }, [t("a", {}, [e._v("Personensuche")])]), 1 == this.cdata.oo ? t("li", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(3, "Häftlinge")
                        }
                    }
                }, [t("a", {}, [e._v("Häftlinge")])]) : e._e(), t("li", {
                    on: {
                        click: e.openVehicleRegistrationOverview
                    }
                }, [t("a", {}, [e._v("Anmeldungen")])]), t("li", {
                    class: {
                        active: 4 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(4, "Sperrzonen")
                        }
                    }
                }, [t("a", {}, [e._v("Sperrzonen")])]), null != e.playerSelected ? t("li", {
                    class: {
                        active: 5 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(5, e.playerSelected.n)
                        }
                    }
                }, [t("a", {}, [e._v(e._s(e.playerSelected.n) + " "), t("span", {
                    staticClass: "mdi mdi-close text-custom-danger",
                    on: {
                        click: e.closePlayerTab
                    }
                })])]) : e._e()]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [0 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-journal"
                }, [t("div", {
                    staticClass: "records-box"
                }, [t("div", [t("h3", [e._v("Informationen")]), t("p", [e._v(" Sehr geehrte Damen und Herren,"), t("br"), t("br"), e._v(" leider konnten beim aktuellen Software Update (VisualOS v2.0.0) nicht alle Funktionen erfolgreich installiert werden."), t("br"), e._v(" Ausstehenden Installationsfortschritte sollten jedoch innerhalb der nächsten Woche erfolgen."), t("br"), e._v(" Bitte nehmen Sie Rücksicht, dass weder wir als Firma, noch Ihr Chef einen genauen Zeitpunkt für die letztendliche Abschlussinstallation geben können."), t("br"), t("br"), e._v(" Die Gründe können Sie sich gern bei Ihrem Chief Of Police bzw. dessen Vertreter*innen erfragen."), t("br"), t("br"), e._v(" Bis dahin wünschen wir Ihnen einen angenehmen Dienst mit Ihrem neuen Software Update."), t("br"), t("br"), e._v(" Mit freundlichen Grüßen"), t("br"), t("br"), e._v(" VisualOS Inc."), t("br"), t("i", [e._v("i.A. Daniel Albert")])])])])]) : e._e(), 2 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-search"
                }, [t("div", {
                    staticClass: "table-fixed-head"
                }, [t("CoreTable", {
                    staticClass: "table text-white"
                }, [t("thead", [t("tr", [t("th", [e._v("Name")])])]), t("tbody", [e._l(e.playerData, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.selectPlayer(a)
                            }
                        }
                    }, [t("td", [e._v(e._s(a.n))])])
                })), e.playerData.length ? e._e() : t("tr", [t("td", [e._v("Benutzen Sie bitte die Suchleiste um Personen zu finden.")])])], 2)])], 1)]) : e._e(), 3 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-prisoners"
                }, [t("div", {
                    staticClass: "table-fixed-head"
                }, [t("CoreTable", {
                    staticClass: "table text-white"
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", [e._v("Gefängnis")]), t("th", [e._v("Haftzeit")]), t("th", [e._v("Bewährung")])])]), t("tbody", [e._l(e.prisoners, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.pr))]), t("td", [e._v(e._s(a.j))]), t("td", [e._v(e._s(a.p))])])
                })), e.prisoners.length ? e._e() : t("tr", [t("td", {
                    attrs: {
                        colspan: "3"
                    }
                }, [e._v("Es befinden sich keine Gefangenen im Staatsgefängnis oder in den Zellen des LSPDs.")])])], 2)])], 1)]) : e._e(), 4 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-restricted-zones"
                }, [t("div", {
                    staticClass: "restricted-zones-header"
                }, [t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 0 == e.subPageTab,
                        "btn-dark": 0 != e.subPageTab
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 0, e.getRestrictedZones()
                        }
                    }
                }, [e._v(" Aktive Sperrzonen ")]), t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 1 == e.subPageTab,
                        "btn-dark": 1 != e.subPageTab
                    },
                    attrs: {
                        disabled: 0 == this.data.hr
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 1, e.getRestrictedZonePatterns()
                        }
                    }
                }, [e._v(" Vorlagen ")]), t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 2 == e.subPageTab,
                        "btn-dark": 2 != e.subPageTab
                    },
                    attrs: {
                        disabled: 0 == this.data.hr
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 2, e.getRestrictedZonePatterns()
                        }
                    }
                }, [e._v(" Sperrzone erstellen ")]), t("BaseButton", {
                    staticClass: "btn btn-preview-zone",
                    attrs: {
                        disabled: e.checkCanZoneBeCreated
                    },
                    on: {
                        click: function(t) {
                            return e.createPattern()
                        }
                    }
                }, [e._v(" Vorlage erstellen ")]), t("BaseButton", {
                    staticClass: "btn btn-preview-zone",
                    attrs: {
                        disabled: e.checkCanZoneBeCreated
                    },
                    on: {
                        click: function(t) {
                            return e.previewZone()
                        }
                    }
                }, [e._v(" Vorschau ")]), t("BaseButton", {
                    staticClass: "btn btn-publish-zone",
                    attrs: {
                        disabled: e.checkCanZoneBeCreated
                    },
                    on: {
                        click: function(t) {
                            return e.publishZone()
                        }
                    }
                }, [e._v(" Veröffentlichen ")])], 1), t("div", {
                    staticClass: "restricted-zones-body"
                }, [0 == e.subPageTab ? t("div", [t("CoreTable", {
                    staticClass: "table table-borderless text-white",
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Datum / Uhrzeit")]), t("th", [e._v("Beschreibung")]), t("th", [e._v("Radius")]), t("th", [e._v("Beamter")]), t("th")])]), t("tbody", [e._l(e.filteredZones, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.r) + " m")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.o))]), t("td", [t("span", {
                        staticClass: "text-custom-danger clickable",
                        on: {
                            click: function(t) {
                                return e.removeRestrictedZone(a.i)
                            }
                        }
                    }, [e._v("Aufheben")])])])
                })), e.filteredZones.length ? e._e() : t("tr", [t("td", {
                    attrs: {
                        colspan: "6"
                    }
                }, [e._v("Keine Aktiven Sperrzonen vorhanden.")])])], 2), t("tfoot", [t("tr", [t("td"), t("td"), t("td"), t("td"), t("td", {
                    staticClass: "text-center"
                }, [t("div", {
                    staticClass: "text-custom-danger",
                    on: {
                        click: e.removeAllRestrictedZones
                    }
                }, [e._v("Alle aufheben")])])])])])], 1) : e._e(), 1 == e.subPageTab ? t("div", {
                    staticClass: "zone-patterns"
                }, [t("CoreTable", {
                    staticClass: "table table-borderless text-white",
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Beschreibung")]), t("th", [e._v("Veröffentlichung")]), t("th", [e._v("Wiederholung")]), t("th", [e._v("Aufhebung")]), t("th", [e._v("Radius")]), t("th"), t("th")])]), t("tbody", [e._l(e.filteredZonePatterns, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.pt))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.ut))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.dt))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.r) + " m")]), t("td", [t("div", {
                        staticClass: "zone-patterns-location clickable",
                        on: {
                            click: function(t) {
                                return e.previewRestrictedZone(a.x, a.y, a.r)
                            }
                        }
                    }, [e._v("Standort anzeigen")])]), t("td", [t("span", {
                        staticClass: "text-custom-danger clickable",
                        on: {
                            click: function(t) {
                                return e.removeRestrictedZonePattern(a.i)
                            }
                        }
                    }, [e._v("Löschen")])])])
                })), 0 === e.filteredZonePatterns.length ? t("tr", [t("td", {
                    attrs: {
                        colspan: "7"
                    }
                }, [e._v("Keine Vorlagen vorhanden.")])]) : e._e()], 2)])], 1) : e._e(), 2 == e.subPageTab ? t("div", {
                    staticClass: "create-zone"
                }, [t("div", {
                    staticClass: "zone-pattern-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Vorlage")])])]), t("tbody", e._l(e.zonePatterns, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.selectZonePattern(a)
                            }
                        }
                    }, [t("td", [e._v(e._s(a.n))])])
                })), 0)])], 1), t("div", {
                    staticClass: "create-zone-table"
                }, [t("div", {
                    staticClass: "create-zone-header"
                }, [t("h3", [e._v("Sperrzone erstellen")])]), t("div", {
                    staticClass: "create-zone-content"
                }, [t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Beschreibung")]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.zoneDescription,
                        expression: "zoneDescription"
                    }],
                    attrs: {
                        id: "create-zone-description",
                        maxlength: "20",
                        type: "text",
                        autocomplete: "off",
                        placeholder: "Staatsbank"
                    },
                    domProps: {
                        value: e.zoneDescription
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.zoneDescription = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Radius")]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.zoneRadius,
                        expression: "zoneRadius"
                    }],
                    attrs: {
                        id: "create-zone-radius",
                        type: "number",
                        autocomplete: "off",
                        placeholder: "500"
                    },
                    domProps: {
                        value: e.zoneRadius
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.zoneRadius = t.target.value)
                        }
                    }
                }), t("span", {
                    staticClass: "create-zone-prefix"
                }, [e._v("m")])]), t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Veröffentlichung")]), t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.zonePublishMessage,
                        expression: "zonePublishMessage"
                    }],
                    staticClass: "create-zone-message",
                    attrs: {
                        maxlength: "200",
                        rows: "2",
                        autocomplete: "off",
                        placeholder: "Aufgrund eines aktiven Einsatzes ist die Staatsbank hiermit eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!"
                    },
                    domProps: {
                        value: e.zonePublishMessage
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.zonePublishMessage = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Wiederholung")]), t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.zoneUpdateMessage,
                        expression: "zoneUpdateMessage"
                    }],
                    staticClass: "create-zone-message",
                    attrs: {
                        maxlength: "200",
                        rows: "2",
                        autocomplete: "off",
                        placeholder: "Die Staatsbank ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!"
                    },
                    domProps: {
                        value: e.zoneUpdateMessage
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.zoneUpdateMessage = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Aufhebung")]), t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.zoneDeleteMessage,
                        expression: "zoneDeleteMessage"
                    }],
                    staticClass: "create-zone-message",
                    attrs: {
                        maxlength: "200",
                        rows: "2",
                        autocomplete: "off",
                        placeholder: "Die Sperrzone an der Staatsbank ist hiermit aufgehoben! Wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos weiterhin einen angenehmen Tag."
                    },
                    domProps: {
                        value: e.zoneDeleteMessage
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.zoneDeleteMessage = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "create-zone-input"
                }, [t("div", {
                    staticClass: "create-zone-label"
                }, [e._v("Standort")]), t("button", {
                    on: {
                        click: e.openMap
                    }
                }, [e._v("Karte öffnen")])])])])]) : e._e()])]) : e._e(), 5 == e.page && e.playerData.length ? t("div", {
                    staticClass: "computer-body-content-box-criminal-records"
                }, [t("div", {
                    staticClass: "criminal-records-header"
                }, [t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 0 == e.subPageTab,
                        "btn-dark": 0 != e.subPageTab
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 0, e.closeCrimeHistoryTab(), e.getPlayerDossier()
                        }
                    }
                }, [e._v(" Offene Akten ")]), t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 1 == e.subPageTab,
                        "btn-dark": 1 != e.subPageTab
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 1, e.closeCrimeHistoryTab(), e.getPlayerCases()
                        }
                    }
                }, [e._v(" Strafhistorie ")]), t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 2 == e.subPageTab,
                        "btn-dark": 2 != e.subPageTab
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 2, e.closeCrimeHistoryTab()
                        }
                    }
                }, [e._v(" Aktenvergabe ")]), t("BaseButton", {
                    staticClass: "btn",
                    class: {
                        "btn-active": 3 == e.subPageTab,
                        "btn-dark": 3 != e.subPageTab
                    },
                    on: {
                        click: function(t) {
                            e.subPageTab = 3, e.closeCrimeHistoryTab(), e.getPlayerLicences()
                        }
                    }
                }, [e._v(" Lizenzen ")]), this.data.ho ? t("BaseButton", {
                    staticClass: "btn btn-handy-orten",
                    on: {
                        click: function(t) {
                            return e.locateSmartphone()
                        }
                    }
                }, [e._v("Handy orten ")]) : e._e(), t("BaseButton", {
                    staticClass: "btn btn-akten-vergeben",
                    attrs: {
                        disabled: e.checkIsAnyCrimeToGive
                    },
                    on: {
                        click: function(t) {
                            return e.giveCrimeToPlayer()
                        }
                    }
                }, [e._v(" Akten Vergeben ")]), e.crimeHistoryTabOpened ? t("BaseButton", {
                    staticClass: "btn btn-active",
                    on: {
                        click: function(t) {
                            return e.clearCrimeData()
                        }
                    }
                }, [e._v(" Strafhistorie schließen ")]) : e._e()], 1), t("div", {
                    staticClass: "criminal-records-body"
                }, [0 == e.subPageTab ? t("div", [t("CoreTable", {
                    staticClass: "table table-borderless text-white",
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Datum / Uhrzeit")]), t("th", [e._v("StKatV")]), t("th", [e._v("Kosten")]), t("th", [e._v("Haftzeit")]), t("th", [e._v("Beamter")]), t("th")])]), t("tbody", [e._l(e.activeCrimeData, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.c) + " $")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.j))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.o))]), t("td", [t("span", {
                        staticClass: "text-custom-danger clickable",
                        on: {
                            click: function(t) {
                                return e.removeFromCrimeActive(a)
                            }
                        }
                    }, [e._v("Löschen")])])])
                })), this.activeCrimeData.length ? e._e() : t("tr", [t("td", {
                    attrs: {
                        colspan: "6"
                    }
                }, [e._v("Keine Aktiven Straftaten vorhanden.")])])], 2), t("tfoot", [t("tr", [t("td"), t("td"), t("td", {
                    staticClass: "text-center"
                }, [e._v(e._s(e.calculateActivePrice) + " $")]), t("td", {
                    staticClass: "text-center"
                }, [e._v(e._s(e.calculateActiveTime))]), t("td"), t("td", {
                    staticClass: "text-center"
                }, [t("div", {
                    staticClass: "text-custom-danger",
                    on: {
                        click: e.jailPlayer
                    }
                }, [e._v("Inhaftieren")])])])])])], 1) : e._e(), 1 == e.subPageTab ? t("div", {
                    staticClass: "strafhistorie"
                }, [e.crimeHistoryTabOpened ? t("CoreTable", {
                    staticClass: "table table-borderless text-white",
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Datum / Uhrzeit")]), t("th", [e._v("Straftat")]), t("th", [e._v("Kosten")]), t("th", [e._v("Haftzeit")]), t("th", [e._v("Officer")])])]), t("tbody", e._l(e.playerCaseEntries, (function(a, i) {
                    return t("tr", {
                        key: i.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.crimeData.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.crimeData.c))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.crimeData.h))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.o))])])
                })), 0)]) : t("CoreTable", {
                    staticClass: "table table-borderless text-white",
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Datum / Uhrzeit")]), t("th", [e._v("Kosten")]), t("th", [e._v("Haftzeit")]), t("th", [e._v("Kooperativ")]), t("th", [e._v("Anwalt")]), t("th", [e._v("Beamter")]), t("th", [e._v(" ")])])]), t("tbody", e._l(e.playerCases, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.c) + " $")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.t))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.wc ? "Ja" : "Nein"))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.l))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.o))]), t("td", {
                        staticClass: "text-center text-primary cursor-pointer",
                        on: {
                            click: function(t) {
                                return e.showCrime(a.i)
                            }
                        }
                    }, [e._v(" Ansehen ")])])
                })), 0)])], 1) : e._e(), 2 == e.subPageTab ? t("div", {
                    staticClass: "aktenvergabe"
                }, [t("div", {
                    staticClass: "crime-categories-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Kategorie")])])]), t("tbody", e._l(e.crimeCategoryData, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.select(a)
                            }
                        }
                    }, [null == e.selected ? t("td", [e._v(e._s(a.n))]) : t("td", {
                        class: {
                            active: e.selected.i == a.i
                        }
                    }, [e._v(e._s(a.n))])])
                })), 0)])], 1), t("div", {
                    staticClass: "crime-search-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Straftat")]), t("th", [e._v("Kosten")]), t("th", [e._v("Haftzeit")])])]), t("tbody", e._l(e.searchCrimes, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.addToCrimeGive(a)
                            }
                        }
                    }, [t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.p) + " $")]), t("td", [e._v(e._s(a.j))])])
                })), 0)])], 1), t("div", {
                    staticClass: "crime-given-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Ausgewählte Straftaten")]), t("th", [e._v("Kosten")]), t("th", [e._v("Haftzeit")]), t("th")])]), t("tbody", e._l(e.giveCrimeData, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.p) + " $")]), t("td", [e._v(e._s(a.j))]), t("td", [t("span", {
                        staticClass: "mdi mdi-delete text-custom-danger clickable",
                        on: {
                            click: function(t) {
                                return e.removeFromCrimeGive(a)
                            }
                        }
                    })])])
                })), 0), t("tfoot", {
                    staticClass: "text-white"
                }, [t("tr", [t("td", {
                    staticClass: "text-right pr-2",
                    attrs: {
                        colspan: "2"
                    }
                }, [e._v(e._s(e.calculatePrice) + " $")]), t("td", {
                    staticClass: "text-left pl-3",
                    attrs: {
                        colspan: "2"
                    }
                }, [e._v(e._s(e.calculateTime))])])])])], 1)]) : e._e(), 3 == e.subPageTab ? t("div", {
                    staticClass: "lizenzen"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    staticClass: "text-left",
                    attrs: {
                        width: "20%"
                    }
                }, [e._v("Schein")]), t("th", {
                    attrs: {
                        width: "10%"
                    }
                }), t("th", [e._v("Gesperrt bis")]), t("th", [e._v("Entzogen von")]), t("th", {
                    attrs: {
                        width: "20%"
                    }
                }, [e._v("Aktion")])])]), t("tbody", e._l(e.overviewPlayer.data, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(e.licenceInfo[a.i - 1]))]), t("td", [1 == a.v ? t("span", {
                        staticClass: "mdi mdi-check text-custom-success"
                    }) : t("span", {
                        staticClass: "mdi mdi-close text-custom-danger"
                    })]), t("td", [a.v > 1 ? t("span", [e._v(e._s(e.time(a.v)))]) : e._e()]), t("td"), t("td", [t("span", {
                        staticClass: "text-custom-danger clickable",
                        on: {
                            click: function(t) {
                                return e.takeLicense(a)
                            }
                        }
                    }, [e._v("Entziehen")])])])
                })), 0)])], 1) : e._e()])]) : e._e()])])
            },
            zt = [],
            jt = (a("d81d"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "computer"
                }, [t("div", {
                    staticClass: "computer-background"
                }, [t("div", {
                    staticClass: "computer-header"
                }, [e._m(0), t("div", {
                    staticClass: "computer-header-buttons"
                }, [e._t("computer-header-buttons")], 2), t("div", {
                    staticClass: "computer-header-close",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })]), e._t("computer-header-tab", (function() {
                    return [e._t("computer-tab-logo"), e._t("computer-tab-title")]
                })), e.withSecondTab ? e._t("computer-header-tab2", (function() {
                    return [e._t("computer-tab-logo2"), e._t("computer-tab-title2")]
                })) : e._e(), t("div", {
                    staticClass: "computer-header-url"
                }, [e._m(1), t("div", {
                    staticClass: "computer-header-url-bar"
                }, [t("span", {
                    staticClass: "mdi mdi-lock"
                }), t("span", {
                    staticClass: "text-nietzsche"
                }, [e._v("VisualOS")]), e._t("computer-header-url-bar")], 2)])], 2), t("div", {
                    staticClass: "computer-body"
                }, [t("div", {
                    staticClass: "computer-body-content"
                }, [e._t("computer-body-content-tablist"), e._t("computer-body-content-search"), t("div", {
                    staticStyle: {
                        clear: "both"
                    }
                }), t("div", {
                    staticClass: "computer-body-content-box"
                }, [e._t("computer-body-content-box")], 2)], 2), t("div", {
                    staticClass: "computer-branding"
                }, [e._v("VisualOS v1.0.0")])])])])
            }),
            Rt = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "computer-header-icon"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/computer/VisualOS.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "computer-header-url-navigation"
                }, [t("span", {
                    staticClass: "mdi mdi-arrow-left"
                }), t("span", {
                    staticClass: "mdi mdi-arrow-right"
                })])
            }],
            Vt = {
                name: "DeviceComputer",
                props: {
                    data: {},
                    withSecondTab: {
                        type: Boolean
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            Et = Vt,
            Gt = (a("1c51"), Object(d["a"])(Et, jt, Rt, !1, null, "47d537a9", null)),
            Wt = Gt.exports,
            Kt = {
                name: "PoliceComputer",
                components: {
                    CorePrompt: Ee,
                    CoreTable: ge,
                    BaseButton: dt,
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        cdata: JSON.parse(this.data),
                        licenceInfo: ["Personalausweis", "PKW-Führerschein", "LKW-Führerschein", "Motorradführerschein", "Bootsschein", "Helikopterschein", "Flugzeugschein", "Waffenschein", "Erste Hilfeschein", "Anwaltsschein"],
                        selected: null,
                        selected2: null,
                        playerSelected: null,
                        searchPlayerName: "",
                        searchPrisonerName: "",
                        playerData: [],
                        prisoners: [],
                        overviewPlayer: {},
                        giveCrimeData: [],
                        crimeCategoryData: [],
                        crimeData: [],
                        activeCrimeData: [],
                        activeCrimeCategory: null,
                        page: 0,
                        pageTitle: "Informationen",
                        subPage: 0,
                        subPageTab: 0,
                        crimeHistoryTabOpened: !1,
                        playerCases: [],
                        playerCaseEntries: [],
                        search: "",
                        govPrompt: !1,
                        restrictedZones: [],
                        filteredZones: [],
                        zonePatterns: [],
                        filteredZonePatterns: [],
                        zoneDescription: "",
                        zoneRadius: "",
                        zonePublishMessage: "",
                        zoneUpdateMessage: "",
                        zoneDeleteMessage: "",
                        exclusionZone: "",
                        filteredExclusionZone: !1
                    }
                },
                methods: {
                    close: function() {
                        this.clearCrimeData(), this.hide()
                    },
                    openVehicleRegistrationOverview: function() {
                        this.hide(), fuckThis("openWindow", "VehicleRegistrationOverview")
                    },
                    time: function(e) {
                        var t = new Date(1e3 * e);
                        if (t < Date.now()) return "Nicht Gesperrt";
                        var a = {
                            weekday: "long",
                            year: "numeric",
                            month: "numeric",
                            day: "numeric",
                            hour: "numeric",
                            minute: "numeric"
                        };
                        return t.toLocaleDateString("de-DE", a)
                    },
                    jailPlayer: function() {
                        this.emitServer("JailPlayer", this.playerSelected.i)
                    },
                    searchPlayerByName: function() {
                        "" != this.searchPlayerName.trim() && (this.playerSelected = null, this.emitServer("PolPlayersByName", this.searchPlayerName.trim()), this.page = 2, this.dev && (this.playerData = [{
                            i: 1,
                            n: "Erwin_Nietzsche"
                        }, {
                            i: 2,
                            n: "BigMac_Hamster"
                        }, {
                            i: 3,
                            n: "Nikolai_Ivanknopf"
                        }]))
                    },
                    searchPrisonerByName: function() {
                        "" != this.searchPrisonerName.trim() && (this.emitServer("RqPrisoners", this.searchPrisonerName.trim()), this.page = 3, this.dev && (this.prisoners = [{
                            i: 1,
                            n: "Erwin_Nietzsche",
                            j: 50,
                            p: 5e3,
                            pr: "Staatsgefängnis"
                        }, {
                            i: 2,
                            n: "BigMac_Hamster",
                            j: 50,
                            p: 5e3,
                            pr: "MRPD"
                        }, {
                            i: 3,
                            n: "Nikolai_Ivanknopf",
                            j: 50,
                            p: 5e3,
                            pr: "MRPD"
                        }]))
                    },
                    searchExclusionZone: function() {
                        var e = this,
                            t = Object(K["a"])(this.restrictedZones),
                            a = Object(K["a"])(this.zonePatterns);
                        0 === this.subPageTab && (0 === this.exclusionZone.length ? this.filteredZones = this.restrictedZones : this.filteredZones = t.filter((function(t) {
                            return t.n.toLowerCase().includes(e.exclusionZone.toLowerCase())
                        }))), 1 === this.subPageTab && (0 === this.exclusionZone.length ? this.filteredZonePatterns = this.zonePatterns : this.filteredZonePatterns = a.filter((function(t) {
                            return t.n.toLowerCase().includes(e.exclusionZone.toLowerCase()) && t.pt.toLowerCase().includes(e.exclusionZone.toLowerCase())
                        }))), this.filteredExclusionZone = !0
                    },
                    clearExclusionZoneSearch: function() {
                        this.exclusionZone = "", this.filteredZones = this.restrictedZones, this.filteredZonePatterns = this.zonePatterns, this.filteredExclusionZone = !1
                    },
                    searchCrimeByName: function() {},
                    addToCrimeGive: function(e) {
                        var t = new Object;
                        t.n = e.n, t.p = e.p, t.j = e.j, t.i = e.i, this.selected2 = null, this.giveCrimeData.push(t)
                    },
                    removeFromCrimeGive: function(e) {
                        for (var t = 0; t < this.giveCrimeData.length; t) {
                            var a = this.giveCrimeData[t];
                            if (a.n == e.n) return void this.giveCrimeData.splice(t, 1);
                            t += 1
                        }
                    },
                    giveCrimeToPlayer: function() {
                        var e = [],
                            t = 0;
                        this.giveCrimeData.forEach((function(a) {
                            e.push(a.i)
                        })), this.emitServer("GiveCrimeTo", this.playerSelected.i, JSON.stringify(e)), this.giveCrimeData = []
                    },
                    locateSmartphone: function() {
                        this.emitServer("LocateSmartphone", this.playerSelected.i)
                    },
                    select: function(e) {
                        this.crimeData = e.values, this.selected = e
                    },
                    SendPolPlayers: function(e) {
                        this.playerData = JSON.parse(e)
                    },
                    SendPolPlayer: function(e) {
                        this.overviewPlayer = e
                    },
                    SendPolPlayerWanteds: function(e) {
                        this.activeCrimeData = JSON.parse(e)
                    },
                    UpdatePlayerWanteds: function(e) {
                        var t = this;
                        e.d.forEach((function(e) {
                            t.activeCrimeData.push(e)
                        }))
                    },
                    RsPrisoners: function(e) {
                        this.prisoners = e.values
                    },
                    selectPlayer: function(e) {
                        this.playerSelected = e, this.page = 5, this.emitServer("GetPolPlayerWanteds", this.playerSelected.i)
                    },
                    showMostWanted: function() {
                        this.page = 2, this.emitServer("RqMostWanted")
                    },
                    showPrisoners: function() {
                        this.page = 3, this.emitServer("RqPrisoners")
                    },
                    getPlayerDossier: function() {
                        this.emitServer("GetPolPlayerWanteds", this.playerSelected.i)
                    },
                    removeFromCrimeActive: function(e) {
                        for (var t = 0; t < this.activeCrimeData.length; t) {
                            var a = this.activeCrimeData[t];
                            if (a.i == e.i) return this.activeCrimeData.splice(t, 1), void this.emitServer("RemoveCrimeFrom", this.playerSelected.i, a.i);
                            t += 1
                        }
                    },
                    takeLicense: function(e) {
                        var t = Date.now() / 1e3,
                            a = 172800;
                        10 == e.i && (a = 1209600), e.v = t + a, this.emitServer("TakeLicense", this.playerSelected.i, e.i)
                    },
                    sendGovMessage: function() {
                        this.govPrompt = !0
                    },
                    confirmGovMessage: function(e) {
                        void 0 !== e ? "" != e.trim() && (this.emitServer("GovMsg", 0, e), this.govPrompt = !1) : this.govPrompt = !1
                    },
                    changePage: function(e, t) {
                        switch (this.page = e, this.pageTitle = t, e) {
                            case 3:
                                this.emitServer("RqPrisoners");
                                break;
                            case 4:
                                this.emitServer("RqRestrictedZones")
                        }
                    },
                    switchControlCenter: function() {
                        switch (this.cdata.oo) {
                            case 0:
                                this.cdata.oo = 1, this.page = 3, this.pageTitle = "Häftlinge";
                                break;
                            case 1:
                                this.cdata.oo = 0, this.page = 0, this.pageTitle = "Informationen";
                                break;
                            case 2:
                                this.cdata.oo = 1, this.page = 3, this.pageTitle = "Häftlinge";
                                break
                        }
                        this.emitServer("Control")
                    },
                    closePlayerTab: function() {
                        this.clearCrimeData(), this.changePage(2, "Personensuche"), this.playerSelected = null
                    },
                    getPlayerCases: function() {
                        this.playerCases.length <= 0 && this.GetPolPlayerCases()
                    },
                    GetPolPlayerCases: function() {
                        this.emitServer("GetPolPlayerCases", this.playerSelected.i)
                    },
                    SendPolPlayerCrimeHistory: function(e) {
                        this.playerCases = e.d
                    },
                    showCrime: function(e) {
                        this.emitServer("GetPolPlayerCaseEntries", e)
                    },
                    SendPolPlayerCaseEntries: function(e) {
                        var t = this;
                        this.crimeHistoryTabOpened = !0, e.d.forEach((function(e) {
                            var a = t.crimeCategoryData.map((function(t) {
                                    var a = t.values.filter((function(t) {
                                        return t.i == e.c
                                    }));
                                    return a.length > 0 ? a : []
                                })),
                                i = a.filter((function(e) {
                                    return e.length > 0
                                }))[0];
                            t.playerCaseEntries.push({
                                o: e.o,
                                crimeData: {
                                    n: i[0].n,
                                    h: i[0].j,
                                    c: i[0].p
                                },
                                d: e.d
                            })
                        }))
                    },
                    closeCrimeHistoryTab: function() {
                        this.crimeHistoryTabOpened = !1, this.playerCaseEntries = []
                    },
                    getPlayerLicences: function() {
                        this.emitServer("GetPolPlayer", this.playerSelected.i)
                    },
                    clearCrimeData: function() {
                        this.crimeHistoryTabOpened = !1, this.playerCaseEntries = [], this.playerCases = [], this.subPageTab = 0
                    },
                    getRestrictedZonePatterns: function() {
                        this.emitServer("RqRestrictedZonePatterns")
                    },
                    rsRestrictedZonePatterns: function(e) {
                        this.zonePatterns = e.d, this.filteredZonePatterns = Object(K["a"])(e.d)
                    },
                    removeRestrictedZonePattern: function(e) {
                        for (var t = 0; t < this.zonePatterns.length; t++) {
                            var a = this.zonePatterns[t];
                            if (a.i == e) return this.zonePatterns.splice(t, 1), void this.emitServer("RemoveRestrictedZonePattern", e)
                        }
                    },
                    previewRestrictedZone: function(e, t, a) {
                        this.emit("PreviewZonePos", e, t, a)
                    },
                    getRestrictedZones: function() {
                        this.emitServer("RqRestrictedZones")
                    },
                    rsRestrictedZones: function(e) {
                        this.restrictedZones = JSON.parse(e), this.filteredZones = Object(K["a"])(JSON.parse(e))
                    },
                    removeRestrictedZone: function(e) {
                        for (var t = 0; t < this.restrictedZones.length; t++) {
                            var a = this.restrictedZones[t];
                            if (a.i == e) return this.restrictedZones.splice(t, 1), void this.emitServer("RemoveRestrictedZone", e)
                        }
                    },
                    removeAllRestrictedZones: function() {
                        this.restrictedZones = [], this.emitServer("RemoveAllRestrictedZones")
                    },
                    selectZonePattern: function(e) {
                        this.zoneDescription = e.n, this.zoneRadius = e.r, this.zonePublishMessage = e.pt, this.zoneUpdateMessage = e.ut, this.zoneDeleteMessage = e.dt, this.emit("MarkSpotOnMap", e.x, e.y)
                    },
                    openMap: function() {
                        this.emit("OpenMap")
                    },
                    createPattern: function() {
                        this.zoneRadius <= 0 || this.zoneRadius > 1e3 ? fuckThis("fromUINot","Der Radius muss zwischen 0 und 1000 liegen!", "#c72020") : this.zonePublishMessage.length > 200 || this.zoneUpdateMessage.length > 200 || this.zoneDeleteMessage.length > 200 ? fuckThis("fromUINot","Die Nachrichten dürfen aus maximal 200 Zeichen bestehen!", "#c72020") : this.zoneDescription.length > 20 ? fuckThis("fromUINot","Die Beschreibung farf aus maximal 20 Zeichen bestehen!", "#c72020") : this.emitServer("CreateZonePattern", this.zoneDescription, this.zonePublishMessage, this.zoneUpdateMessage, this.zoneDeleteMessage, this.zoneRadius)
                    },
                    previewZone: function() {
                        this.zoneRadius <= 0 || this.zoneRadius > 1e3 ? fuckThis("fromUINot","Der Radius muss zwischen 0 und 1000 liegen!", "#c72020") : this.emitServer("PreviewZone", this.zoneRadius)
                    },
                    publishZone: function () {
                        this.zoneRadius <= 0 || this.zoneRadius > 1e3 ? fuckThis("fromUINot","Der Radius muss zwischen 0 und 1000 liegen!", "#c72020") : this.zonePublishMessage.length > 200 || this.zoneUpdateMessage.length > 200 || this.zoneDeleteMessage.length > 200 ? fuckThis("fromUINot","Die Nachrichten dürfen aus maximal 200 Zeichen bestehen!", "#c72020") : this.zoneDescription.length > 20 ? fuckThis("fromUINot","Die Beschreibung farf aus maximal 20 Zeichen bestehen!", "#c72020") : this.emitServer("PublishZone", this.zoneDescription, this.zonePublishMessage, this.zoneUpdateMessage, this.zoneDeleteMessage, this.zoneRadius)
                    }
                },
                computed: {
                    checkIsAnyCrimeToGive: function() {
                        return 0 == this.giveCrimeData.length
                    },
                    calculatePrice: function() {
                        return this.giveCrimeData.reduce((function(e, t) {
                            return t.p + e
                        }), 0)
                    },
                    calculateTime: function() {
                        return this.giveCrimeData.reduce((function(e, t) {
                            return t.j + e
                        }), 0)
                    },
                    calculateActivePrice: function() {
                        return this.activeCrimeData.reduce((function(e, t) {
                            return t.c + e
                        }), 0)
                    },
                    calculateActiveTime: function() {
                        return this.activeCrimeData.reduce((function(e, t) {
                            return t.j + e
                        }), 0)
                    },
                    searchCrimes: function() {
                        var e, t = [],
                            a = Object(i["a"])(this.crimeCategoryData);
                        try {
                            for (a.s(); !(e = a.n()).done;) {
                                var s, n = e.value,
                                    r = Object(i["a"])(n.values);
                                try {
                                    for (r.s(); !(s = r.n()).done;) {
                                        var o = s.value;
                                        o.n.toLowerCase().includes(this.search.toLowerCase()) && t.push(o)
                                    }
                                } catch (c) {
                                    r.e(c)
                                } finally {
                                    r.f()
                                }
                            }
                        } catch (c) {
                            a.e(c)
                        } finally {
                            a.f()
                        }
                        return this.search ? t : this.crimeData
                    },
                    checkCanZoneBeCreated: function() {
                        return "" === this.zoneDescription || null === this.zoneDescription || 0 === this.zoneDescription.value || ("" === this.zoneRadius || null === this.zoneRadius || 0 === this.zoneRadius.value || ("" === this.zonePublishMessage || null === this.zonePublishMessage || 0 === this.zonePublishMessage.value || ("" === this.zoneUpdateMessage || null === this.zoneUpdateMessage || 0 === this.zoneUpdateMessage.value || ("" === this.zoneDeleteMessage || null === this.zoneDeleteMessage || 0 === this.zoneDeleteMessage.value))))
                    }
                },
                created: function() {
                    var e = this;
                    e.addEvent("SendPolPlayers", e.SendPolPlayers), e.addEvent("SendPolPlayer", e.SendPolPlayer), e.addEvent("SendPolPlayerWanteds", e.SendPolPlayerWanteds), e.addEvent("UpdatePlayerWanteds", e.UpdatePlayerWanteds), e.addEvent("RsPrisoners", e.RsPrisoners), e.addEvent("SendPolPlayerCases", e.SendPolPlayerCrimeHistory), e.addEvent("SendPolPlayerCaseEntries", e.SendPolPlayerCaseEntries), e.addEvent("RsRestrictedZones", e.rsRestrictedZones), e.addEvent("RsRestrictedZonePatterns", e.rsRestrictedZonePatterns);
                    e.activeCrimeData = [{
                        i: 0,
                        d: "21.05.21 / 10:51 Uhr",
                        n: "§3 Abs. 1",
                        c: 500,
                        j: 25,
                        o: "Dr. Erwin Nietzsche"
                    }, {
                        i: 1,
                        d: "21.05.21 / 10:51 Uhr",
                        n: "§3 Abs. 1",
                        c: 750,
                        j: 31,
                        o: "Dr. Erwin Nietzsche"
                    }, {
                        i: 2,
                        d: "21.05.21 / 10:51 Uhr",
                        n: "§3 Abs. 1",
                        c: 750,
                        j: 31,
                        o: "Dr. Erwin Nietzsche"
                    }, {
                        i: 3,
                        d: "21.05.21 / 10:51 Uhr",
                        n: "§3 Abs. 1",
                        c: 750,
                        j: 31,
                        o: "Dr. Erwin Nietzsche"
                    }, {
                        i: 4,
                        d: "21.05.21 / 10:51 Uhr",
                        n: "§3 Abs. 1",
                        c: 750,
                        j: 31,
                        o: "Dr. Erwin Nietzsche"
                    }], e.crimeCategoryData = [{
                        i: 1,
                        n: "BtMG",
                        values: [{
                            i: 394,
                            n: "Besitz von geringen Mengen nach § 2 Abs. 1 - 3 BtMG",
                            p: 3e3,
                            j: 0
                        }, {
                            i: 401,
                            n: "Besitz von großen Mengen nach § 2 Abs. 1 - 3 BtMG",
                            p: 0,
                            j: 30
                        }, {
                            i: 402,
                            n: "Handel nach § 4 Abs. 1 - 2 BtMG",
                            p: 0,
                            j: 35
                        }, {
                            i: 403,
                            n: "Herstellung / Anbau nach § 3 Abs. 1 - 2 BtMG",
                            p: 0,
                            j: 45
                        }]
                    }, {
                        i: 2,
                        n: "StGB - Allgemeines",
                        values: [{
                            i: 404,
                            n: "Vorladung",
                            p: 0,
                            j: 0
                        }, {
                            i: 405,
                            n: "Zwangsvollstreckung nach § 9 Abs. 1 - 3 StGB",
                            p: 0,
                            j: 25
                        }, {
                            i: 406,
                            n: "Unterlassene Hilfeleistung nach § 11 Abs. 1 StGB",
                            p: 3e3,
                            j: 0
                        }]
                    }, {
                        i: 3,
                        n: "StGB - Wirtschaftskiminalität",
                        values: [{
                            i: 407,
                            n: "Diebstahl nach § 23 Abs. 1 StGB",
                            p: 4e3,
                            j: 0
                        }, {
                            i: 408,
                            n: "Raub nach § 24 Abs. 1 StGB",
                            p: 4e3,
                            j: 25
                        }, {
                            i: 409,
                            n: "Besitz von illegalen Gegenständen nach § 25 Abs. 1 StGB",
                            p: 1e3,
                            j: 15
                        }, {
                            i: 410,
                            n: "Handel von illegalen Gegenständen nach § 25 Abs. 1 StGB",
                            p: 2e3,
                            j: 20
                        }, {
                            i: 411,
                            n: "Herstellung von illegalen Gegenständen nach § 25 Abs. 1 StGB",
                            p: 2e3,
                            j: 30
                        }, {
                            i: 412,
                            n: "Illegales Glückspiel nach § 26 Abs. 1 - 3 StGB",
                            p: 1e3,
                            j: 0
                        }, {
                            i: 413,
                            n: "Betrug nach § 27 Abs. 1 StGB",
                            p: 4e3,
                            j: 0
                        }, {
                            i: 414,
                            n: "Raubüberfall auf die Staatsbank/Juwelier nach BGB, StGB, WaffG",
                            p: 1e3,
                            j: 75
                        }, {
                            i: 501,
                            n: "Angriff auf einen Polizeieinsatz nach BGB, StGB, WaffG",
                            p: 1e3,
                            j: 75
                        }]
                    }, {
                        i: 4,
                        n: "StGB - Körperliche Integrität",
                        values: [{
                            i: 415,
                            n: "Beleidigung / Rufmord nach § 28 Abs. 1 StGB",
                            p: 2e3,
                            j: 0
                        }, {
                            i: 416,
                            n: "Belästigung / Nötigung nach § 29 Abs. 1 - 2 StGB",
                            p: 3e3,
                            j: 0
                        }, {
                            i: 417,
                            n: "Drohung nach § 30 Abs. 1 StGB",
                            p: 5e3,
                            j: 0
                        }, {
                            i: 418,
                            n: "Freiheitsberaubung nach § 31 Abs. 1 StGB",
                            p: 0,
                            j: 15
                        }, {
                            i: 419,
                            n: "Geiselnahme nach § 32 Abs. 1 StGB",
                            p: 0,
                            j: 30
                        }, {
                            i: 420,
                            n: "Körperverletzung nach § 33 Abs. 1 StGB",
                            p: 1500,
                            j: 0
                        }, {
                            i: 421,
                            n: "Vorsätzliche Körperverletzung nach § 34 Abs. 1 StGB",
                            p: 1e3,
                            j: 20
                        }, {
                            i: 422,
                            n: "Totschlag nach § 35 Abs. 1 StGB",
                            p: 0,
                            j: 25
                        }, {
                            i: 423,
                            n: "Mehrfacher Totschlag nach § 36 Abs. 1 StGB",
                            p: 0,
                            j: 30
                        }, {
                            i: 424,
                            n: "Mord nach § 37 Abs. 1 StGB",
                            p: 0,
                            j: 35
                        }, {
                            i: 425,
                            n: "Mehrfacher Mord nach § 38 Abs. 1 StGB",
                            p: 0,
                            j: 40
                        }]
                    }, {
                        i: 5,
                        n: "StGB - Umgang mit staatlichen Behörden\r\n",
                        values: [{
                            i: 426,
                            n: "Gefangenenbefreiung Flüchtiger nach § 40 Abs. 1 StGB",
                            p: 0,
                            j: 30
                        }, {
                            i: 427,
                            n: "Gefangenenbefreiung Beihilfe nach § 41 Abs. 1 StGB",
                            p: 0,
                            j: 35
                        }, {
                            i: 428,
                            n: "Einbruch bzw. Angriff in / auf staatliche Einrichtungen nach § 42 Abs. 1 StGB",
                            p: 0,
                            j: 110
                        }, {
                            i: 429,
                            n: "Hochverrat nach § 43 Abs. 1 StGB u. § 20 Abs. 1 - 4 BDG",
                            p: 25e3,
                            j: 180
                        }, {
                            i: 430,
                            n: "Besitz von staatlichem Eigentum nach § 44 Abs. 1 StGB",
                            p: 2500,
                            j: 15
                        }, {
                            i: 507,
                            n: "Cyberangriff auf den Staat nach §5 Abs.6",
                            p: 0,
                            j: 30
                        }]
                    }, {
                        i: 6,
                        n: "StGB - Umgang mit Beamten",
                        values: [{
                            i: 431,
                            n: "Umgehung polizeilicher Maßnahmen nach § 45 Abs. 1 StGB",
                            p: 500,
                            j: 10
                        }, {
                            i: 432,
                            n: "Widerstand gegen Vollstreckungsbeamte nach § 46 Abs. 1 StGB",
                            p: 500,
                            j: 15
                        }, {
                            i: 433,
                            n: "Missachtung / Behinderung einer Anweisung nach § 47 Abs. 1 StGB",
                            p: 3e3,
                            j: 0
                        }, {
                            i: 434,
                            n: "Beamtenbeleidigung nach § 48 Abs. 1 StGB",
                            p: 5e3,
                            j: 0
                        }, {
                            i: 435,
                            n: "Amtsanmaßung nach § 49 Abs. 1 StGB",
                            p: 3e3,
                            j: 0
                        }, {
                            i: 436,
                            n: "Schwere Amtsanmaßung nach § 50 Abs. 1 StGB",
                            p: 1500,
                            j: 30
                        }, {
                            i: 437,
                            n: "Vertuschung von Beweismitteln / Beweismaterial nach § 51 Abs. 1 StGB",
                            p: 1e3,
                            j: 15
                        }, {
                            i: 438,
                            n: "Bestechung von Beamten nach § 52 Abs. 1 StGB",
                            p: 1e3,
                            j: 0
                        }]
                    }, {
                        i: 7,
                        n: "StGB - Sonstige Delikte",
                        values: [{
                            i: 439,
                            n: "Betreten von Sperrzonen nach § 53 Abs. 1 StGB",
                            p: 750,
                            j: 20
                        }, {
                            i: 440,
                            n: "Vermummungsverbot nach § 54 Abs. 1 - 4 StGB",
                            p: 3e3,
                            j: 0
                        }, {
                            i: 441,
                            n: "Notrufmissbrauch nach § 55 Abs. 1 StGB",
                            p: 500,
                            j: 15
                        }, {
                            i: 442,
                            n: "Sachbeschädigung nach § 56 Abs. 1 StGB",
                            p: 500,
                            j: 0
                        }, {
                            i: 443,
                            n: "Aufforderung zur Straftat nach § 57 Abs. 1 StGB",
                            p: 0,
                            j: 15
                        }, {
                            i: 444,
                            n: "Angabe falscher Informationen nach § 58 Abs. 1 StGB",
                            p: 1500,
                            j: 15
                        }, {
                            i: 445,
                            n: "Hausfriedensbruch nach § 59 Abs. 1 - 3 StGB",
                            p: 4e3,
                            j: 0
                        }, {
                            i: 500,
                            n: "Anwerben für kriminellen Organisationen nach § 61 Abs. 1 - 2 StGB",
                            p: 5e3,
                            j: 60
                        }, {
                            i: 505,
                            n: "Aktenklärung 24 Stunden",
                            p: 0,
                            j: 1
                        }, {
                            i: 506,
                            n: "Aktenklärung 48 Stunden",
                            p: 0,
                            j: 1
                        }]
                    }, {
                        i: 8,
                        n: "StVO",
                        values: [{
                            i: 446,
                            n: "10 - 20 km/h Geschwindigkeitsüberschreitung nach § 6 Abs. 1 - 6 StVO",
                            p: 500,
                            j: 0
                        }, {
                            i: 447,
                            n: "21 - 50 km/h Geschwindigkeitsüberschreitung nach § 6 Abs. 1 - 6 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 448,
                            n: "51 - 100 km/h Geschwindigkeitsüberschreitung nach § 6 Abs. 1 - 6 StVO",
                            p: 2e3,
                            j: 0
                        }, {
                            i: 449,
                            n: "ab 101 km/h Geschwindigkeitsüberschreitung nach § 6 Abs. 1 -  6 StVO",
                            p: 5e3,
                            j: 0
                        }, {
                            i: 450,
                            n: "Leichter Verstoß gegen die StVO nach Anhang I StVO",
                            p: 400,
                            j: 0
                        }, {
                            i: 451,
                            n: "Mittlerer Verstoß gegen die StVO nach Anhang II StVO",
                            p: 1e3,
                            j: 0
                        }, {
                            i: 452,
                            n: "Schwerer Verstoß gegen die StVO nach Anhang III StVO",
                            p: 1e3,
                            j: 15
                        }, {
                            i: 453,
                            n: "Nicht einhalten der Mindestflughöhe nach § 8 Abs. 2 BGB",
                            p: 1e3,
                            j: 0
                        }, {
                            i: 454,
                            n: "Landen auf nicht genehmigten Flächen nach § 8 Abs. 3 - 4 BGB",
                            p: 1e3,
                            j: 0
                        }, {
                            i: 485,
                            n: "Allgemeine Verkehrsbehinderung nach § 1 - 11 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 486,
                            n: "Falschparken nach § 10 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 487,
                            n: "Missachtung der Vorfahrtsregel nach § 7 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 488,
                            n: "Mitführpflicht für Verbandskasten und Reparaturkit nach § 1 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 489,
                            n: "Rechtsfahrgebot nach § 3 StVO",
                            p: 700,
                            j: 0
                        }, {
                            i: 490,
                            n: "Betreiben eines fahruntüchtigen Fahrzeugs nach § 3 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 491,
                            n: "Fahren abseits der Straße nach § 3 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 492,
                            n: "Fahren entgegen der Fahrtrichtung nach § 3 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 493,
                            n: "Fahren ohne gültige Erste-Hilfe-Lizenz nach § 2 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 494,
                            n: "Fahrlässiges verursachen eines Unfalls nach § 1 - 11 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 495,
                            n: "Führen eines Kraft-, Wasser-, Luftfahrzeuges ohne Lizenz nach § 2 StVO",
                            p: 1e3,
                            j: 10
                        }, {
                            i: 496,
                            n: "Nicht beachten von Sondersignalen nach § 5 StVO u. § 11 StVO",
                            p: 1500,
                            j: 0
                        }, {
                            i: 497,
                            n: "Führen eines Kraft-, Wasser-, Luftfahrzeuges unter Alkohol oder Drogeneinfluss nach § 1 StVO",
                            p: 1500,
                            j: 15
                        }, {
                            i: 498,
                            n: "Gefährlicher Eingriff in den Straßenverkehr nach § 12 StVO",
                            p: 1500,
                            j: 15
                        }, {
                            i: 499,
                            n: "Fahrerflucht nach § 1 - 11 StVO",
                            p: 1500,
                            j: 15
                        }, {
                            i: 502,
                            n: "Führen eines Kraft-, Wasser-, Luftfahrzeuges mit gefälschtem Kennzeichen nach § 13 StVO",
                            p: 2500,
                            j: 10
                        }, {
                            i: 503,
                            n: "Führen eines Kraft-, Wasser-, Luftfahrzeuges ohne gültige Zulassung nach § 13 StVO",
                            p: 3e3,
                            j: 0
                        }]
                    }, {
                        i: 9,
                        n: "WaffG",
                        values: [{
                            i: 455,
                            n: "Besitz einer Waffe, Waffenzubehör und / oder Munition ohne gültige Lizenz nach § 2 Abs. 1 - 3 u. § 8 Abs. 1 WaffG",
                            p: 1500,
                            j: 0
                        }, {
                            i: 456,
                            n: "Handel mit Waffen, Waffenzubehör und / oder Munition ohne gültige Lizenz nach § 2 Abs. 1 - 3 u. § 8 Abs. 1 WaffG",
                            p: 750,
                            j: 15
                        }, {
                            i: 457,
                            n: "Herstellung von Waffen, Waffenzubehör und / oder Munition ohne gültige Lizenz nach § 8 Abs. 1 WaffG",
                            p: 750,
                            j: 25
                        }, {
                            i: 458,
                            n: "Sichtbares Tragen einer Waffe nach § 2 Abs. 4 WaffG",
                            p: 0,
                            j: 10
                        }, {
                            i: 459,
                            n: "Unberechtigter Schusswaffengebrauch nach § 12 Abs. 1 - 4 StGB",
                            p: 500,
                            j: 15
                        }, {
                            i: 460,
                            n: "Besitz illegaler Waffen, Waffenzubehör  und / oder Munition nach § 3 Abs. 1 - 2 u. § 8 Abs. 2 WaffG",
                            p: 0,
                            j: 30
                        }, {
                            i: 461,
                            n: "Handel mit illegalen Waffen, Waffenzubehör  und / oder Munition nach § 3 Abs. 1 - 2 u. § 8 Abs. 2 WaffG",
                            p: 0,
                            j: 35
                        }, {
                            i: 462,
                            n: "Herstellung illegaler Waffen, Waffenzubehör  und / oder Munition nach § 3 Abs. 1 - 2 u. § 8 Abs. 2 WaffG",
                            p: 0,
                            j: 45
                        }]
                    }, {
                        i: 10,
                        n: "BDG",
                        values: [{
                            i: 463,
                            n: "Disziplinarstrafe in Höhe von 100$ nach § 13 BDG ",
                            p: 100,
                            j: 0
                        }, {
                            i: 464,
                            n: "Disziplinarstrafe in Höhe von 1.000$ nach § 13 BDG ",
                            p: 1e3,
                            j: 0
                        }, {
                            i: 465,
                            n: "Disziplinarstrafe in Höhe von 10.000$ nach § 13 BDG",
                            p: 1e4,
                            j: 0
                        }, {
                            i: 466,
                            n: "Korruption nach § 18 Abs. 1 BDG",
                            p: 25e3,
                            j: 180
                        }, {
                            i: 467,
                            n: "Dienstvergehen nach § 19 Abs. 1 BDG",
                            p: 25e3,
                            j: 90
                        }]
                    }], e.SendPolPlayerCaseEntries({
                        d: [{
                            c: 394,
                            d: "heute",
                            o: "Fux"
                        }]
                    }), e.restrictedZones = [{
                        i: 0,
                        d: "05.09.2022 / 10:51 Uhr",
                        n: "Staatsbank",
                        pt: "Aufgrund eines Einsatzes ist die Staatsbank (+500m) aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Die Staatsbank (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone an der Staatsbank ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend.",
                        r: 500,
                        o: "Innenminister Sankyaku"
                    }, {
                        i: 1,
                        d: "05.09.2022 / 15:44 Uhr",
                        n: "Krankenhaus Davis",
                        pt: "Das Krankenhaus Davis (+500m) ist hiermiteine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Krankenhaus Davis (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Krankenhaus Davis ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 300,
                        o: "John Skyline"
                    }, {
                        i: 2,
                        d: "05.09.2022 / 19:59 Uhr",
                        n: "Juwelier",
                        pt: "Der Juwelier (+500m) ist hiermit eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Der Juwelier (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Juwelier ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        o: "Dr. Dieter Fux"
                    }], e.filteredZones = Object(K["a"])(e.restrictedZones), e.zonePatterns = [{
                        i: 0,
                        n: "Staatsbank",
                        pt: "Die Staatsbank (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Die Staatsbank (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone an der Staatsbank ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 1,
                        n: "Juwelier",
                        pt: "Der Juwelier (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Der Juwelier (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Juwelier ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 2,
                        n: "Krankenhaus Rockford",
                        pt: "Das Krankenhaus Rockford (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Krankenhaus Rockford (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Krankenhaus Rockford ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 3,
                        n: "Krankenhaus Davis",
                        pt: "Das Krankenhaus Davis (+300m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Krankenhaus Davis (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Krankenhaus Davis ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 300,
                        x: 0,
                        y: 0
                    }, {
                        i: 4,
                        n: "Krankenhaus Pillbox",
                        pt: "Das Krankenhaus Pillbox (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Krankenhaus Pillbox (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Krankenhaus Pillbox ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 5,
                        n: "Vinewood PD",
                        pt: "Das Los Santos Police Department Vinewood (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Los Santos Police Department Vinewood (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Vinewood Department ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 6,
                        n: "Mission Row PD",
                        pt: "Das Los Santos Police Department Mission Row (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Das Los Santos Police Department Mission Row (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Mission Row Department ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }, {
                        i: 7,
                        n: "Lifeinvader",
                        pt: "Der Lifeinvader (+500m) ist aktuell eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        ut: "Der Lifeinvader (+500m) ist weiterhin eine Sperrzone. Unerlaubtes Betreten wird mit einer sofortigen Festnahme geahndet!",
                        dt: "Die Sperrzone am Lifeinvader ist hiermit aufgehoben, wir bedauern die Unannehmlichkeiten und wünschen allen Bürgern von Los Santos einen angenehmen Abend. - Ihr LSPD",
                        r: 500,
                        x: 0,
                        y: 0
                    }], e.filteredZonePatterns = Object(K["a"])(e.zonePatterns), e.prisoners = [{
                        n: "ABOUUU HYSSS",
                        pr: "Staatsgefängnis",
                        j: "25",
                        p: "15"
                    }];

                  
                }
            },
            Ut = Kt,
            $t = (a("f44e"), Object(d["a"])(Ut, Ht, zt, !1, null, "0810ae28", null)),
            qt = $t.exports,
            Jt = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Ticketautomat",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "ticketmachine"
                }, [t("div", {
                    staticClass: "ticketmachine-header"
                }, [e.activeCrimeData.length > 0 ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.payAll()
                        }
                    }
                }, [e._v("Alle Tickets bezahlen (" + e._s(e.totalCoast()) + "$)")]) : e._e()], 1), t("div", {
                    staticClass: "ticketmachine-body"
                }, [e.activeCrimeData ? t("div", [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Straftat")]), t("th", [e._v("Kosten")]), t("th", [e._v("Datum")]), t("th", [e._v("Bezahlen")])])]), t("tbody", e._l(e.activeCrimeData, (function(a, i) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(i))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(" " + e._s(a.p) + " "), t("span", {
                        staticClass: "mdi mdi-currency-usd"
                    })]), t("td", [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-check table-button-icon clickable",
                        on: {
                            click: function(t) {
                                return e.removeFromCrimeActive(a)
                            }
                        }
                    })])])
                })), 0)])], 1) : t("p", [e._v("Keine Strafen vorhanden")])])])])
            },
            Zt = [],
            Xt = {
                name: "TicketMachine",
                components: {
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        ticketdata: JSON.parse(this.data),
                        activeCrimeData: [],
                        money: 0
                    }
                },
                methods: {
                    removeFromCrimeActive: function(e) {
                        if (e.p > this.money);
                        else {
                            var t = this.activeCrimeData.indexOf(e);
                            this.activeCrimeData.splice(t, 1), this.emitServer("PayForCrime", e.i)
                        }
                    },
                    payAll: function() {
                        this.totalCoast() > this.money ? fuckThis("fromUINot","Du hast nicht genügend Geld dabei", "#c72020") : (this.activeCrimeData = [], this.emitServer("PayAllCrime"))
                    },
                    totalCoast: function() {
                        return this.activeCrimeData.reduce((function(e, t) {
                            return e + t.p
                        }), 0)
                    }
                },
                created: function() {
                    void 0 == this.ticketdata || void 0 == this.ticketdata.crimes ? (this.activeCrimeData = [], this.money = 0) : (this.activeCrimeData = this.ticketdata.crimes, this.money = this.ticketdata.m)
                }
            },
            Yt = Xt,
            Qt = (a("8ea9"), Object(d["a"])(Yt, Jt, Zt, !1, null, "765f0f36", null)),
            ea = Qt.exports,
            ta = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xl",
                    attrs: {
                        title: e.getHouseTitle(),
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "house"
                }, [t("div", {
                    staticClass: "house-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.displayHouseInfo()
                        }
                    }
                }, [e._v("Haus")]), e.isHouseOwner() ? t("CoreButton", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.displayHouseSettings()
                        }
                    }
                }, [e._v(" Einstellungen ")]) : e._e(), e.isHouseOwner() ? t("CoreButton", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.displayHouseRents()
                        }
                    }
                }, [e._v("Mieter ")]) : e._e(), e.hasHouseAccess() ? t("CoreButton", {
                    class: {
                        active: 4 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.displayHouseVehicles()
                        }
                    }
                }, [e._v(" Garage ")]) : e._e(), e.isHouseOwner() && e.housedata.in ? t("CoreButton", {
                    class: {
                        active: 5 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.displayHideout()
                        }
                    }
                }, [e._v("Versteck ")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "house-body"
                }, [1 == e.page ? t("div", {
                    staticClass: "house-info"
                }, [t("CoreBox", {
                    staticClass: "house-info-door",
                    attrs: {
                        title: "Haus"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("aktueller status")]), t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [e.housedata.l ? t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("geschlossen")]) : t("span", {
                    staticClass: "text-custom-success"
                }, [e._v("Offen")])]), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("div", {
                    staticClass: "d-flex flex-row",
                    class: {
                        "justify-content-between": !e.housedata.l,
                        "justify-content-center": e.housedata.l
                    }
                }, [e.hasHouseAccess() ? t("div", [e.housedata.l ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeLockStatus(!1)
                        }
                    }
                }, [e._v(" Aufschließen ")]) : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeLockStatus(!0)
                        }
                    }
                }, [e._v(" Abschließen ")])], 1) : t("div", [e.housedata.cr ? t("CoreButton", {
                    on: {
                        click: e.rentHouse
                    }
                }, [e._v("Einmieten (" + e._s(e.defaultRentCost) + " $)")]) : e._e()], 1), e.isHouseTenant() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            e.cancelRentPopup = !e.cancelRentPopup
                        }
                    }
                }, [e._v(" Ausmieten ")]) : e._e(), e.housedata.l || e.housedata.in ? e._e() : t("CoreButton", {
                    on: {
                        click: e.enterHouse
                    }
                }, [e._v(" Betreten ")]), !e.housedata.l && e.housedata.in ? t("CoreButton", {
                    on: {
                        click: e.leaveHouse
                    }
                }, [e._v(" Verlassen ")]) : e._e()], 1)])]), e.housedata.in ? e._e() : t("CoreBox", {
                    staticClass: "house-info-door",
                    attrs: {
                        title: "Keller"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [e.housedata.l || 1 != e.housedata.hb ? e._e() : t("CoreButton", {
                    on: {
                        click: e.enterBasement
                    }
                }, [e._v(" Betreten ")]), e.housedata.l || 1 != e.housedata.hb ? 0 == e.housedata.hb && 0 != e.housedata.bl && e.hasHouseAccess() ? t("CoreButton", {
                    on: {
                        click: e.upgradeBasement
                    }
                }, [e._v(" Keller ausbauen ")]) : 0 == e.housedata.hb && 0 == e.housedata.bl ? t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("span", {
                    staticClass: "text-custom-error"
                }, [e._v("Es gibt keine Möglichkeit für einen Keller.")])]) : e._e() : t("CoreButton", {
                    on: {
                        click: e.upgradeWorkstation
                    }
                }, [e._v(" Werkbank ausbauen ")])], 1)]), e.isHouseOwner() ? t("CoreBox", {
                    staticClass: "house-info-rents",
                    attrs: {
                        title: "Mieteinnahmen"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("aktuelle einnahmen")]), t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("span", {
                    staticClass: "text-custom-success"
                }, [e._v(e._s(this.housedata.m) + " $")]), t("br")]), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [0 != e.housedata.m ? t("CoreButton", {
                    on: {
                        click: e.takeHouseMoney
                    }
                }, [e._v("Miete auszahlen")]) : e._e()], 1)]) : e._e(), e.isHouseOwner() && !e.housedata.in ? t("CoreBox", {
                    staticClass: "house-info-rents",
                    attrs: {
                        title: "HouseInfoSystem"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("Maximalangaben")]), t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("div", {
                    staticClass: "houseinfosystem"
                }, [t("div", {
                    staticClass: "houseinfosystem-row"
                }, [t("span", [e._v("Keller:")]), 0 == e.housedata.bl ? t("span", [e._v("Keiner")]) : e._e(), 1 == e.housedata.bl ? t("span", [e._v("Klein")]) : e._e(), 2 == e.housedata.bl ? t("span", [e._v("Mittel")]) : e._e(), 3 == e.housedata.bl ? t("span", [e._v("Groß")]) : e._e()]), t("div", {
                    staticClass: "houseinfosystem-row"
                }, [t("span", [e._v("Werkbank:")]), 0 == e.housedata.mw ? t("span", [e._v("Keiner")]) : t("span", [e._v("Stufe " + e._s(e.housedata.mw))])]), t("div", {
                    staticClass: "houseinfosystem-row"
                }, [t("span", [e._v("Server:")]), t("span", [e._v(e._s(e.housedata.ms))])]), t("div", {
                    staticClass: "houseinfosystem-row"
                }, [t("span", [e._v("Wert:")]), t("span", [e._v(e._s(e.NumberFormatter.format(e.housedata.dhw)))])])]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: function(t) {
                            e.abandonHouse = !e.abandonHouse
                        }
                    }
                }, [e._v("Haus an den Staat für 50% verkaufen")])], 1)]) : e._e()], 1) : e._e(), 2 == e.page ? t("div", {
                    staticClass: "house-info"
                }, [t("CoreBox", {
                    staticClass: "house-info-door",
                    attrs: {
                        title: "Einmietmöglichkeit"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("aktueller status")]), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [e.activateRent ? t("span", {
                    staticClass: "text-custom-success"
                }, [e._v("zugelassen")]) : t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("verboten")])]) : e._e(), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [e.activateRent ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeActivateRent()
                        }
                    }
                }, [e._v("Verbieten")]) : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeActivateRent()
                        }
                    }
                }, [e._v("Zulassen")])], 1) : e._e()]), e.isHouseOwner() ? t("CoreBox", {
                    staticClass: "house-info-rents",
                    attrs: {
                        title: "standard mietpreis"
                    }
                }, [e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("Neuen Mietpreis eingeben")]) : e._e(), e.isHouseOwner() ? t("div", {
                    staticClass: "house-current-rent",
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("Aktuell: "), t("span", {
                    staticClass: "text-custom-success"
                }, [e._v(e._s(e.currentDefaultRentCost) + " $")])]) : e._e(), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number"
                    },
                    model: {
                        value: e.defaultRentCost,
                        callback: function(t) {
                            e.defaultRentCost = t
                        },
                        expression: "defaultRentCost"
                    }
                })], 1) : e._e(), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("CoreButton", {
                    on: {
                        click: e.changeDefaultRentCost
                    }
                }, [e._v("Mietpreis ändern")])], 1) : e._e()]) : e._e(), e.isHouseOwner() ? t("CoreBox", {
                    staticClass: "house-info-rents",
                    attrs: {
                        title: "klingelschild"
                    }
                }, [e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("neuen namen eingeben")]) : e._e(), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        maxlength: "20"
                    },
                    model: {
                        value: e.doorsign,
                        callback: function(t) {
                            e.doorsign = t
                        },
                        expression: "doorsign"
                    }
                })], 1) : e._e(), e.isHouseOwner() ? t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("CoreButton", {
                    on: {
                        click: e.changeDoorBellSign
                    }
                }, [e._v("Jetzt ändern")])], 1) : e._e()]) : e._e()], 1) : e._e(), 3 == e.page ? t("div", {
                    staticClass: "house-tenants"
                }, [e.houseRentPlayers.length ? t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Bürger")]), e.isHouseOwner() ? t("th", [e._v("Kosten")]) : e._e(), t("th", [e._v("Datum")]), e.isHouseOwner() ? t("th") : e._e(), e.isHouseOwner() ? t("th") : e._e()])]), t("tbody", e._l(e.houseRentPlayers, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), e.isHouseOwner() ? t("td", {
                        staticClass: "text-center"
                    }, [e._v(" " + e._s(a.p) + " "), t("span", {
                        staticClass: "mdi mdi-currency-usd"
                    })]) : e._e(), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), e.isHouseOwner() ? t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-pencil clickable",
                        on: {
                            click: function(t) {
                                return e.editPlayerRent(a)
                            }
                        }
                    })]) : e._e(), e.isHouseOwner() ? t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-delete clickable",
                        on: {
                            click: function(t) {
                                return e.removePlayerRent(a)
                            }
                        }
                    })]) : e._e()])
                })), 0)]) : t("p", [e._v("Keine Mieter vorhanden")])], 1) : e._e(), 4 == e.page ? t("div", {
                    staticClass: "house-garage"
                }, [e.houseVehicles.length ? t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Fahrzeugnummer")]), t("th", [e._v("Fahrzeugtyp")]), t("th", [e._v("Besitzer")]), e.isHouseOwner() ? t("th") : e._e()])]), t("tbody", e._l(e.houseVehicles, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p))]), e.isHouseOwner() ? t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-delete clickable",
                        on: {
                            click: function(t) {
                                return e.removeHouseVehicle(a)
                            }
                        }
                    })]) : e._e()])
                })), 0)]) : t("p", [e._v("Keine Fahrzeuge vorhanden")])], 1) : e._e(), 5 == e.page ? t("div", {
                    staticClass: "house-hideouts"
                }, [e.isHouseOwner() ? t("p", [e._v("mögliche Verstecke: " + e._s(e.housedata.ps))]) : e._e(), e.hideoutPositions.length ? t("div", {
                    staticClass: "house-hideouts-box"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Id")]), t("th", [e._v("Auswählen")]), t("th", [e._v("Löschen")])])]), t("tbody", e._l(e.hideoutPositions, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-check clickable",
                        on: {
                            click: function(t) {
                                return e.setHideout(a)
                            }
                        }
                    })]), t("td", {
                        staticClass: "text-center"
                    }, [void 0 != a.a ? t("span", {
                        staticClass: "mdi mdi-delete clickable",
                        on: {
                            click: function(t) {
                                return e.removeHideout(a)
                            }
                        }
                    }) : e._e()])])
                })), 0)])], 1) : t("p", [e._v("Keine Verstecke vorhanden")]), t("div", {
                    staticClass: "house-hideouts-button"
                }, [e.invdata.in && e.isHouseOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeHide()
                        }
                    }
                }, [e._v("Verstecke anzeigen ")]) : e._e()], 1)]) : e._e()])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    attrs: {
                        message: "Neuer Mietpreis",
                        confirmText: "Anpassen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirm
                    }
                }), t("CorePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.cancelRentPopup,
                        expression: "cancelRentPopup"
                    }],
                    attrs: {
                        header: "Möchtest du dich wirklich ausmieten?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.confirmCancelRent
                    }
                }), t("CorePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.abandonHouse,
                        expression: "abandonHouse"
                    }],
                    attrs: {
                        header: "Möchtest du das Haus wirklich für 50% an den Staat verkaufen?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.confirmAbandonHouse
                    }
                })], 1)
            },
            aa = [],
            ia = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-box"
                }, [t("div", {
                    staticClass: "core-box-header"
                }, [e._v(" " + e._s(e.title) + " ")]), t("div", {
                    staticClass: "core-box-body"
                }, [t("div", {
                    staticClass: "core-box-body-title"
                }, [e._t("content-title")], 2), t("div", {
                    staticClass: "core-box-body-content"
                }, [e._t("content"), e._t("content2")], 2)]), t("div", {
                    staticClass: "core-box-footer"
                }, [e._t("footer")], 2)])
            },
            sa = [],
            na = {
                name: "CoreBox",
                props: {
                    title: {
                        type: String,
                        required: !0
                    }
                }
            },
            ra = na,
            oa = (a("f628"), Object(d["a"])(ra, ia, sa, !1, null, "328e4e5b", null)),
            ca = oa.exports,
            la = {
                name: "House",
                components: {
                    CoreTable: ge,
                    CorePopup: qe,
                    CorePrompt: Ee,
                    CoreInput: A,
                    CoreBox: ca,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        housedata: JSON.parse(this.data),
                        NumberFormatter: null,
                        houseRentPlayers: [],
                        houseVehicles: [],
                        hideoutPositions: [],
                        page: 1,
                        doorsign: "",
                        prompt: !1,
                        cancelRentPopup: !1,
                        abandonHouse: !1,
                        row: {},
                        activateRent: JSON.parse(this.data).cr,
                        defaultRentCost: JSON.parse(this.data).rent,
                        currentDefaultRentCost: JSON.parse(this.data).rent
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    isHouseOwner: function() {
                        return 2 == this.housedata.o
                    },
                    hasHouseAccess: function() {
                        return this.housedata.o > 0
                    },
                    isHouseTenant: function() {
                        return this.housedata.t
                    },
                    getHouseTitle: function() {
                        return "ID: " + this.housedata.i + " - " + this.housedata.n
                    },
                    changeDoorBellSign: function() {
                        this.updateDoorBellSign(this.doorsign)
                    },
                    rentHouse: function() {
                        this.emitServer("RentHouse"), this.close()
                    },
                    changeLockStatus: function(e) {
                        this.hasHouseAccess() && (this.housedata.l = e, this.emitServer("UpdateHouseLock", this.housedata.i, e))
                    },
                    takeHouseMoney: function() {
                        0 != this.housedata.m && (this.housedata.m = 0, this.emitServer("TakeHouseMoney", this.housedata.i))
                    },
                    changeActivateRent: function() {
                        this.activateRent = !this.activateRent, this.emitServer("ChangeActivateRent", this.housedata.i)
                    },
                    changeDefaultRentCost: function() {
                        this.defaultRentCost > 0 && this.defaultRentCost <= 300 ? (this.currentDefaultRentCost = this.defaultRentCost, this.emitServer("ChangeDefaultRentCost", this.housedata.i, this.defaultRentCost)) : fuckThis("fromUINot","Der Standardmietpreis muss zwischen 1 und 300$ liegen", "#c72020")
                    },
                    enterHouse: function() {
                        this.emitServer("EnterHouse", this.housedata.i), this.close()
                    },
                    enterBasement: function() {
                        this.emitServer("EnterBasement", this.housedata.i), this.close()
                    },
                    upgradeBasement: function() {
                        this.emitServer("UpgradeBasement", this.housedata.i), this.close()
                    },
                    upgradeWorkstation: function() {
                        this.emitServer("UpgradeWorkstation", this.housedata.i), this.close()
                    },
                    leaveHouse: function() {
                        this.emitServer("LeaveHouse", this.housedata.i), this.close()
                    },
                    changeHide: function() {
                        this.emitServer("HouseChangeHide", this.housedata.i), this.close()
                    },
                    updateDoorBellSign: function(e) {
                        this.housedata.n != e && (this.housedata.n = e, this.emitServer("UpdateDoorBellSign", this.housedata.i, e))
                    },
                    cancelRent: function() {
                        this.housedata.o = 0, this.emitServer("CancelHouseRent", this.housedata.i)
                    },
                    displayHouseInfo: function() {
                        this.page = 1
                    },
                    displayHouseSettings: function() {
                        this.page = 2
                    },
                    displayHouseRents: function() {
                        this.page = 3, this.emitServer("GetHouseRentPlayers", this.housedata.i)
                    },
                    displayHouseVehicles: function() {
                        this.page = 4, this.emitServer("GetHouseVehicles", this.housedata.i)
                    },
                    displayHideout: function() {
                        this.page = 5, this.hideoutPositions = [{
                            i: 2
                        }, {
                            i: 3
                        }, {
                            i: 4
                        }], this.emitServer("GetHouseHideOptions", this.housedata.i)
                    },
                    SendHouseRentPlayers: function(e) {
                        this.houseRentPlayers = e.rents
                    },
                    SendHouseVehicles: function(e) {
                        this.houseVehicles = e.vehicles
                    },
                    SendInteriorPos: function(e) {
                        this.hideoutPositions = e.pos
                    },
                    removePlayerRent: function(e) {
                        var t = this.houseRentPlayers.indexOf(e);
                        this.houseRentPlayers.splice(t, 1), this.emitServer("RemovePlayerRent", this.housedata.i, e.i)
                    },
                    removeHouseVehicle: function(e) {
                        var t = this.houseVehicles.indexOf(e);
                        this.houseVehicles.splice(t, 1), this.emitServer("RemoveHouseVehicle", this.housedata.i, e.i)
                    },
                    setHideout: function(e) {
                        this.emitServer("SetHouseHideout", this.housedata.i, e.i)
                    },
                    removeHideout: function(e) {
                        this.emitServer("RemoveHouseHideout", this.housedata.i, e.i)
                    },
                    editPlayerRent: function(e) {
                        this.row = e, this.prompt = !0
                    },
                    confirm: function(e) {
                        this.prompt = !1, void 0 != e && this.updatePlayerRent(this.row.i, e, this.row)
                    },
                    confirmCancelRent: function(e) {
                        this.cancelRentPopup = !1, void 0 != e && e && this.cancelRent()
                    },
                    confirmAbandonHouse: function(e) {
                        this.abandonHouse = !1, void 0 != e && e && (this.emitServer("AbandonHouse", this.housedata.i), this.hide())
                    },
                    updatePlayerRent: function(e, t, a) {
                        if (t = parseInt(t), !isNaN(t) && !(t <= 0)) {
                            var i = this.houseRentPlayers.indexOf(a),
                                s = this.houseRentPlayers[i];
                            s.p = t, this.emitServer("UpdatePlayerRent", e, t)
                        }
                    }
                },
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    }), this.addEvent("SendHouseRentPlayers", this.SendHouseRentPlayers), this.addEvent("SendHouseVehicles", this.SendHouseVehicles), this.addEvent("SendInteriorPos", this.SendInteriorPos)
                }
            },
            ua = la,
            ma = (a("f147"), Object(d["a"])(ua, ta, aa, !1, null, null, null)),
            da = ma.exports,
            ha = function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    attrs: {
                        title: e.getStorageTitle(),
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "storagelaptop"
                }, [t("div", {
                    staticClass: "storagelaptop-box"
                }, [t("div", {
                    staticClass: "storagelaptop-box-icon"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/house/house-box.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "storagelaptop-box-content"
                }, [e._v(" Kistenanzahl: "), t("span", {
                    staticClass: "text-success"
                }, [e._v(e._s(this.data.c))])])]), t("div", {
                    staticClass: "storagelaptop-box"
                }, [t("BaseButton", {
                    class: {
                        btnFocus: 1 == e.page
                    },
                    attrs: {
                        text: "Lagerhaus Info"
                    },
                    on: {
                        click: function(t) {
                            return e.displayStorageInfo()
                        }
                    }
                }), e.isStorageOwner() && e.isCrateUpgradeable() ? t("BaseButton", {
                    attrs: {
                        text: "Kisten upgraden"
                    },
                    on: {
                        click: function(t) {
                            return e.UpgradeStorage()
                        }
                    }
                }) : e._e(), e.isStorageOwner() && e.isTypeUpgradeable() ? t("BaseButton", {
                    attrs: {
                        text: "Lagerhaus upgraden"
                    },
                    on: {
                        click: function(t) {
                            return e.UpgradeStorageroomType()
                        }
                    }
                }) : e._e()], 1)])])
            },
            _a = [],
            pa = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-interface"
                }, [t("div", {
                    staticClass: "base-interface-box"
                }, [t("div", {
                    staticClass: "base-interface-box-header"
                }, [t("div", {
                    staticClass: "base-interface-box-title"
                }, [e._v(" " + e._s(e.title) + " ")]), e.closeable ? t("div", {
                    staticClass: "base-interface-box-action",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })]) : e._e()]), t("div", {
                    staticClass: "base-interface-box-body"
                }, [e._l(e.additionalData, (function(a) {
                    return t("div", {
                        key: a
                    }, [t("span", {
                        staticClass: "additional-header-data"
                    }, [e._v(" " + e._s(a) + " ")])])
                })), t("div", {
                    staticClass: "base-interface-box-body-content"
                }, [e._t("default")], 2)], 2)])])
            },
            va = [],
            fa = {
                name: "BaseInterface",
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    additionalData: {
                        type: Array,
                        required: !1
                    },
                    color: {
                        type: String,
                        required: !1
                    },
                    back: {
                        type: Boolean,
                        required: !1
                    },
                    closeable: {
                        type: Boolean,
                        required: !1
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            ba = fa,
            ga = (a("8810"), Object(d["a"])(ba, pa, va, !1, null, "4512e2b4", null)),
            ya = ga.exports,
            Ca = {
                name: "StorageLaptop",
                components: {
                    BaseButton: dt,
                    BaseInterface: ya
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        page: 1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    isStorageOwner: function() {
                        return 2 == this.data.o
                    },
                    isTypeUpgradeable: function() {
                        return 1 == this.data.t
                    },
                    isCrateUpgradeable: function() {
                        return 1 == this.data.u
                    },
                    getStorageTitle: function() {
                        return "ID: " + this.data.i
                    },
                    displayStorageInfo: function() {
                        this.page = 1
                    },
                    UpgradeStorage: function() {
                        this.emitServer("UpgradeStorage", this.data.i, this.data.c), this.close()
                    },
                    UpgradeStorageroomType: function() {
                        this.emitServer("UpgradeStorageroomType", this.data.i), this.close()
                    }
                }
            },
            ka = Ca,
            wa = (a("8c64"), Object(d["a"])(ka, ha, _a, !1, null, "29fa63b4", null)),
            Sa = wa.exports,
            Ma = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "images/teams/3.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Mobiler Blitzer ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("LSPD")]), t("span", [e._v("Mobiler Blitzer")])]), t("div", {
                    staticClass: "computer-body-content-search",
                    attrs: {
                        slot: "computer-body-content-search"
                    },
                    slot: "computer-body-content-search"
                }, [t("span", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.speedValue,
                        expression: "speedValue"
                    }],
                    attrs: {
                        type: "text",
                        placeholder: "Geschwindigkeit",
                        maxlength: "3"
                    },
                    domProps: {
                        value: e.speedValue
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.speedValue = t.target.value)
                        }
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.updateSpeedCamSpeed.apply(null, arguments)
                        }
                    }
                }), t("button", {
                    on: {
                        click: e.updateSpeedCamSpeed
                    }
                }, [e._v("Einstellen")])])]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    staticClass: "active"
                }, [t("a", {}, [e._v("Blitzer Übersicht")])])]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [t("div", {
                    staticClass: "computer-body-content-box-services"
                }, [e.speedCamItems.length ? t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Geschwindigkeit")]), t("th", [e._v("Kennzeichen")]), t("th", [e._v("Uhrzeit")])])]), t("tbody", e._l(e.speedCamItems, (function(a) {
                    return t("tr", {
                        key: a.c
                    }, [t("td", [e._v(e._s(a.s))]), t("td", [e._v(e._s(a.l))]), t("td", [e._v(e._s(a.c))])])
                })), 0)]) : t("p", [e._v("Keine Daten vorhanden")])], 1)])])
            },
            xa = [],
            Pa = (a("3c65"), {
                name: "SpeedCamStation",
                components: {
                    CoreTable: ge,
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        speedValue: this.data.s,
                        speedCamItems: this.data.items
                    }
                },
                methods: {
                    updateSpeedCamSpeed: function() {
                        var e = this.speedValue.trim();
                        e && (isNaN(e) ? this.speedValue = 0 : this.emitServer("UpdateSpeedCamSpeed", this.data.i, parseInt(e)))
                    },
                    close: function() {
                        this.emitServer("RemoveFromSpeedCam", this.data.i), this.hide()
                    },
                    SendSpeedCamItem: function(e) {
                        this.speedCamItems.unshift(e)
                    }
                },
                created: function() {
                    this.addEvent("SendSpeedCamItem", this.SendSpeedCamItem)
                }
            }),
            Ta = Pa,
            Fa = (a("753f"), Object(d["a"])(Ta, Ma, xa, !1, null, "1979bd83", null)),
            Ba = Fa.exports,
            Ia = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [this.popup ? e._e() : t("div", [t("CoreInterface", {
                    staticClass: "core-interface-shop",
                    attrs: {
                        title: e.getTitle(),
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "shop"
                }, [e.itemData ? t("div", {
                    staticClass: "shop-items"
                }, e._l(e.shopdata.data, (function(a) {
                    return t("CoreItemBox", {
                        key: a.i,
                        staticClass: "shop-items-item",
                        on: {
                            click: function(t) {
                                return e.add(a)
                            }
                        }
                    }, [t("div", {
                        staticClass: "shop-items-item-name",
                        attrs: {
                            slot: "details-title"
                        },
                        on: {
                            click: function(t) {
                                return e.add(a)
                            }
                        },
                        slot: "details-title"
                    }, [e._v(" " + e._s(a.n) + " ")]), t("div", {
                        attrs: {
                            slot: "details-description"
                        },
                        slot: "details-description"
                    }, [e._v(" " + e._s(a.p) + " $ ")]), t("div", {
                        staticClass: "shop-items-item-image",
                        attrs: {
                            slot: "image"
                        },
                        on: {
                            click: function(t) {
                                return e.add(a)
                            }
                        },
                        slot: "image"
                    }, [t("img", {
                        attrs: {
                            src: "images/inventoy/items/" + a.image,
                            alt: ""
                        }
                    })])])
                })), 1) : e._e()])]), t("div", {
                    staticClass: "shopping-cart"
                }, [t("div", {
                    staticClass: "shopping-cart-title"
                }, [e._v("Warenkorb")]), t("div", {
                    staticClass: "shopping-cart-items"
                }, e._l(e.shoppingCart, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "sc-item",
                        on: {
                            mouseover: function(t) {
                                return e.mouseoverItem(a)
                            }
                        }
                    }, [t("div", {
                        staticClass: "sc-item-amount"
                    }, [t("CoreInput", {
                        staticClass: "dark",
                        on: {
                            input: function(t) {
                                return e.change(a)
                            }
                        },
                        model: {
                            value: a.amount,
                            callback: function(t) {
                                e.$set(a, "amount", e._n(t))
                            },
                            expression: "item.amount"
                        }
                    })], 1), t("div", {
                        staticClass: "sc-item-box"
                    }, [t("div", {
                        staticClass: "sc-item-box-name"
                    }, [e._v(" " + e._s(e._f("truncate")(a.n, 15, "...")) + " ")]), t("div", {
                        staticClass: "sc-item-box-actions"
                    }, [t("CoreButton", {
                        staticClass: "text-custom-success",
                        on: {
                            click: function(t) {
                                return e.addAmount(a)
                            }
                        }
                    }, [e._v("+")]), t("CoreButton", {
                        staticClass: "text-custom-danger",
                        on: {
                            click: function(t) {
                                return e.subAmount(a)
                            }
                        }
                    }, [e._v("-")]), t("CoreButton", {
                        staticClass: "text-sibaui",
                        on: {
                            click: function(t) {
                                return e.remove(a)
                            }
                        }
                    }, [e._v("x")])], 1)])])
                })), 0), t("div", {
                    staticClass: "shopping-cart-payment"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: e.total > e.shopdata.m || e.total < 1
                    },
                    on: {
                        click: e.buy
                    }
                }, [e._v(" KAUFEN (" + e._s(e.total) + " $) ")])], 1)]), 1 == e.shopdata.r ? t("div", {
                    staticClass: "shop-rob-button",
                    on: {
                        click: function(t) {
                            return e.robShop()
                        }
                    }
                }, [e._m(0), e._m(1)]) : e._e()], 1), t("BasePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.popup,
                        expression: "popup"
                    }],
                    attrs: {
                        header: "Shop wirklich ausrauben?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.confirmRob
                    }
                })], 1)
            },
            Aa = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "shop-rob-button-content"
                }, [t("div", {
                    staticClass: "shop-rob-button-text"
                }, [e._v("den shop")]), t("div", {
                    staticClass: "shop-rob-button-text"
                }, [e._v("ausrauben")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "shop-rob-button-icon"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/shop/shop-rob.png",
                        alt: ""
                    }
                })])
            }],
            Da = a("ade3"),
            Na = {
                name: "Shop",
                components: {
                    CoreItemBox: oe,
                    CoreInput: A,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        shopdata: JSON.parse(this.data),
                        itemData: true,
                        shoppingCart: [],
                        overItem: null,
                        popup: !1
                    }
                },
                methods: {
                    robShop: function() {
                        this.popup = !0
                    },
                    confirmRob: function(e) {
                        e && this.emitServer("robShop", this.shopdata.i), this.popup = !1, this.hide()
                    },
                    add: function(e) {
                        this.shoppingCart.includes(e) ? e.amount += 1 : (this.$set(e, "amount", 1), this.shoppingCart.push(e))
                    },
                    buy: function() {

                        if (this.shopdata.fs) {
                            this.emitServer("FrakshopBuy", JSON.stringify(this.shoppingCart)), this.hide()
                        } else {
                            this.emitServer("shopBuy", JSON.stringify(this.shoppingCart)), this.hide()
                        }
                    },
                    mouseoverItem: function(e) {
                        this.overItem = e
                    },
                    remove: function(e) {
                        this.shoppingCart = this.shoppingCart.filter((function(t) {
                            return t != e
                        }))
                    },
                    change: function(e) {
                        e.amount > 250 ? e.amount = 250 : (e.amount < 1 || isNaN(e.amount)) && (e.amount = 1)
                    },
                    addAmount: function(e) {
                        e.amount += 1
                    },
                    subAmount: function(e) {
                        1 == e.amount && this.remove(e), e.amount -= 1
                    },
                    getTitle: function() {
                        return this.shopdata.n
                    }
                },
                computed: {
                    total: function() {
                        return this.shoppingCart.reduce((function(e, t) {
                            return t.p * t.amount + e
                        }), 0)
                    }
                },
                created: function() {
                    var e = this;
               
                },
                filters: {
                    truncate: function(e, t, a) {
                        return e.length > t ? e.substring(0, t) + a : e
                    }
                }
            },
            Oa = Na,
            La = (a("5566"), a("0631"), Object(d["a"])(Oa, Ia, Aa, !1, null, null, null)),
            Ha = La.exports,
            za = (a("00b4"), function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-sm-switched",
                    attrs: {
                        title: "Erste Hilfe",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "injury"
                }, [t("div", {
                    staticClass: "injury-animation"
                }, [t("svg", {
                    attrs: {
                        version: "1.1",
                        id: "Layer_1",
                        xmlns: "http://www.w3.org/2000/svg",
                        "xmlns:xlink": "http://www.w3.org/1999/xlink",
                        x: "0px",
                        y: "0px",
                        viewBox: "-466.4 259.6 280.2 47.3",
                        "enable-background": "new -466.4 259.6 280.2 47.3",
                        "xml:space": "preserve"
                    }
                }, [t("polyline", {
                    staticClass: "ekg",
                    attrs: {
                        fill: "none",
                        stroke: "#4289A3",
                        "stroke-width": "2",
                        "stroke-linecap": "square",
                        "stroke-miterlimit": "10",
                        points: "-465.4,281 -436,281 -435.3,280.6 -431.5,275.2 -426.9,281 -418.9,281 -423.9,281 -363.2,281 -355.2,269 -345.2,303 -335.2,263 -325.2,291 -319.2,281 -187.2,281 "
                    }
                })])]), t("div", {
                    staticClass: "injury-info-box"
                }, [t("div", {
                    staticClass: "injury-info"
                }, [t("div", {
                    staticClass: "injury-info-title"
                }, [e._v("Status")]), t("div", {
                    staticClass: "injury-info-desc"
                }, [e.data.s ? t("span", {
                    staticClass: "text-success"
                }, [e._v("Stabilisiert")]) : t("span", {
                    staticClass: "text-danger"
                }, [e._v("Unbekannt")]), t("br"), e.data.tr ? t("span", {
                    staticClass: "text-success"
                }, [e._v("Transportbereit")]) : e._e()])]), t("div", {
                    staticClass: "injury-info"
                }, [t("div", {
                    staticClass: "injury-info-title"
                }, [e._v("Verletzung")]), t("div", {
                    staticClass: "injury-info-desc text-sibaui"
                }, [e._v(e._s(e.data.t))])])]), t("div", {
                    staticClass: "injury-confirmation"
                }, [0 == e.data.status ? t("CoreButton", {
                    attrs: {
                        disabled: !e.test
                    },
                    on: {
                        click: function(t) {
                            return e.identifyInjury()
                        }
                    }
                }, [e._v("Verletzung identifizieren")]) : 1 == e.data.status || 2 == e.data.status ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.helpInjury()
                        }
                    }
                }, [e._v("Aufheben")]) : 3 == e.data.status && 0 == e.data.s ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.stabilizeInjury()
                        }
                    }
                }, [e._v("Stabilisieren")]) : 3 != e.data.status || 1 != e.data.s || e.data.st || e.data.tr || !e.data.m ? 3 == e.data.status && 1 == e.data.s && e.data.st && e.data.m ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.cureInjury()
                        }
                    }
                }, [e._v("Verletzung behandeln")]) : e._e() : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.transportReadyInjury()
                        }
                    }
                }, [e._v("Transportbereit machen")])], 1)])])
            }),
            ja = [],
            Ra = {
                name: "Injury",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        stabilized: this.data.s,
                        interact: !1
                    }
                },
                methods: {
                    identifyInjury: function() {
                        this.interact = !0, this.emitServer("IdentifyInjury", this.data.i)
                    },
                    helpInjury: function() {
                        this.interact = !0, this.emitServer("HelpInjury", this.data.i)
                    },
                    stabilizeInjury: function() {
                        this.interact = !0, this.emitServer("StabilizeInjury", this.data.i)
                    },
                    transportReadyInjury: function() {
                        this.interact = !0, this.emitServer("TransportReadyInjury", this.data.i)
                    },
                    cureInjury: function() {
                        this.interact = !0, this.emitServer("CureInjury", this.data.i, this.data.st)
                    },
                    UpdateInjuryIdentifier: function() {
                        this.data.t = arguments.length <= 0 ? void 0 : arguments[0], this.data.status = arguments.length <= 1 ? void 0 : arguments[1], this.interact = !1
                    },
                    UpdateInjuryStabilized: function() {
                        this.data.s = !0, this.interact = !1, this.data.status = 3
                    },
                    FinishInjury: function() {
                        this.hide()
                    },
                    canInteract: function() {
                        return !this.interact
                    }
                },
                created: function() {
                    this.addEvent("UpdateInjuryIdentifier", this.UpdateInjuryIdentifier), this.addEvent("UpdateInjuryStabilized", this.UpdateInjuryStabilized), this.addEvent("FinishInjury", this.FinishInjury)
                },
                computed: {
                    test: function() {
                        return !this.interact
                    }
                }
            },
            Va = Ra,
            Ea = (a("e753"), Object(d["a"])(Va, za, ja, !1, null, "31940220", null)),
            Ga = Ea.exports,
            Wa = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xl",
                    attrs: {
                        back: "",
                        title: "Fahrzeugübersicht",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "vehicleoverview"
                }, [t("div", {
                    staticClass: "vehicleoverview-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 0 == e.vehicleType
                    },
                    on: {
                        click: function(t) {
                            return e.displayVehicles(0)
                        }
                    }
                }, [e._v("Eigene Fahrzeuge")]), t("CoreButton", {
                    class: {
                        active: 1 == e.vehicleType
                    },
                    on: {
                        click: function(t) {
                            return e.displayVehicles(1)
                        }
                    }
                }, [e._v("Fahrzeugschlüssel")]), t("CoreButton", {
                    class: {
                        active: 2 == e.vehicleType
                    },
                    on: {
                        click: function(t) {
                            return e.displayVehicles(2)
                        }
                    }
                }, [e._v("Fraktionsfahrzeuge")]), t("CoreButton", {
                    class: {
                        active: 3 == e.vehicleType
                    },
                    on: {
                        click: function(t) {
                            return e.displayVehicles(3)
                        }
                    }
                }, [e._v("Businessfahrzeuge")])], 1)], 1), t("div", {
                    staticClass: "vehicleoverview-body"
                }, [t("div", {
                    staticClass: "vehicleoverview-body-search"
                }, [t("CoreInput", {
                    staticClass: "dark search",
                    attrs: {
                        placeholder: "Fahrzeug suchen"
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "vehicleoverview-body-row"
                }, e._l(e.vehicles.sort((function(t, a) {
                    return e.favorites.includes(t.i) ? e.favorites.includes(a.i) ? t.i - a.i : -1 : 1
                })), (function(a) {
                    return t("CoreItemBox", {
                        key: a.i,
                        staticClass: "h-33 w-10-5"
                    }, [t("div", {
                        staticClass: "vehicleoverview-icons",
                        attrs: {
                            slot: "image"
                        },
                        slot: "image"
                    }, [t("span", {
                        staticClass: "vehicleoverview-icons-favorite mdi",
                        class: {
                            "mdi-star": e.favorites.includes(a.i),
                            "mdi-star-outline": !e.favorites.includes(a.i)
                        },
                        on: {
                            click: function(t) {
                                return e.toggleFavoriteVehicle(a.i)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-file-document-outline",
                        class: {
                            "text-custom-success": a.iR,
                            "text-custom-danger": !a.iR
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-car",
                        class: {
                            "text-custom-success": !a.p,
                            "text-custom-danger": a.p
                        },
                        on: {
                            click: function(t) {
                                return e.handleVehicle(a)
                            }
                        }
                    })]), t("div", {
                        attrs: {
                            slot: "details-title"
                        },
                        slot: "details-title"
                    }, [e._v(" " + e._s(a.n) + " [" + e._s(a.i) + "]"), t("br"), e._v(" " + e._s(a.g)), t("br")]), t("div", {
                        attrs: {
                            slot: "details-description"
                        },
                        slot: "details-description"
                    }, [a.no ? t("div", [e._v(e._s(a.no))]) : t("div", [e._v("Keine Notiz")])])])
                })), 1)])])])
            },
            Ka = [],
            Ua = {
                name: "VehicleOverview",
                components: {
                    CoreInput: A,
                    CoreItemBox: oe,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        vehicleDict: [],
                        vehicleType: 0,
                        search: "",
                        favorites: []
                    }
                },
                methods: {
                    handleVehicle: function(e) {
                        fuckThistwo("setPlayerGpsMarker", e.carCor.x, e.carCor.y)
                    },
                    displayVehicles: function(e) {
                        void 0 === this.vehicleDict[e] ? this.emitServer("GetOverviewVehicles", e) : this.vehicleType = e
                    },
                    SendOverviewVehicles: function(e) {
                        this.vehicleDict[JSON.parse(e).i] = JSON.parse(e).data, this.vehicleType = JSON.parse(e).i
                    },
                    toggleFavoriteVehicle: function(e) {
                        if (this.favorites.includes(e)) {
                            this.emitServer("RemoveVehicleFromFavorites", e);
                            var t = this.favorites.indexOf(e);
                            this.favorites.splice(t, 1)
                        } else this.emitServer("AddVehicleToFavorites", e), this.favorites.push(e)
                    },
                    sendFavoriteVehicles: function(e) {
                        this.favorites = e
                    }
                },
                computed: {
                    vehicles: function() {
                        var e = this;
                        return this.vehicleDict[this.vehicleType].filter((function(t) {
                            return t.n.toLowerCase().includes(e.search.toLowerCase()) || t.g.toLowerCase().includes(e.search.toLowerCase()) || t.i.toString().includes(e.search.toLowerCase()) || t.no.toLowerCase().includes(e.search.toLowerCase())
                        }))
                    }
                },
                created: function() {
                    this.vehicleDict[0] = JSON.parse(this.data).data, this.addEvent("SendOverviewVehicles", this.SendOverviewVehicles), this.addEvent("SendFavoriteVehicles", this.sendFavoriteVehicles), this.emitServer("GetFavoriteVehicles")
                }
            },
            $a = Ua,
            qa = (a("3ba9"), Object(d["a"])($a, Wa, Ka, !1, null, null, null)),
            Ja = qa.exports,
            Za = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "char-interface"
                }, [t("div", {
                    staticClass: "char-box-left"
                }, [t("div", {
                    staticClass: "char-title"
                }, [e._v(e._s(e.isNew ? "Charakter erstellen" : "Aussehen verändern"))]), t("div", {
                    staticClass: "char-body"
                }, [t("div", {
                    staticClass: "char-body-components"
                }, [t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 0 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 0
                        }
                    }
                }, [e._m(0), t("div", {
                    staticClass: "component-title"
                }, [e._v("Kopf")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 1 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 1
                        }
                    }
                }, [e._m(1), t("div", {
                    staticClass: "component-title"
                }, [e._v("Oberes Gesicht")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 2 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 2
                        }
                    }
                }, [e._m(2), t("div", {
                    staticClass: "component-title"
                }, [e._v("Unteres Gesicht")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 3 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 3
                        }
                    }
                }, [e._m(3), t("div", {
                    staticClass: "component-title"
                }, [e._v("Frisur")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 4 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 4
                        }
                    }
                }, [e._m(4), t("div", {
                    staticClass: "component-title"
                }, [e._v("Bart")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 5 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 5
                        }
                    }
                }, [e._m(5), t("div", {
                    staticClass: "component-title"
                }, [e._v("Augen")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 10 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 10
                        }
                    }
                }, [e._m(6), t("div", {
                    staticClass: "component-title"
                }, [e._v("Sprossen")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 6 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 6
                        }
                    }
                }, [e._m(7), t("div", {
                    staticClass: "component-title"
                }, [e._v("Alterung")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 7 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 7
                        }
                    }
                }, [e._m(8), t("div", {
                    staticClass: "component-title"
                }, [e._v("Makeup")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 8 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 8
                        }
                    }
                }, [e._m(9), t("div", {
                    staticClass: "component-title"
                }, [e._v("Lippenstift")])]), t("div", {
                    staticClass: "char-body-component",
                    class: {
                        active: 9 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 9
                        }
                    }
                }, [e._m(10), t("div", {
                    staticClass: "component-title"
                }, [e._v("Blush")])])])])]), e.part >= 0 ? t("div", {
                    staticClass: "char-box-right"
                }, [t("div", {
                    staticClass: "char-body-settings"
                }, [0 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Kopf")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Form Vater")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.FatherShape) + " | 45")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "45"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.FatherShape,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "FatherShape", t)
                        },
                        expression: "charNew.Parents.FatherShape"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Form Mutter")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.MotherShape) + " | 45")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "45"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.MotherShape,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "MotherShape", t)
                        },
                        expression: "charNew.Parents.MotherShape"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Hautfarbe Vater")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.FatherSkin) + " | 45")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "45"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.FatherSkin,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "FatherSkin", t)
                        },
                        expression: "charNew.Parents.FatherSkin"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Hautfarbe Mutter")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.MotherSkin) + " | 45")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "45"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.MotherSkin,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "MotherSkin", t)
                        },
                        expression: "charNew.Parents.MotherSkin"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Form Mix")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.Similarity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.Similarity,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "Similarity", t)
                        },
                        expression: "charNew.Parents.Similarity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Hautfarbe Mix")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Parents.SkinSimilarity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setHead(e.charNew.Parents)
                        }
                    },
                    model: {
                        value: e.charNew.Parents.SkinSimilarity,
                        callback: function(t) {
                            e.$set(e.charNew.Parents, "SkinSimilarity", t)
                        },
                        expression: "charNew.Parents.SkinSimilarity"
                    }
                })], 1) : e._e(), 1 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Oberes Gesicht")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[0]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(0, e.charNew.Features[0])
                        }
                    },
                    model: {
                        value: e.charNew.Features[0],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 0, t)
                        },
                        expression: "charNew.Features[0]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenhöhe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[1]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(1, e.charNew.Features[1])
                        }
                    },
                    model: {
                        value: e.charNew.Features[1],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 1, t)
                        },
                        expression: "charNew.Features[1]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenlänge")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[2]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(2, e.charNew.Features[2])
                        }
                    },
                    model: {
                        value: e.charNew.Features[2],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 2, t)
                        },
                        expression: "charNew.Features[2]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenrücken")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[3]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(3, e.charNew.Features[3])
                        }
                    },
                    model: {
                        value: e.charNew.Features[3],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 3, t)
                        },
                        expression: "charNew.Features[3]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenspitze")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[4]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(4, e.charNew.Features[4])
                        }
                    },
                    model: {
                        value: e.charNew.Features[4],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 4, t)
                        },
                        expression: "charNew.Features[4]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nasenverkrümmung")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[5]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(5, e.charNew.Features[5])
                        }
                    },
                    model: {
                        value: e.charNew.Features[5],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 5, t)
                        },
                        expression: "charNew.Features[5]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Augenbrauenhöhe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[6]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(6, e.charNew.Features[6])
                        }
                    },
                    model: {
                        value: e.charNew.Features[6],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 6, t)
                        },
                        expression: "charNew.Features[6]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Augenbrauenbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[7]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(7, e.charNew.Features[7])
                        }
                    },
                    model: {
                        value: e.charNew.Features[7],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 7, t)
                        },
                        expression: "charNew.Features[7]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Wangenknochenhöhe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[8]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(8, e.charNew.Features[8])
                        }
                    },
                    model: {
                        value: e.charNew.Features[8],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 8, t)
                        },
                        expression: "charNew.Features[8]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Wangenknochenbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[9]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(9, e.charNew.Features[9])
                        }
                    },
                    model: {
                        value: e.charNew.Features[9],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 9, t)
                        },
                        expression: "charNew.Features[9]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Wangenbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[10]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(10, e.charNew.Features[10])
                        }
                    },
                    model: {
                        value: e.charNew.Features[10],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 10, t)
                        },
                        expression: "charNew.Features[10]"
                    }
                })], 1) : e._e(), 2 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Unteres Gesicht")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Augen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[11]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(11, e.charNew.Features[11])
                        }
                    },
                    model: {
                        value: e.charNew.Features[11],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 11, t)
                        },
                        expression: "charNew.Features[11]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Lippen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[12]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(12, e.charNew.Features[12])
                        }
                    },
                    model: {
                        value: e.charNew.Features[12],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 12, t)
                        },
                        expression: "charNew.Features[12]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kieferbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[13]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(13, e.charNew.Features[13])
                        }
                    },
                    model: {
                        value: e.charNew.Features[13],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 13, t)
                        },
                        expression: "charNew.Features[13]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kieferhöhe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[14]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(14, e.charNew.Features[14])
                        }
                    },
                    model: {
                        value: e.charNew.Features[14],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 14, t)
                        },
                        expression: "charNew.Features[14]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kinnlänge")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[15]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(15, e.charNew.Features[15])
                        }
                    },
                    model: {
                        value: e.charNew.Features[15],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 15, t)
                        },
                        expression: "charNew.Features[15]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kinnposition")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[16]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(16, e.charNew.Features[16])
                        }
                    },
                    model: {
                        value: e.charNew.Features[16],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 16, t)
                        },
                        expression: "charNew.Features[16]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kinnbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[17]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(17, e.charNew.Features[17])
                        }
                    },
                    model: {
                        value: e.charNew.Features[17],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 17, t)
                        },
                        expression: "charNew.Features[17]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Kinnform")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[18]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(18, e.charNew.Features[18])
                        }
                    },
                    model: {
                        value: e.charNew.Features[18],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 18, t)
                        },
                        expression: "charNew.Features[18]"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Nackenbreite")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Features[19]) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "-1",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setFace(19, e.charNew.Features[19])
                        }
                    },
                    model: {
                        value: e.charNew.Features[19],
                        callback: function(t) {
                            e.$set(e.charNew.Features, 19, t)
                        },
                        expression: "charNew.Features[19]"
                    }
                })], 1) : e._e(), 3 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Frisur")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Art")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.Hair) + " | " + e._s(e.data ? 157 : 121))])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: e.data ? 157 : 121
                    },
                    on: {
                        input: function(t) {
                            return e.setHair(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.Hair,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "Hair", t)
                        },
                        expression: "charNew.Hair.Hair"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("1. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.Color) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setHairColor(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.Color,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "Color", t)
                        },
                        expression: "charNew.Hair.Color"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("2. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.HighlightColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setHairColor(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.HighlightColor,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "HighlightColor", t)
                        },
                        expression: "charNew.Hair.HighlightColor"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Brusthaare")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[10].Value) + " | 16")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "16"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(10, e.charNew.Appearance[10])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[10].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[10], "Value", t)
                        },
                        expression: "charNew.Appearance[10].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[10].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(10, e.charNew.Appearance[10])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[10].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[10], "Opacity", t)
                        },
                        expression: "charNew.Appearance[10].Opacity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("1. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.ChestHairColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(10, 1, e.charNew.ChestHairColor)
                        }
                    },
                    model: {
                        value: e.charNew.ChestHairColor,
                        callback: function(t) {
                            e.$set(e.charNew, "ChestHairColor", t)
                        },
                        expression: "charNew.ChestHairColor"
                    }
                })], 1) : e._e(), 4 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Bart")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Aussehen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[1].Value) + " | 28")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "28"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(1, e.charNew.Appearance[1])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[1].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[1], "Value", t)
                        },
                        expression: "charNew.Appearance[1].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[1].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(1, e.charNew.Appearance[1])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[1].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[1], "Opacity", t)
                        },
                        expression: "charNew.Appearance[1].Opacity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.BeardColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(1, 1, e.charNew.BeardColor)
                        }
                    },
                    model: {
                        value: e.charNew.BeardColor,
                        callback: function(t) {
                            e.$set(e.charNew, "BeardColor", t)
                        },
                        expression: "charNew.BeardColor"
                    }
                })], 1) : e._e(), 5 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Augen")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Augenfarbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.EyeColor) + " | 31")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "31"
                    },
                    on: {
                        input: function(t) {
                            return e.setEyeColor(e.charNew.EyeColor)
                        }
                    },
                    model: {
                        value: e.charNew.EyeColor,
                        callback: function(t) {
                            e.$set(e.charNew, "EyeColor", t)
                        },
                        expression: "charNew.EyeColor"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Augenbrauen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[2].Value) + " | 33")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "33"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(2, e.charNew.Appearance[2])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[2].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[2], "Value", t)
                        },
                        expression: "charNew.Appearance[2].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[2].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(2, e.charNew.Appearance[2])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[2].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[2], "Opacity", t)
                        },
                        expression: "charNew.Appearance[2].Opacity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.EyebrowColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(2, 1, e.charNew.EyebrowColor)
                        }
                    },
                    model: {
                        value: e.charNew.EyebrowColor,
                        callback: function(t) {
                            e.$set(e.charNew, "EyebrowColor", t)
                        },
                        expression: "charNew.EyebrowColor"
                    }
                })], 1) : e._e(), 6 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Alterung")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Falten")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[3].Value) + " | 14")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "14"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(3, e.charNew.Appearance[3])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[3].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[3], "Value", t)
                        },
                        expression: "charNew.Appearance[3].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[3].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(3, e.charNew.Appearance[3])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[3].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[3], "Opacity", t)
                        },
                        expression: "charNew.Appearance[3].Opacity"
                    }
                })], 1) : e._e(), 7 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Makeup")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Variante")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[4].Value) + " | 74")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "74"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(4, e.charNew.Appearance[4])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[4].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[4], "Value", t)
                        },
                        expression: "charNew.Appearance[4].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[3].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(4, e.charNew.Appearance[4])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[4].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[4], "Opacity", t)
                        },
                        expression: "charNew.Appearance[4].Opacity"
                    }
                })], 1) : e._e(), 8 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Lippenstift")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Art")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[8].Value) + " | 9")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "9"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(8, e.charNew.Appearance[8])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[8].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[8], "Value", t)
                        },
                        expression: "charNew.Appearance[8].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[8].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(8, e.charNew.Appearance[8])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[8].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[8], "Opacity", t)
                        },
                        expression: "charNew.Appearance[8].Opacity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.LipstickColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(8, 2, e.charNew.LipstickColor)
                        }
                    },
                    model: {
                        value: e.charNew.LipstickColor,
                        callback: function(t) {
                            e.$set(e.charNew, "LipstickColor", t)
                        },
                        expression: "charNew.LipstickColor"
                    }
                })], 1) : e._e(), 9 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Blush")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Aussehen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[5].Value) + " | 6")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "6"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(5, e.charNew.Appearance[5])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[5].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[5], "Value", t)
                        },
                        expression: "charNew.Appearance[5].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[5].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(5, e.charNew.Appearance[5])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[5].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[5], "Opacity", t)
                        },
                        expression: "charNew.Appearance[5].Opacity"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.BlushColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(5, 2, e.charNew.BlushColor)
                        }
                    },
                    model: {
                        value: e.charNew.BlushColor,
                        callback: function(t) {
                            e.$set(e.charNew, "BlushColor", t)
                        },
                        expression: "charNew.BlushColor"
                    }
                })], 1) : e._e(), 10 == e.part ? t("section", [t("div", {
                    staticClass: "char-settings-title"
                }, [e._v("Sommersprossen")]), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Art")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[9].Value) + " | 17")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "17"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(9, e.charNew.Appearance[9])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[9].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[9], "Value", t)
                        },
                        expression: "charNew.Appearance[9].Value"
                    }
                }), t("div", {
                    staticClass: "char-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[9].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(9, e.charNew.Appearance[9])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[9].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[9], "Opacity", t)
                        },
                        expression: "charNew.Appearance[9].Opacity"
                    }
                })], 1) : e._e()])]) : e._e(), t("div", {
                    staticClass: "char-box-referral"
                }, [e.isNew ? t("div", {
                    staticClass: "referral-program"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/char/referral-program.png",
                        alt: ""
                    }
                }), t("CoreInput", {
                    staticClass: "dark-referral",
                    attrs: {
                        placeholder: "Geworben von: Erwin_Nietzsche"
                    },
                    model: {
                        value: e.referrer,
                        callback: function(t) {
                            e.referrer = t
                        },
                        expression: "referrer"
                    }
                })], 1) : e._e()]), t("div", {
                    staticClass: "char-confirmation"
                }, [e.isNew ? e._e() : t("div", {
                    staticClass: "char-confirmation-price"
                }, [t("span", {
                    staticClass: "char-confirmation-price-title"
                }, [e._v("Preis:")]), t("span", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(e.price) + " $")])]), t("div", {
                    staticClass: "char-confirmation-buttons"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.finish
                    }
                }, [e._v("Fertig")]), e.isNew ? e._e() : t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.cancel
                    }
                }, [e._v("Abbrechen")])], 1)]), t("CoreSlider", {
                    staticClass: "rotation-slider",
                    attrs: {
                        min: "-360",
                        max: "360"
                    },
                    on: {
                        input: e.setRotation
                    },
                    model: {
                        value: e.rotation,
                        callback: function(t) {
                            e.rotation = t
                        },
                        expression: "rotation"
                    }
                })], 1)
            },
            Xa = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/kopf.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/oberesgesicht.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/unteresgesicht.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/haare.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/bart.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/augen.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/sommersprossen.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/alterung.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/makeup.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/lippenstift.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/blush.png",
                        alt: ""
                    }
                })])
            }],
            Ya = (a("e9c4"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-slider-box"
                }, [t("div", {
                    staticClass: "core-slider-title"
                }, [t("span", {
                    staticClass: "core-slider-title-name"
                }, [e._v(e._s(e.name))]), e.additionalValue ? t("span", [e._v(" | ")]) : e._e(), e.additionalValue ? t("span", {
                    staticClass: "core-slider-title-value"
                }, [e._v("( " + e._s(e.additionalValue) + " )")]) : e._e()]), t("input", {
                    staticClass: "core-slider-input",
                    attrs: {
                        name: e.name,
                        min: e.min,
                        step: e.steps,
                        max: e.max,
                        type: "range"
                    },
                    domProps: {
                        value: e.value
                    },
                    on: {
                        input: function(t) {
                            return e.$emit("input", t.target.value)
                        }
                    }
                })])
            }),
            Qa = [],
            ei = {
                name: "CoreSlider",
                props: {
                    name: {
                        type: String
                    },
                    additionalValue: {
                        type: String
                    },
                    min: {
                        type: [String, Number]
                    },
                    max: {
                        type: [String, Number]
                    },
                    steps: {
                        type: [String, Number]
                    },
                    value: {
                        type: [String, Number]
                    }
                },
                methods: {
                    click: function() {
                        this.$emit("click")
                    }
                }
            },
            ti = ei,
            ai = (a("f548"), Object(d["a"])(ti, Ya, Qa, !1, null, "758d9bf9", null)),
            ii = ai.exports,
            si = {
                name: "Char",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreSlider: ii
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                  /*  var e = {
                        Parents: {
                            FatherShape: 0,
                            MotherShape: 0,
                            FatherSkin: 0,
                            MotherSkin: 0,
                            Similarity: 0,
                            SkinSimilarity: 0
                        },
                        Features: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                        Appearance: [{
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }, {
                            Value: 255,
                            Opacity: 1
                        }],
                        Hair: {
                            Hair: 0,
                            Color: 0,
                            HighlightColor: 0
                        },
                        EyebrowColor: 0,
                        BeardColor: 0,
                        EyeColor: 0,
                        BlushColor: 0,
                        LipstickColor: 0,
                        ChestHairColor: 0
                    };*/
                    return {
                        e: JSON.parse(this.data),
                        part: 0,
                        charOld: JSON.parse(this.data),
                        charNew: JSON.parse(this.data),
                        isNew: !1,
                        rotation: 323.294,
                        lastHair: 0,
                        referrer: "Erwin_Nietzsche"
                    }
                },
                methods: {
                    setHead: function(e) {
                        testthis("SetPedHeadBlendData", parseInt(e.FatherShape), parseInt(e.MotherShape), parseInt(e.FatherSkin), parseInt(e.MotherSkin), parseFloat(e.Similarity), parseFloat(e.SkinSimilarity))
                    },
                    setFace: function(e, t) {
                        testthis("SetPedFaceFeature", parseInt(e), parseFloat(t))
                    },
                    setHair: function(e) {
                        this.e ? 24 == e.Hair && (23 == this.lastHair ? e.Hair = 25 : 25 == this.lastHair && (e.Hair = 23)) : 23 == e.Hair && (22 == this.lastHair ? e.Hair = 24 : 24 == this.lastHair && (e.Hair = 22)), testthis("SetPedHair", parseInt(e.Hair)), this.lastHair = e.Hair
                    },
                    setHairColor: function(e) {
                        testthis("SetPedHairColor", parseInt(e.Color), parseInt(e.HighlightColor))
                    },
                    setOverlay: function(e, t) {
                        testthis("SetPedHeadOverlay", parseInt(e), 0 == t.Opacity ? 255 : parseInt(t.Value), parseFloat(t.Opacity))
                    },
                    setOverlayColor: function(e, t, a) {
                        testthis("SetPedHeadOverlayColor", parseInt(e), parseInt(t), parseInt(a), 0)
                    },
                    setEyeColor: function(e) {
                        testthis("SetPedEyeColor", parseInt(e))
                    },
                    finish: function() {
                        if (this.isNew) {
                            if ("" !== this.referrer && -1 === this.referrer.indexOf("_")) return;
                            if (this.referrer.length >= 31) return;
                            this.emitServer("FinishChar", JSON.stringify(this.charNew))
                        } else this.emitServer("FinishChar", JSON.stringify(this.charNew));
                        this.emit("DestroyCamera"), this.emit("SetPlayer", "appearance", this.charNew), this.hide()
                    },
                    cancel: function() {
                        this.emit("DestroyCamera"), this.emitServer("EndChar"), this.hide()
                    },
                    setAppearance: function(e) {
                        void 0 != e ? (this.charOld = e, this.charNew = JSON.parse(JSON.stringify(e))) : this.isNew = !0
                    },
                    setRotation: function() {
                        testthis("SetRotation", this.rotation)
                    },
                    trim: function(e) {
                        return e.trim()
                    }
                },
                computed: {
                    price: function() {
                        var e = 0;
                        if (this.isNew) return 0;
                        var t = this.charOld.Parents,
                            a = this.charNew.Parents;
                        parseInt(t.FatherShape) != parseInt(a.FatherShape) && (e += 1e3), parseInt(t.FatherSkin) != parseInt(a.FatherSkin) && (e += 1e3), parseInt(t.MotherShape) != parseInt(a.MotherShape) && (e += 1e3), parseInt(t.MotherSkin) != parseInt(a.MotherSkin) && (e += 1e3), parseFloat(t.Similarity) != parseFloat(a.Similarity) && (e += 1e3), parseFloat(t.SkinSimilarity) != parseFloat(a.SkinSimilarity) && (e += 1e3);
                        for (var i = 0; i <= 19; i++) parseFloat(this.charOld.Features[i]) != parseFloat(this.charNew.Features[i]) && (e += 300);
                        for (var s = 0; s <= 10; s++) parseInt(this.charOld.Appearance[s].Value) != parseInt(this.charNew.Appearance[s].Value) && (e += 100), parseFloat(this.charOld.Appearance[s].Opacity) != parseFloat(this.charNew.Appearance[s].Opacity) && (e += 100);
                        return parseInt(this.charOld.Hair.Color) != parseInt(this.charNew.Hair.Color) && (e += 250), parseInt(this.charOld.Hair.Hair) != parseInt(this.charNew.Hair.Hair) && (e += 500), parseInt(this.charOld.Hair.HighlightColor) != parseInt(this.charNew.Hair.HighlightColor) && (e += 100), parseInt(this.charOld.EyebrowColor) != parseInt(this.charNew.EyebrowColor) && (e += 250), parseInt(this.charOld.BeardColor) != parseInt(this.charNew.BeardColor) && (e += 250), parseInt(this.charOld.EyeColor) != parseInt(this.charNew.EyeColor) && (e += 250), parseInt(this.charOld.BlushColor) != parseInt(this.charNew.BlushColor) && (e += 200), parseInt(this.charOld.LipstickColor) != parseInt(this.charNew.LipstickColor) && (e += 200), parseInt(this.charOld.ChestHairColor) != parseInt(this.charNew.ChestHairColor) && (e += 200), e
                    }
                },
                created: function() {
                    this.addEvent("appearance", this.setAppearance), this.emit("PointCameraAtFace"), this.emit("GetPlayer", "appearance"), this.dev && (this.charNew = JSON.parse('{"Parents":{"FatherShape":0,"MotherShape":34,"FatherSkin":0,"MotherSkin":2,"Similarity":0.74,"SkinSimilarity":0.71},"Features":[-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01],"Appearance":[{"Value":255,"Opacity":0.99},{"Value":4,"Opacity":1.0},{"Value":10,"Opacity":0.99},{"Value":2,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":16,"Opacity":0.01}],"Hair":{"Hair":16,"Color":3,"HighlightColor":0},"EyebrowColor":0,"BeardColor":3,"EyeColor":2,"BlushColor":0,"LipstickColor":0,"ChestHairColor":52,"Tattoos":[45,141,11]}'), this.charOld = JSON.parse('{"Parents":{"FatherShape":0,"MotherShape":34,"FatherSkin":0,"MotherSkin":2,"Similarity":0.74,"SkinSimilarity":0.71},"Features":[-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01,-0.01],"Appearance":[{"Value":255,"Opacity":0.99},{"Value":4,"Opacity":1.0},{"Value":10,"Opacity":0.99},{"Value":2,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":255,"Opacity":0.99},{"Value":16,"Opacity":0.01}],"Hair":{"Hair":16,"Color":3,"HighlightColor":0},"EyebrowColor":0,"BeardColor":3,"EyeColor":2,"BlushColor":0,"LipstickColor":0,"ChestHairColor":52,"Tattoos":[45,141,11]}'))
                }
            },
            ni = si,
            ri = (a("e88d"), Object(d["a"])(ni, Za, Xa, !1, null, null, null)),
            oi = ri.exports,
            ci = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "scratchcard"
                }, [t("div", {
                    staticClass: "scratch-off-gallery",
                    style: {
                        backgroundImage: "url(images/interface/scratchcard/" + this.selectt + "/scratched.png)"
                    }
                }, [t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_0",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_0"
                    }
                })]), t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_1",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_1"
                    }
                })]), t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_2",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_2"
                    }
                })]), t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_3",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_3"
                    }
                })]), t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_4",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_4"
                    }
                })]), t("div", {
                    staticClass: "scratch-off-gallery__item"
                }, [t("div", {
                    ref: "scratch_5",
                    staticClass: "scratchcard-div",
                    attrs: {
                        id: "scratchcard_5"
                    }
                })])])])
            },
            li = [],
            ui = (a("b680"), a("f941")),
            mi = {
                name: "Scratchcard",
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        selectt: JSON.parse(this.data).t,
                        selectn: JSON.parse(this.data).n,
                        scratchcards: [],
                        scratchcardContainers: [],
                        finishedScratchCards: [],
                        numberFormatter: null,
                        emitted: !1,
                        winningCheckInterval: null
                    }
                },
                mounted: function() {
                    var e = this;
                    this.scratchcardContainers[0] = this.$refs.scratch_0, this.scratchcardContainers[1] = this.$refs.scratch_1, this.scratchcardContainers[2] = this.$refs.scratch_2, this.scratchcardContainers[3] = this.$refs.scratch_3, this.scratchcardContainers[4] = this.$refs.scratch_4, this.scratchcardContainers[5] = this.$refs.scratch_5;
                    for (var t = function(t) {
                            e.scratchcards[t] = new ui["ScratchCard"]("#scratchcard_" + t, {
                                scratchType: ui["SCRATCH_TYPE"].SPRAY,
                                containerWidth: e.scratchcardContainers[t].offsetWidth,
                                containerHeight: 79,
                                imageForwardSrc: "images/interface/scratchcard/" + e.selectt + "/scratch.png",
                                imageBackgroundSrc: "images/interface/scratchcard/" + e.selectn[t] + ".png",
                                clearZoneRadius: 23,
                                nPoints: 100,
                                pointSize: 5,
                                percentToFinish: 40,
                                callback: function() {}
                            }), e.scratchcards[t].init().then((function() {
                                e.scratchcards[t].canvas.addEventListener("scratch.move", (function() {
                                    var a = e.scratchcards[t].getPercent().toFixed(2);
                                    a > 40 && (e.finishedScratchCards[t] = !0)
                                }))
                            }))
                        }, a = 0; a <= 5; a++) t(a)
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    SendScratchcard: function() {
                        this.emitServer("Scratchcard"), clearInterval(this.winningCheckInterval), this.winningCheckInterval = null, this.close()
                    }
                },
                created: function() {
                    var e = this;
                    this.numberFormatter = new Intl.NumberFormat("de-DE", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0,
                        minimumFractionDigits: 0
                    });
                    for (var t = 0; t <= 5; t++) this.finishedScratchCards[t] = !1;
                    this.winningCheckInterval = setInterval((function() {
                        var t = e.finishedScratchCards.filter((function(e) {
                            return !0 === e
                        }));
                        t.length >= 6 && !e.emitted && (e.emitted = !0, setTimeout((function() {
                            e.SendScratchcard()
                        }), 1e3))
                    }), 1e3), setTimeout((function() {
                        e.emitted || (e.emitted = !0, e.SendScratchcard())
                    }), 15e3)
                }
            },
            di = mi,
            hi = (a("5177"), Object(d["a"])(di, ci, li, !1, null, null, null)),
            _i = hi.exports,
            pi = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Camperinfo",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "camper"
                }, [t("div", {
                    staticClass: "camper-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 1
                        }
                    }
                }, [e._v("Prozess")]), t("CoreButton", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 2
                        }
                    }
                }, [e._v("Einstellungen")]), t("CoreButton", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 3
                        }
                    }
                }, [e._v("Sonstiges")])], 1)], 1), t("div", {
                    staticClass: "camper-body"
                }, [1 == this.page ? t("div", {
                    staticClass: "camper-body-process"
                }, [t("div", {
                    staticClass: "camper-body-process-left"
                }, [t("div", {
                    staticClass: "camper-body-process-left-image"
                }, [t("img", {
                    staticStyle: {
                        filter: "invert(100%)"
                    },
                    attrs: {
                        src: "images/interface/camper/camper-lab.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "camper-body-process-left-status"
                })]), t("div", {
                    staticClass: "camper-body-process-right"
                }, [t("CoreButton", {
                    staticClass: "success",
                    attrs: {
                        disabled: !this.btnStart
                    },
                    on: {
                        click: e.StartCamperProcess
                    }
                }, [e._v("Prozess starten")]), t("CoreButton", {
                    staticClass: "danger",
                    attrs: {
                        disabled: this.btnStart
                    },
                    on: {
                        click: e.StopCamperProcess
                    }
                }, [e._v("Prozess stoppen")])], 1)]) : e._e(), 2 == this.page ? t("div", {
                    staticClass: "camper-body-settings"
                }, [t("div", {
                    staticClass: "camper-body-settings-sliders"
                }, [t("div", {
                    staticClass: "camper-body-settings-sliders-box"
                }, [t("CoreSlider", {
                    attrs: {
                        name: "Temperatur",
                        min: "0",
                        max: "250",
                        steps: "0.1",
                        additionalValue: this.data.t + "°C",
                        value: e.data.t
                    },
                    model: {
                        value: e.data.t,
                        callback: function(t) {
                            e.$set(e.data, "t", t)
                        },
                        expression: "data.t"
                    }
                }), t("CoreSlider", {
                    attrs: {
                        name: "Luftfeuchtigkeit",
                        min: "0",
                        max: "100",
                        steps: "0.01",
                        additionalValue: this.data.h + "%",
                        value: e.data.h
                    },
                    model: {
                        value: e.data.h,
                        callback: function(t) {
                            e.$set(e.data, "h", t)
                        },
                        expression: "data.h"
                    }
                })], 1), t("div", {
                    staticClass: "camper-body-settings-sliders-box"
                }, [t("CoreSlider", {
                    attrs: {
                        name: "Druck",
                        min: "0",
                        max: "100",
                        steps: "0.01",
                        additionalValue: this.data.d + " Bar",
                        value: e.data.d
                    },
                    model: {
                        value: e.data.d,
                        callback: function(t) {
                            e.$set(e.data, "d", t)
                        },
                        expression: "data.d"
                    }
                }), t("CoreSlider", {
                    attrs: {
                        name: "Lüftung",
                        min: "0",
                        max: "5",
                        steps: "1",
                        additionalValue: this.data.v > 0 ? "Stufe: " + this.data.v : "Aus",
                        value: e.data.v
                    },
                    model: {
                        value: e.data.v,
                        callback: function(t) {
                            e.$set(e.data, "v", t)
                        },
                        expression: "data.v"
                    }
                })], 1)]), t("div", {
                    staticClass: "camper-body-settings-footer"
                }, [t("div", {
                    staticClass: "camper-body-settings-footer-box"
                }, [t("div", {
                    staticClass: "camper-body-settings-footer-box-title"
                }, [e._v("Derzeit aktiv")]), t("div", {
                    staticClass: "camper-body-settings-footer-box-icons"
                }, [t("img", {
                    class: {
                        active: this.data.t > 0
                    },
                    attrs: {
                        src: "images/interface/camper/camper-temperature.png",
                        alt: ""
                    }
                }), t("img", {
                    class: {
                        active: this.data.h > 0
                    },
                    attrs: {
                        src: "images/interface/camper/camper-drop.png",
                        alt: ""
                    }
                }), t("img", {
                    class: {
                        active: this.data.d > 0
                    },
                    attrs: {
                        src: "images/interface/camper/camper-energy.png",
                        alt: ""
                    }
                }), t("img", {
                    class: {
                        active: this.data.v > 0
                    },
                    attrs: {
                        src: "images/interface/camper/camper-wind.png",
                        alt: ""
                    }
                })])]), t("CoreButton", {
                    on: {
                        click: e.SaveParameter
                    }
                }, [e._v("Parameter übernehmen")])], 1)]) : e._e(), 3 == this.page ? t("div", {
                    staticClass: "camper-body-etc"
                }, [t("CoreBox", {
                    attrs: {
                        title: "Drogenequipments"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" " + e._s(this.data.dE) + " / 25 ")])]), t("CoreBox", {
                    attrs: {
                        title: "Sicherheitsupgrade"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [1 == this.data.sU ? t("span", {
                    staticClass: "text-custom-success"
                }, [e._v("Installiert")]) : t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("Nicht vorhanden")])])])], 1) : e._e()])])])
            },
            vi = [],
            fi = {
                name: "Camper",
                components: {
                    CoreBox: ca,
                    CoreSlider: ii,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        page: 1,
                        btnStart: !0
                    }
                },
                mounted: function() {
                    this.data.t = parseFloat(this.data.t).toFixed(1), this.data.h = parseFloat(this.data.h).toFixed(2), this.data.d = parseFloat(this.data.d).toFixed(2), 1 == this.data.s && (this.btnStart = !1)
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    SaveParameter: function() {
                        this.emitServer("SaveCamperParameter", parseInt(Math.round(10 * parseFloat(this.data.t))), parseInt(Math.round(100 * parseFloat(this.data.h))), parseInt(this.data.v), parseInt(Math.round(100 * parseFloat(this.data.d)))), this.displayCamperInfo()
                    },
                    ToggleButtons: function() {
                        this.btnStart = !this.btnStart
                    },
                    StartCamperProcess: function() {
                        this.emitServer("StartCamperProcess"), this.ToggleButtons()
                    },
                    StopCamperProcess: function() {
                        this.emitServer("StopCamperProcess"), this.ToggleButtons()
                    },
                    IsProcessing: function() {
                        return 1 == this.data.s
                    },
                    displayCamperInfo: function() {
                        this.page = 1
                    },
                    displayParameterInfo: function() {
                        this.page = 2
                    },
                    displayOtherStuff: function() {
                        this.page = 3
                    }
                }
            },
            bi = fi,
            gi = (a("c9ba"), Object(d["a"])(bi, pi, vi, !1, null, null, null)),
            yi = gi.exports,
            Ci = function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    staticClass: "tuning-interface",
                    attrs: {
                        title: e.test(),
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "tuning"
                }, [-1 != e.wheelsType ? t("div", {
                    staticClass: "tuning-slider"
                }, [t("div", {
                    staticClass: "core-slider-box"
                }, [t("div", {
                    staticClass: "core-slider-title"
                }, [t("span", {
                    staticClass: "core-slider-title-name"
                }, [e._v(e._s(e.GetWheelsNameById(e.wheelsType)))])]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.wheelsType,
                        expression: "wheelsType"
                    }],
                    staticClass: "core-slider-input",
                    attrs: {
                        name: e.GetWheelsNameById(e.wheelsType),
                        min: "0",
                        step: "1",
                        max: "12",
                        type: "range"
                    },
                    domProps: {
                        value: e.wheelsType
                    },
                    on: {
                        change: e.resetIndex,
                        __r: function(t) {
                            e.wheelsType = t.target.value
                        }
                    }
                })])]) : e._e(), t("div", {
                    staticClass: "tuning-index"
                }, [e._v(" Index: " + e._s(e.index) + " ")]), t("div", {
                    staticClass: "tuning-actions"
                }, [t("BaseButton", {
                    attrs: {
                        text: "Vorheriges Teil"
                    },
                    on: {
                        click: function(t) {
                            return e.PreviousTuning()
                        }
                    }
                }), t("BaseButton", {
                    attrs: {
                        text: "Nächstes Teil"
                    },
                    on: {
                        click: function(t) {
                            return e.NextTuning()
                        }
                    }
                })], 1), t("div", {
                    staticClass: "tuning-confirmation"
                }, [t("BaseButton", {
                    attrs: {
                        text: "Anbringen"
                    },
                    on: {
                        click: function(t) {
                            return e.TuneVehicle()
                        }
                    }
                })], 1)])])
            },
            ki = [],
            wi = {
                name: "Tuning",
                components: {
                    BaseButton: dt,
                    BaseInterface: ya
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        tdata: JSON.parse(this.data),
                        index: 0,
                        maxIndex: 0,
                        category: JSON.parse(this.data).c,
                        wheelsType: -1,
                        pearlColor: -1,
                        windowTint: -1,
                        headLightColor: -1,
                        wheelColor: -1,
                        plateIndex: -1,
                        interiorColor: -1
                    }
                },
                mounted: function() {
                    switch (this.category) {
                        case 23:
                        case 24:
                            this.wheelsType = 0, this.maxIndex = 50;
                            break;
                        case 56:
                            this.pearlColor = 0, this.maxIndex = 160;
                            break;
                        case 55:
                            this.windowTint = 0, this.maxIndex = 5;
                            break;
                        case 57:
                            this.headLightColor = 0, this.maxIndex = 13;
                            break;
                        case 58:
                            this.wheelColor = 0, this.maxIndex = 160;
                            break;
                        case 59:
                            this.plateIndex = 0, this.maxIndex = 5;
                            break;
                        case 60:
                            this.interiorColor = 0, this.maxIndex = 161;
                            break
                    }
                },
                methods: {
                    test: function() {
                        return "Tuning " + this.tdata.t
                    },
                    close: function() {
                        this.emitServer("CancelTuning"), this.hide()
                    },
                    NextTuning: function() {
                        this.index != this.maxIndex && (this.index++, -1 != this.wheelsType ? this.emitServer("TuneWheels", parseInt(this.wheelsType), this.index) : -1 != this.pearlColor ? this.emitServer("TunePearl", this.index) : -1 != this.windowTint ? this.emitServer("TuneWindowTint", this.index) : -1 != this.headLightColor ? this.emitServer("TuneheadLight", this.index) : -1 != this.wheelColor ? this.emitServer("TuneWheelColor", this.index) : -1 != this.plateIndex ? this.emitServer("TunePlateIndex", this.index) : -1 != this.interiorColor ? this.emitServer("TuneInteriorColor", this.index) : this.emitServer("TuneVeh", this.category, this.index))
                    },
                    PreviousTuning: function() {
                        0 != this.index && (this.index--, -1 != this.wheelsType ? this.emitServer("TuneWheels", parseInt(this.wheelsType), this.index) : -1 != this.pearlColor ? this.emitServer("TunePearl", this.index) : -1 != this.windowTint ? this.emitServer("TuneWindowTint", this.index) : -1 != this.headLightColor ? this.emitServer("TuneheadLight", this.index) : -1 != this.wheelColor ? this.emitServer("TuneWheelColor", this.index) : -1 != this.plateIndex ? this.emitServer("TunePlateIndex", this.index) : -1 != this.interiorColor ? this.emitServer("TuneInteriorColor", this.index) : this.emitServer("TuneVeh", this.category, this.index))
                    },
                    TuneVehicle: function() {
                        this.hide(), -1 != this.wheelsType ? this.emitServer("ApplyWheelTune", parseInt(this.wheelsType), this.index) : -1 != this.pearlColor ? this.emitServer("ApplyTunePearl", this.index) : -1 != this.windowTint ? this.emitServer("ApplyTuneWindowTint", this.index) : -1 != this.headLightColor ? this.emitServer("ApplyTuneheadLight", this.index) : -1 != this.wheelColor ? this.emitServer("ApplyTuneWheelColor", this.index) : -1 != this.plateIndex ? this.emitServer("ApplyPlateIndex", this.index) : -1 != this.interiorColor ? this.emitServer("ApplyInteriorColor", this.index) : this.emitServer("ApplyVehTune", this.index)
                    },
                    resetIndex: function() {
                        switch (this.index = 0, parseInt(this.wheelsType)) {
                            case 0:
                                return void(this.maxIndex = 50);
                            case 1:
                                return void(this.maxIndex = 36);
                            case 2:
                                return void(this.maxIndex = 30);
                            case 3:
                                return void(this.maxIndex = 38);
                            case 4:
                                return void(this.maxIndex = 35);
                            case 5:
                                return void(this.maxIndex = 48);
                            case 6:
                                return void(this.maxIndex = 144);
                            case 7:
                                return void(this.maxIndex = 40);
                            case 8:
                                return void(this.maxIndex = 473);
                            case 9:
                                return void(this.maxIndex = 473);
                            case 10:
                                return void(this.maxIndex = 400);
                            case 11:
                                return void(this.maxIndex = 210);
                            case 12:
                                return void(this.maxIndex = 210)
                        }
                    },
                    GetWheelsNameById: function() {
                        switch (parseInt(this.wheelsType)) {
                            case 0:
                                return "Sport";
                            case 1:
                                return "Muscle";
                            case 2:
                                return "Lowrider";
                            case 3:
                                return "SUV";
                            case 4:
                                return "Offroad";
                            case 5:
                                return "Tuner";
                            case 6:
                                return "Bike Wheels";
                            case 7:
                                return "High End";
                            case 8:
                                return "Bennys Original";
                            case 9:
                                return "Bennys Bespoke";
                            case 10:
                                return "Widebody";
                            case 11:
                                return "Street";
                            case 12:
                                return "Track";
                            default:
                                return "Test"
                        }
                    }
                }
            },
            Si = wi,
            Mi = (a("32be"), Object(d["a"])(Si, Ci, ki, !1, null, null, null)),
            xi = Mi.exports,
            Pi = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Tuning-Vorschau",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "tuningpreview"
                }, [t("div", {
                    staticClass: "tuningpreview-header"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: -1 == e.selectedIndex
                    },
                    on: {
                        click: function(t) {
                            return e.addModToShoppingCard()
                        }
                    }
                }, [e._v("Tuningteil hinzufügen")])], 1), t("div", {
                    staticClass: "tuningpreview-body"
                }, [t("div", {
                    staticClass: "tuningpreview-body-box w-33"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Kategorie")])])]), t("tbody", e._l(this.categories, (function(a) {
                    return t("tr", {
                        key: a.id,
                        staticClass: "clickable",
                        class: {
                            "color-main": a.id == e.selectCategory
                        },
                        on: {
                            click: function(t) {
                                return e.selectCategory(a.id)
                            }
                        }
                    }, [void 0 != e.tunedata.d[a.id] && e.tunedata.d[a.id].m > 0 ? t("td", [e._v(e._s(a.name))]) : e._e()])
                })), 0)])], 1), t("div", {
                    staticClass: "tuningpreview-body-box w-33"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Tuning Teil")])])]), -1 != this.selectedCategory ? t("tbody", [t("tr", {
                    staticClass: "clickable",
                    on: {
                        click: function(t) {
                            return e.selectIndex(0)
                        }
                    }
                }, [t("td", [e._v("Entfernen")])]), e._l(e.tunedata.d[e.selectedCategory].m, (function(a) {
                    return t("tr", {
                        key: a,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.selectIndex(a)
                            }
                        }
                    }, [t("td", [e._v(e._s(a))])])
                }))], 2) : e._e()])], 1), t("div", {
                    staticClass: "tuningpreview-body-box w-33"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Warenkorb")])])]), t("tbody", e._l(e.shoppingCard, (function(a, i) {
                    return t("tr", {
                        key: a,
                        staticClass: "clickable"
                    }, [t("td", 0 == a ? [e._v(e._s(e.categories[i].name) + " - Entfernen")] : [e._v(e._s(e.categories[i].name) + " - Teil " + e._s(a))])])
                })), 0)])], 1)])])])
            },
            Ti = [],
            Fi = {
                name: "TuningPreview",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        tunedata: JSON.parse(this.data),
                        selectedCategory: -1,
                        selectedIndex: -1,
                        maxMod: 0,
                        selectedTunings: [],
                        shoppingCard: [],
                        categories: [{
                            id: 0,
                            name: "Spoilers"
                        }, {
                            id: 1,
                            name: "Front Bumper"
                        }, {
                            id: 2,
                            name: "Rear Bumper"
                        }, {
                            id: 3,
                            name: "Side skirt"
                        }, {
                            id: 4,
                            name: "Exhaust"
                        }, {
                            id: 5,
                            name: "Frame"
                        }, {
                            id: 6,
                            name: "Grille"
                        }, {
                            id: 7,
                            name: "Bonnet"
                        }, {
                            id: 8,
                            name: "Left wing"
                        }, {
                            id: 9,
                            name: "Right wing"
                        }, {
                            id: 10,
                            name: "Roof"
                        }, {
                            id: 11,
                            name: "Engine"
                        }, {
                            id: 12,
                            name: "Brakes"
                        }, {
                            id: 13,
                            name: "Transmission"
                        }, {
                            id: 14,
                            name: "Horns"
                        }, {
                            id: 15,
                            name: "Suspension"
                        }, {
                            id: 16,
                            name: "Armor"
                        }, {
                            id: 18,
                            name: "Turbo"
                        }, {
                            id: 20,
                            name: "Custom tire smoke"
                        }, {
                            id: 22,
                            name: "Xenon"
                        }, {
                            id: 23,
                            name: "Front Wheels"
                        }, {
                            id: 24,
                            name: "Back Wheels (only for motorcycles and tornado6)"
                        }, {
                            id: 25,
                            name: "Plate holders"
                        }, {
                            id: 26,
                            name: "Plate vanity"
                        }, {
                            id: 27,
                            name: "Trim Design"
                        }, {
                            id: 28,
                            name: "Ornaments"
                        }, {
                            id: 30,
                            name: "Dial Design"
                        }, {
                            id: 31,
                            name: "Door interior"
                        }, {
                            id: 32,
                            name: "Seats"
                        }, {
                            id: 33,
                            name: "Steering Wheel"
                        }, {
                            id: 34,
                            name: "Shift Lever"
                        }, {
                            id: 35,
                            name: "Plaques"
                        }, {
                            id: 36,
                            name: "Rear shelf (Hutablage)"
                        }, {
                            id: 37,
                            name: "Trunk"
                        }, {
                            id: 38,
                            name: "Hydraulics"
                        }, {
                            id: 39,
                            name: "Engine block"
                        }, {
                            id: 40,
                            name: "Air filter"
                        }, {
                            id: 41,
                            name: "Strut bar"
                        }, {
                            id: 42,
                            name: "Arch Cover"
                        }, {
                            id: 43,
                            name: "Antenna"
                        }, {
                            id: 44,
                            name: "Exterior parts"
                        }, {
                            id: 45,
                            name: "Tank"
                        }, {
                            id: 46,
                            name: "Door"
                        }, {
                            id: 47,
                            name: "WHEELS_REAR_OR_HYDRAULICS"
                        }, {
                            id: 48,
                            name: "Livery"
                        }, {
                            id: 66,
                            name: "Primary Color"
                        }, {
                            id: 67,
                            name: "Secondary Color"
                        }]
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    selectCategory: function(e) {
                        -1 != this.selectedCategory && -1 != this.selectedIndex && (void 0 == this.shoppingCard[this.selectedCategory] ? this.emitServer("TuneVeh", this.selectedCategory, 0) : this.emitServer("TuneVeh", this.selectedCategory, this.shoppingCard[this.selectedCategory])), this.selectedIndex = -1, this.selectedCategory = e, this.maxMod = this.data.d[this.selectedCategory]
                    },
                    selectIndex: function(e) {
                        this.selectedIndex = e, this.emitServer("TuneVeh", this.selectedCategory, this.selectedIndex)
                    },
                    removeIndex: function() {
                        this.selectedIndex = -1, this.shoppingCard[this.selectedCategory] = this.selectedIndex
                    },
                    addModToShoppingCard: function() {
                        this.shoppingCard[this.selectedCategory] = this.selectedIndex, this.selectedIndex = -1
                    },
                    created: function() {}
                },
                computed: {
                    maxMods: function() {
                        return this.maxMod
                    }
                }
            },
            Bi = Fi,
            Ii = (a("ef1e"), Object(d["a"])(Bi, Pi, Ti, !1, null, "438b73f4", null)),
            Ai = Ii.exports,
            Di = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xs-switched",
                    attrs: {
                        title: this.fueldata.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "fuel-station"
                }, [t("div", {
                    staticClass: "fuel-station-box"
                }, [t("div", {
                    staticClass: "fuel-station-icon"
                }, [t("span", {
                    staticClass: "mdi mdi-gas-station"
                })]), t("div", {
                    staticClass: "fuel-station-details"
                }, [t("div", {
                    staticClass: "fuel-station-details-title"
                }, [t("span", {
                    staticClass: "text-bold"
                }, [e._v("Preis:")]), e._v(" "), t("span", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(e.fueldata.p) + " $")]), e._v(" / Liter ")]), t("CoreSlider", {
                    attrs: {
                        name: "",
                        min: "1",
                        max: this.fueldata.f,
                        steps: "1"
                    },
                    model: {
                        value: e.value,
                        callback: function(t) {
                            e.value = t
                        },
                        expression: "value"
                    }
                })], 1)]), t("div", {
                    staticClass: "fuel-station-confirmation"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.fuelVehicle()
                        }
                    }
                }, [e._v("Tanken (" + e._s(this.value * this.fueldata.p) + "$)")])], 1)])])
            },
            Ni = [],
            Oi = {
                name: "FuelStation",
                components: {
                    CoreSlider: ii,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        fueldata: JSON.parse(this.data),
                        value: JSON.parse(this.data).f
                    }
                },
                methods: {
                    fuelVehicle: function() {
                        parseInt(this.value) && (this.emitServer("DoRefuel", this.fueldata.i, this.fueldata.g, parseInt(this.value), this.fueldata.v), this.hide())
                    }
                }
            },
            Li = Oi,
            Hi = (a("622f"), Object(d["a"])(Li, Di, Ni, !1, null, null, null)),
            zi = Hi.exports,
            ji = (a("c35a"), function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Versteck",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "base"
                }, [t("div", {
                    staticClass: "base-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 1
                        }
                    }
                }, [e._v("Drogenlager")]), t("CoreButton", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 2
                        }
                    }
                }, [e._v("Munition")]), t("CoreButton", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.frakdata.l,
                        expression: "frakdata.l"
                    }],
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 3
                        }
                    }
                }, [e._v("Leader")]), t("CoreButton", {
                    class: {
                        active: 4 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 4
                        }
                    }
                }, [e._v("Gangwar/Drop")]), t("CoreButton", {
                    class: {
                        active: 5 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 5
                        }
                    }
                }, [e._v("Equip")]), t("CoreButton", {
                    on: {
                        click: e.openBankAcount
                    }
                }, [e._v("Fraktionskasse")])], 1)], 1), t("div", {
                    staticClass: "base-body"
                }, [1 == this.page ? t("div", {
                    staticClass: "base-body-drugstorage"
                }, [t("div", {
                    staticClass: "base-body-drugstorage-icon"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/house/house-box.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "base-body-drugstore-details"
                }, [t("div", {
                    staticClass: "base-body-drugstore-details-table"
                }, [t("CoreTable", [t("tbody", [t("tr", [t("td", [e._v("Preis:")]), t("td", {
                    staticClass: "text-custom-success"
                }, [e._v(e._s(this.frakdata.p) + " $")])]), t("tr", [t("td", [e._v("Lagerstand:")]), t("td", [e._v(e._s(this.frakdata.a) + " / " + e._s(this.frakdata.c) + " Einheiten")])]), t("tr", [t("td", [e._v("Qualität:")]), t("td", [e._v(e._s(Number.parseFloat(this.frakdata.q).toFixed(2)) + " %")])]), t("tr", [t("td", [e._v("Dealerpreis (100%):")]), t("td", [e._v(e._s(this.frakdata.s) + " $")])])])])], 1), t("div", {
                    staticClass: "base-body-drugstore-details-buttons"
                }, [e.isDrugStorageFull() ? t("div", [e._v("Drogenlager voll!")]) : t("div", [t("CoreButton", {
                    attrs: {
                        disabled: this.full
                    },
                    on: {
                        click: e.SellDrugs
                    }
                }, [e._v("Drogen verkaufen")]), t("CoreButton", {
                    attrs: {
                        disabled: this.full
                    },
                    on: {
                        click: e.SellDrugCrate
                    }
                }, [e._v("Drogenkisten einlagern")])], 1)])])]) : e._e(), 2 == this.page ? t("div", {
                    staticClass: "base-body-munition"
                }, [t("div", {
                    staticClass: "base-body-munition-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Verbrauch")]), t("th", [e._v("Name")]), t("th", [e._v("Preis")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                })])]), t("tbody", e._l(e.mags, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "clickable"
                    }, [t("td", [e._v(e._s(a.a) + "x Pakete")]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(e.frakdata[a.id]) + "$ "), t("span", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.frakdata.l,
                            expression: "frakdata.l"
                        }],
                        staticClass: "mdi mdi-pencil",
                        on: {
                            click: function(t) {
                                return e.editPrice(a)
                            }
                        }
                    })]), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.buyMag(a)
                            }
                        }
                    }, [e._v("Kaufen")])], 1)])
                })), 0)])], 1), t("div", {
                    staticClass: "base-body-munition-stock"
                }, [e._v(" Munitionspakete: "), t("span", {
                    staticClass: "text-light"
                }, [e._v("Im Lager")]), e._v(" " + e._s(this.frakdata.m) + "x | "), t("span", {
                    staticClass: "text-light"
                }, [e._v("Benutzbar")]), e._v(" " + e._s(this.frakdata.k) + "x ")])]) : e._e(), 3 == this.page ? t("div", {
                    staticClass: "base-body-leader"
                }, [t("CoreBox", {
                    attrs: {
                        title: "Kistenpreis"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" Aktueller Preis: "), t("span", {
                    staticClass: "text-custom-success"
                }, [e._v(" " + e._s(this.frakdata.p) + " $ ")])]), t("div", {
                    staticClass: "content_1",
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("div", [e._v("Neuer Preis:")]), t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Preis"
                    },
                    model: {
                        value: e.price,
                        callback: function(t) {
                            e.price = e._n(t)
                        },
                        expression: "price"
                    }
                })], 1), t("div", {
                    staticClass: "footer",
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("CoreButton", {
                    staticClass: "w-100",
                    on: {
                        click: e.SaveDrugPrice
                    }
                }, [e._v("Bestätigen")])], 1)]), t("CoreBox", {
                    attrs: {
                        title: "Drogenlager"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" Aktueller Stand: ")]), t("div", {
                    staticClass: "text-center",
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [t("div", {
                    staticClass: "text-custom-success"
                }, [e._v(" " + e._s(this.frakdata.a) + " / " + e._s(this.frakdata.c) + " ")]), e._v(" Einheiten ")]), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("CoreButton", {
                    staticClass: "w-100",
                    on: {
                        click: e.StartSellMission
                    }
                }, [e._v("Drogenlager verkaufen")])], 1)]), t("CoreBox", {
                    staticClass: "storage",
                    attrs: {
                        title: "Munitionslieferung"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [t("CoreButton", {
                    staticClass: "w-45",
                    on: {
                        click: e.requestAmmoDelivery
                    }
                }, [e._v("anfordern")]), t("CoreButton", {
                    staticClass: "w-45",
                    on: {
                        click: e.storeAmmo
                    }
                }, [e._v("einlagern")])], 1)])], 1) : e._e(), 4 == this.page ? t("div", {
                    staticClass: "base-body-gangwar"
                }, [t("CoreBox", {
                    staticClass: "gangwar",
                    attrs: {
                        title: "Gangwar"
                    }
                }, [void 0 == this.frakdata.g ? t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" Aktuell ist kein Gangwar aktiv ")]) : e._e(), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [void 0 != this.frakdata.g ? t("CoreButton", {
                    on: {
                        click: e.enterGangwar
                    }
                }, [e._v(e._s(e.frakdata.g) + " betreten")]) : e._e()], 1)]), t("CoreBox", {
                    staticClass: "gangwar",
                    attrs: {
                        title: "Drop"
                    }
                }, [void 0 == this.frakdata.drop ? t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" Aktuell ist kein Multidrop aktiv ")]) : this.frakdata.drop ? t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v(" Ihr habt euch für den Multidrop bereits angemeldet ")]) : e._e(), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [0 == this.frakdata.drop ? t("CoreButton", {
                    on: {
                        click: e.participateDrop
                    }
                }, [e._v("An Multidrop teilnehmen")]) : e._e()], 1)])], 1) : e._e(), 5 == this.page ? t("div", {
                    staticClass: "base-body-equip"
                }, [t("div", {
                    staticClass: "base-body-equip-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Waffe")]), t("th", [e._v("Preis")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                })])]), t("tbody", [t("tr", [t("td", [e._v("Nahkampf")]), t("td", [e._v("500 $")]), t("td", {
                    staticClass: "text-center"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.buyEquip(0)
                        }
                    }
                }, [e._v("Kaufen")])], 1)]), t("tr", [t("td", [e._v("Schwere Pistole")]), t("td", [e._v("500 $")]), t("td", {
                    staticClass: "text-center"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.buyEquip(1)
                        }
                    }
                }, [e._v("Kaufen")])], 1)]), t("tr", [t("td", [e._v("Pistole MK 2")]), t("td", [e._v("2500 $")]), t("td", {
                    staticClass: "text-center"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.buyEquip(2)
                        }
                    }
                }, [e._v("Kaufen")])], 1)])])])], 1)]) : e._e()])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    attrs: {
                        message: "Neuer Preis:",
                        confirmText: "Anpassen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirmPrice
                    }
                }), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.promptBuy,
                        expression: "promptBuy"
                    }],
                    attrs: {
                        message: "Anzahl:",
                        confirmText: "Kaufen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirmBuy
                    }
                })], 1)
            }),
            Ri = [],
            Vi = {
                name: "Base",
                components: {
                    CorePrompt: Ee,
                    CoreInput: A,
                    CoreBox: ca,
                    CoreTable: ge,
                    CoreButtonGroup: te,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        frakdata: JSON.parse(this.data),
                        page: 1,
                        full: !1,
                        price: 0,
                        mags: [{
                            id: 0,
                            n: "9mm",
                            a: 2
                        }, {
                            id: 1,
                            n: ".36 cal",
                            a: 3
                        }, {
                            id: 2,
                            n: ".50 cal",
                            a: 4
                        }, {
                            id: 3,
                            n: "20 Gauge Slugshot",
                            a: 7
                        }, {
                            id: 4,
                            n: "12 Gauge Buckshot",
                            a: 5
                        }, {
                            id: 5,
                            n: ".45 ACP",
                            a: 5
                        }, {
                            id: 6,
                            n: "5,56 NATO",
                            a: 6
                        }, {
                            id: 7,
                            n: "7,62 NATO",
                            a: 6
                        }, {
                            id: 8,
                            n: ".50 BMG",
                            a: 8
                        }],
                        selectedMag: {},
                        prompt: !1,
                        promptBuy: !1
                    }
                },
                mounted: function() {
                    this.frakdata.a >= this.frakdata.c && (this.full = !0), this.full = !1
                },
                methods: {
                    isDrugStorageFull: function() {
                        return this.frakdata.a >= this.frakdata.c
                    },
                    SaveDrugPrice: function() {
                        this.price < 1 || (this.emitServer("SaveDrugPrice", this.price), this.hide())
                    },
                    SellDrugs: function() {
                        this.emitServer("SellDrugs"), this.hide()
                    },
                    SellDrugCrate: function() {
                        this.emitServer("SellDrugCrate"), this.hide()
                    },
                    StartSellMission: function() {
                        this.emitServer("StartSellDrugMission"), this.hide()
                    },
                    editPrice: function(e) {
                        this.prompt = !0, this.selectedMag = e
                    },
                    confirmPrice: function(e) {
                        this.prompt = !1, void 0 != e && (e = parseInt(e), isNaN(e) || e < 1 || e > 1e4 || (this.frakdata[this.selectedMag.id] = e, this.emitServer("SetMagPrice", this.selectedMag.id, e)))
                    },
                    buyMag: function(e) {
                        this.promptBuy = !0, this.selectedMag = e
                    },
                    confirmBuy: function(e) {
                        this.promptBuy = !1, void 0 != e && (e = parseInt(e), isNaN(e) || e < 1 || e > 1e3 || this.emitServer("BuyMag", this.selectedMag.id, e))
                    },
                    buyEquip: function(e) {
                        this.emitServer("BuyEquip", e)
                    },
                    requestAmmoDelivery: function() {
                        this.emitServer("RqAmmo"), this.hide()
                    },
                    storeAmmo: function() {
                        this.emitServer("StoreAmmo"), this.hide()
                    },
                    openBankAcount: function() {
                        this.emitServer("TeamBank"), this.hide()
                    },
                    enterGangwar: function() {
                        this.emitServer("OpenGangwarEnter"), this.hide()
                    },
                    participateDrop: function() {
                        this.emitServer("ParticipateDrop"), this.hide()
                    }
                }
            },
            Ei = Vi,
            Gi = (a("0705"), Object(d["a"])(Ei, ji, Ri, !1, null, null, null)),
            Wi = Gi.exports,
            Ki = function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    attrs: {
                        title: "FarmingMachine",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "farmingmachine"
                }, [t("div", {
                    staticClass: "farmingmachine-box"
                }, [t("div", {
                    staticClass: "farmingmachine-box-icon"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/tractor.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "farmingmachine-box-title"
                }, [e._v("Status: "), t("span", {
                    class: {
                        "text-success": e.isRunning,
                        "text-danger": !e.isRunning
                    }
                }, [e._v(e._s(this.isRunning ? "Aktiv" : "Inaktiv"))])])]), t("div", {
                    staticClass: "farmingmachine-box"
                }, [t("div", {
                    staticClass: "farmingmachine-box-title"
                }, [e._v("Treibstofftank")]), t("div", {
                    staticClass: "farmingmachine-box-description"
                }, [e._v(e._s(this.wdata.f) + " / " + e._s(this.wdata.mf) + " L")]), t("div", {
                    staticClass: "farmingmachine-box-action"
                }, [this.isRunning ? t("BaseButton", {
                    staticClass: "btn-danger",
                    attrs: {
                        disabled: !this.isRunning,
                        text: "Maschine stoppen"
                    },
                    on: {
                        click: function(t) {
                            return e.StopFarmingMachine()
                        }
                    }
                }) : t("BaseButton", {
                    staticClass: "bg-sibaui",
                    attrs: {
                        disabled: this.isRunning,
                        text: "Maschine starten"
                    },
                    on: {
                        click: function(t) {
                            return e.StartFarmingMachine()
                        }
                    }
                })], 1)])])])
            },
            Ui = [],
            $i = {
                name: "FarmingMachine",
                components: {
                    BaseButton: dt,
                    BaseInterface: ya
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        wdata: JSON.parse(this.data),
                        page: 1,
                        isRunning: !1
                    }
                },
                mounted: function() {
                    JSON.parse(this.data).r ? this.isRunning = !0 : this.isRunning = !1
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    StartFarmingMachine: function() {
                        this.emitServer("StartFarmingMachine", this.wdata.id), this.isRunning = !0, this.close()
                    },
                    StopFarmingMachine: function() {
                        this.emitServer("StopFarmingMachine", this.wdata.id), this.isRunning = !1, this.close()
                    }
                }
            },
            qi = $i,
            Ji = (a("0e39"), Object(d["a"])(qi, Ki, Ui, !1, null, "fa76657a", null)),
            Zi = Ji.exports,
            Xi = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Tickets",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "support"
                }, [t("div", {
                    staticClass: "support-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: e.openTabActive
                    },
                    on: {
                        click: e.displayOpenTickets
                    }
                }, [e._v("Offene Tickets")]), t("CoreButton", {
                    class: {
                        active: !e.openTabActive
                    },
                    on: {
                        click: e.displayOwnTickets
                    }
                }, [e._v("Eigene Tickets")]), t("CoreButton", {
                    staticClass: "admin-duty-button",
                    class: {
                        active: 0 == !this.admindata.a
                    },
                    on: {
                        click: function(t) {
                            return e.toggleAduty()
                        }
                    }
                }, [e._v(" " + e._s(0 == e.admindata.a ? "Admindienst aktivieren" : "Admindienst deaktivieren") + " ")])], 1)], 1), t("div", {
                    staticClass: "support-body"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Datum")]), t("th", [e._v("Name")]), t("th", [e._v("Nachricht")]), t("th", [e._v("Aktion")])])]), t("tbody", e._l(e.tickets, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(a.d))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.m))]), e.openTabActive ? t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-check",
                        attrs: {
                            title: "Ticket annehmen"
                        },
                        on: {
                            click: function(t) {
                                return e.assignTicket(a)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-delete",
                        attrs: {
                            title: "Ticket löschen"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteTicket(a)
                            }
                        }
                    })]) : t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-eye",
                        attrs: {
                            title: "Spieler spectaten"
                        },
                        on: {
                            click: function(t) {
                                return e.spectateToTicket(a)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-account-arrow-right",
                        attrs: {
                            title: "Zum Spieler porten"
                        },
                        on: {
                            click: function(t) {
                                return e.goToTicket(a)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-delete",
                        attrs: {
                            title: "Ticket löschen"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteTicket(a)
                            }
                        }
                    })])])
                })), 0)])], 1)])])
            },
            Yi = [],
            Qi = {
                name: "Support",
                components: {
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        admindata: JSON.parse(this.data),
                        openTickets: JSON.parse(this.data).d,
                        assignedTickets: JSON.parse(this.data).dd,
                        tickets: JSON.parse(this.data).d,
                        openTabActive: !0
                    }
                },
                methods: {
                    displayOpenTickets: function() {
                        this.openTabActive = !0, this.tickets = this.openTickets
                    },
                    displayOwnTickets: function() {
                        this.assignedTickets.length ? this.tickets = this.assignedTickets : this.dev ? (this.assignedTickets = this.openTickets, this.tickets = this.openTickets) : this.emitServer("GetAssignedTickets"), this.openTabActive = !1
                    },
                    assignTicket: function(e) {
                        var t = this.tickets.indexOf(e);
                        this.tickets.splice(t, 1), this.openTickets = this.tickets, this.emitServer("AssignTicket", e.n);
                        this.emitServer("GetAssignedTickets"), this.openTabActive = !1
                    },
                    deleteTicket: function(e) {
                        var t = this.tickets.indexOf(e);
                        this.tickets.splice(t, 1), this.openTabActive ? this.openTickets = this.tickets : this.assignedTickets = this.tickets, this.emitServer("DeleteTicket", e.n)

                    },
                    goToTicket: function(e) {
                        this.emitServer("GoToTicket", e.n), this.hide()
                    },
                    spectateToTicket: function(e) {
                        this.emitServer("SpectateToTicket", e.n), this.hide()
                    },
                    toggleAduty: function() {
                        if (this.admindata.a == 0) {
                           this.admindata.a = 1;
                        } else {
                           this.admindata.a = 0;
                        }
                        this.emitServer("ToggleAduty");
                    },
                    SendAssignedTickets: function(e) {
                        this.assignedTickets = JSON.parse(e), this.tickets = this.assignedTickets
                    },
                    AddAssignedTicket: function(e) {
                        this.assignedTickets.push(JSON.parse(e))
                    }
                },
                created: function() {
                    this.addEvent("SendAssignedTickets", this.SendAssignedTickets), this.addEvent("AddAssignedTicket", this.AddAssignedTicket)
                }
            },
            es = Qi,
            ts = (a("fccf"), Object(d["a"])(es, Xi, Yi, !1, null, "547dc624", null)),
            as = ts.exports,
            is = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-sm core-interface-sm-dynamic-height",
                    attrs: {
                        title: "Aus dem Fahrzeug werfen",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "eject"
                }, [t("div", {
                    staticClass: "eject-even"
                }, [t("div", {
                    staticClass: "eject-passengers"
                }, e._l(e.oddSeats, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "eject-passenger"
                    }, [t("div", [t("span", {
                        staticClass: "mdi mdi-human-child",
                        class: {
                            "text-custom-success": a.s,
                            "text-custom-danger": !1 === a.s
                        },
                        on: {
                            click: function(t) {
                                return e.ejectPlayer(a)
                            }
                        }
                    })])])
                })), 0)]), t("div", {
                    staticClass: "eject-image"
                }, [t("svg", {
                    staticStyle: {
                        "enable-background": "new 0 0 47.032 47.032"
                    },
                    attrs: {
                        version: "1.1",
                        id: "Capa_1",
                        xmlns: "http://www.w3.org/2000/svg",
                        "xmlns:xlink": "http://www.w3.org/1999/xlink",
                        x: "0px",
                        y: "0px",
                        viewBox: "0 0 47.032 47.032",
                        "xml:space": "preserve"
                    }
                }, [t("g", [t("path", {
                    attrs: {
                        d: "M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188zM32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805z"
                    }
                }), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g")]), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g")])]), t("div", {
                    staticClass: "eject-odd"
                }, [t("div", {
                    staticClass: "eject-passengers"
                }, e._l(e.evenSeats, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "eject-passenger"
                    }, [t("div", [t("span", {
                        staticClass: "mdi mdi-human-child",
                        class: {
                            "text-custom-success": a.s,
                            "text-custom-danger": !1 === a.s
                        },
                        on: {
                            click: function(t) {
                                return e.ejectPlayer(a)
                            }
                        }
                    })])])
                })), 0)])])])
            },
            ss = [],
            ns = {
                name: "Eject",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        ejectdata: JSON.parse(this.data)
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    ejectPlayer: function(e) {
                        !1 !== e.s && (this.emitServer("EjectExecute", e.i), this.close())
                    }
                },
                computed: {
                    evenSeats: function() {
                        return this.ejectdata.d.filter((function(e) {
                            return e.i % 2 === 0
                        }))
                    },
                    oddSeats: function() {
                        return this.ejectdata.d.filter((function(e) {
                            return e.i % 2 !== 0
                        }))
                    }
                }
            },
            rs = ns,
            os = (a("4867"), Object(d["a"])(rs, is, ss, !1, null, "3dc42aa4", null)),
            cs = os.exports,
            ls = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: this.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "health-insurance"
                }, [t("div", {
                    staticClass: "health-insurance-logo-word"
                }, [3 == this.data.i ? t("img", {
                    attrs: {
                        src: "images/interface/insurancehealth/MorsMutualInsurance.png",
                        alt: ""
                    }
                }) : t("img", {
                    attrs: {
                        src: "images/interface/insurancehealth/AI.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "health-insurance-details"
                }, [t("div", {
                    staticClass: "health-insurance-details-logo"
                }, [3 == this.data.i ? t("img", {
                    attrs: {
                        src: "images/interface/insurancehealth/MMI.png",
                        alt: ""
                    }
                }) : t("img", {
                    attrs: {
                        src: "images/interface/insurancehealth/AuguryInsurance.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "health-insurance-details-box"
                }, [t("div", {
                    staticClass: "health-insurance-details-box-content"
                }, [t("div", {
                    staticClass: "health-insurance-details-box-content-title"
                }, [e._v("Preis")]), t("div", {
                    staticClass: "health-insurance-details-box-content-description"
                }, [e._v(e._s(e.data.p) + " $ pro Abrechnung")])]), t("div", {
                    staticClass: "health-insurance-details-box-content"
                }, [t("div", {
                    staticClass: "health-insurance-details-box-content-title"
                }, [e._v("Vorteil")]), t("div", {
                    staticClass: "health-insurance-details-box-content-description"
                }, [e._v(e._s(e.data.s) + " Min. schneller respawnen")])])])]), t("div", {
                    staticClass: "health-insurance-confirmation"
                }, [1 == e.data.o ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.buyInsuranceHealth(e.invdata.i)
                        }
                    }
                }, [e._v("Versicherung abschließen")]) : e.data.o == e.invdata.i ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.cancelInsuranceHealth()
                        }
                    }
                }, [e._v("Versicherung kündigen")]) : t("p", [e._v(" Du bist bereits bei einer Krankenversicherung angemeldet."), t("br"), e._v(" Kündige diese zuerst damit du einen neuen Vertrag abschließen kannst. ")])], 1)])])
            },
            us = [],
            ms = {
                name: "InsuranceHealth",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    buyInsuranceHealth: function(e) {
                        this.emitServer("BuyInsuranceHealth", e), this.hide()
                    },
                    cancelInsuranceHealth: function() {
                        this.emitServer("CancelInsuranceHealth"), this.hide()
                    }
                }
            },
            ds = ms,
            hs = (a("9af7"), Object(d["a"])(ds, ls, us, !1, null, "e2459f32", null)),
            _s = hs.exports,
            ps = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        back: "",
                        title: "Dokumente",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "licences"
                }, e._l(e.licensedata, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "licences-licence"
                    }, [t("img", {
                        staticClass: "clickable",
                        attrs: {
                            src: "images/hud/licences/" + a.i + "_0_0.png",
                            alt: ""
                        },
                        on: {
                            click: function(t) {
                                return e.emitServer("ShowLicence", a.i)
                            }
                        }
                    })])
                })), 0)])
            },
            vs = [],
            fs = {
                name: "Licences",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        licensedata: JSON.parse(this.data)
                    }
                },
                methods: {}
            },
            bs = fs,
            gs = (a("defd"), Object(d["a"])(bs, ps, vs, !1, null, "bfa90f30", null)),
            ys = gs.exports,
            Cs = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: (3 === this.data.t || 4 === this.data.t ? "Business " : "") + "Kaufvertrag für " + this.data.s,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "sales-contract"
                }, [t("div", {
                    staticClass: "sales-contract-box"
                }, [t("div", {
                    staticClass: "sales-contract-box-icon"
                }, [t("span", {
                    staticClass: "mdi mdi-handshake"
                })]), t("div", {
                    staticClass: "sales-contract-box-details"
                }, [t("div", {
                    staticClass: "sales-contract-box-details-title"
                }, [e._v(" " + e._s(e.data.s) + " ")]), e._v(" Gebühren für den Verkäufer : " + e._s(e.data.tax) + " "), t("div", {
                    staticClass: "sales-contract-box-details-input-box"
                }, [t("div", {
                    staticClass: "sales-contract-box-details-input-box-box"
                }, [t("div", {
                    staticClass: "sales-contract-box-details-input-box-title"
                }, [this.data.b ? t("span", [e._v("Verkäufer:")]) : 3 === this.data.t ? t("span", [e._v("Mitarbeiter:")]) : t("span", [e._v("Käufer:")])]), t("div", {
                    staticClass: "sales-contract-box-details-input-box-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        disabled: this.data.b,
                        value: this.data.b ? this.data.n : ""
                    },
                    model: {
                        value: e.buyer,
                        callback: function(t) {
                            e.buyer = t
                        },
                        expression: "buyer"
                    }
                })], 1)]), t("div", {
                    staticClass: "sales-contract-box-details-input-box-box"
                }, [t("div", {
                    staticClass: "sales-contract-box-details-input-box-title"
                }, [e._v(" Preis: ")]), t("div", {
                    staticClass: "sales-contract-box-details-input-box-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        disabled: this.data.b,
                        value: this.data.b ? this.data.p : ""
                    },
                    model: {
                        value: e.price,
                        callback: function(t) {
                            e.price = t
                        },
                        expression: "price"
                    }
                })], 1)])])])]), t("div", {
                    staticClass: "sales-contract-confirmation"
                }, [this.data.b ? t("CoreButton", {
                    on: {
                        click: e.finalSignContract
                    }
                }, [e._v("Unterschreiben")]) : t("CoreButton", {
                    on: {
                        click: e.signContract
                    }
                }, [e._v("Unterschreiben")])], 1)])])
            },
            ks = [],
            ws = {
                name: "SalesContract",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        buyer: "",
                        price: ""
                    }
                },
                methods: {
                    signContract: function() {
                        var e = this.price.trim();
                        e && (isNaN(e) || (this.emitServer("CreateSalesContract", this.data.t, this.data.i, this.buyer, parseInt(e)), this.hide()))
                    },
                    finalSignContract: function() {
                        this.emitServer("FinalSalesContract"), this.hide()
                    },
                    close: function() {
                        this.emitServer("CancelSalesContract"), this.hide()
                    }
                },
                created: function() {
                    this.data.b && (this.buyer = this.data.n, this.price = this.data.p)
                }
            },
            Ss = ws,
            Ms = (a("0959"), Object(d["a"])(Ss, Cs, ks, !1, null, "17885b9c", null)),
            xs = Ms.exports,
            Ps = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: JSON.parse(this.data).n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "weapon-factory"
                }, [t("div", {
                    staticClass: "weapon-factory-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 1 === e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 1
                        }
                    }
                }, [e._v("Bestellung")]), t("CoreButton", {
                    class: {
                        active: 2 === e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 2
                        }
                    }
                }, [e._v("Abholung (" + e._s(e.prodQueue.length) + ")")]), 2 === e.page ? t("CoreButton", {
                    staticClass: "btn-success",
                    on: {
                        click: e.collectAll
                    }
                }, [e._v("Alle abholen")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "weapon-factory-body"
                }, [1 == e.page ? t("div", {
                    staticClass: "weapon-factory-orders"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Gegenstand")]), t("th", [e._v("Name")]), t("th", [e._v("Preis")]), t("th", [e._v("Benötigt")]), t("th", [e._v("Dauer")]), t("th", {
                    attrs: {
                        width: "10%"
                    }
                }, [e._v("Aktion")])])]), t("tbody", e._l(JSON.parse(this.data).rot, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [t("img", {
                        staticClass: "image",
                        attrs: {
                            src: "images/inventoy/items/" + a.image,
                            alt: ""
                        }
                    })]), t("td", [e._v(" " + e._s(a.a) + "x " + e._s(a.n) + " ")]), t("td", [e._v(e._s(a.p) + " $")]), t("td", e._l(a.req, (function(a) {
                        return t("div", {
                            key: a.i,
                            staticStyle: {
                                display: "flex",
                                "align-items": "center"
                            }
                        }, [t("img", {
                            staticClass: "subitem",
                            attrs: {
                                src: "images/inventoy/items/" + a.image,
                                alt: ""
                            }
                        }), e._v(" " + e._s(a.a) + "x " + e._s(a.n) + " ")])
                    })), 0), t("td", [e._v(e._s(a.m) + " Minuten")]), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.buildWeapon(a.i)
                            }
                        }
                    }, [e._v("Herstellen")])], 1)])
                })), 0)])], 1) : e._e(), 2 == e.page ? t("div", {
                    staticClass: "weapon-factory-pickup"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Objekt")]), t("th", [e._v("Name")]), t("th", [e._v("Status")])])]), t("tbody", e._l(this.prodQueue, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [t("img", {
                        staticClass: "image",
                        attrs: {
                            src: "images/inventoy/items/" + a.image,
                            alt: ""
                        }
                    })]), t("td", [e._v(" " + e._s(a.n) + " ")]), t("td", [a.m > 0 ? t("span", [t("span", {
                        staticClass: "mdi mdi-spin mdi-reload table-button-icon"
                    }), e._v(" " + e._s(a.m) + " Minuten ")]) : a.m < 0 ? t("span", [t("span", {
                        staticClass: "mdi mdi-timer-sand table-button-icon"
                    }), e._v(" Warteschlange ")]) : t("div", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.takeWeapon(a)
                            }
                        }
                    }, [e._v("Entnehmen")])], 1)])])
                })), 0)])], 1) : e._e()])])])
            },
            Ts = [],
            Fs = {
                name: "WeaponFactory",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        wdata: JSON.parse(this.data),
                        prodQueue: JSON.parse(this.data).prod,
                        itemData: null,
                        page: 1,
                        lastInteract: 0
                    }
                },
                methods: {
                    buildWeapon: function(e) {
                        var t = Date.now();
                        t - this.lastInteract > 150 && (this.lastInteract = t, this.emitServer("BuildWeapon", this.wdata.i, e))
                    },
                    takeWeapon: function(e) {
                        var t = Date.now();
                        if (t - this.lastInteract > 150) {
                            this.lastInteract = t;
                            var a = this.prodQueue.indexOf(e);
                            this.prodQueue.splice(a, 1), this.emitServer("TakeWeapon", this.wdata.i, e.i)
                        }
                    },
                    UpdateFactoryQueue: function(e) {
                        this.prodQueue = JSON.parse(e)
                    },
                    collectAll: function() {
                        var e = Date.now();
                        e - this.lastInteract > 150 && (this.lastInteract = e, this.emitServer("CollectAllFactoryItems", this.wdata.i))
                    }
                },
                created: function() {
                    var e = this;
                    e.addEvent("UpdateFactoryQueue", e.UpdateFactoryQueue)
                
                }
            },
            Bs = Fs,
            Is = (a("1578"), Object(d["a"])(Bs, Ps, Ts, !1, null, null, null)),
            As = Is.exports,
            Ds = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "cctv-computer"
                }, [t("CoreInterface", {
                    staticClass: "core-interface-cctv",
                    attrs: {
                        title: "CCTV System",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "cctv-computer-body"
                }, [t("CoreButton", {
                    on: {
                        click: e.PreviousCCTV
                    }
                }, [e._v("Vorherige Kamera")]), t("CoreButton", {
                    staticClass: "ml-auto",
                    on: {
                        click: e.NextCCTV
                    }
                }, [e._v("Nächste Kamera")])], 1)])], 1)
            },
            Ns = [],
            Os = {
                name: "CCTVComputer",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                mounted: function() {
                    this.emit("ToggleVehicleHudIfInVehicle", !1), this.emit("StartCam", this.data.d, this.data.cx, this.data.cy, this.data.cz, this.data.r)
                },
                methods: {
                    close: function() {
                        this.emit("CloseCam"), this.emit("ToggleVehicleHudIfInVehicle", !0), this.hide()
                    },
                    NextCCTV: function() {
                        this.emit("NextCam")
                    },
                    PreviousCCTV: function() {
                        this.emit("PreviousCam")
                    }
                }
            },
            Ls = Os,
            Hs = (a("1155"), Object(d["a"])(Ls, Ds, Ns, !1, null, "466e7de8", null)),
            zs = Hs.exports,
            js = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Respawn"
                    }
                }, [t("div", {
                    staticClass: "respawn-timer"
                }, [e._v(e._s(e.loginTimeMessage))]), t("div", {
                    staticClass: "respawn"
                }, e._l(e.data.data, (function(a) {
                    return t("div", {
                        key: a.i + "-" + a.p,
                        staticClass: "respawn-item"
                    }, [3 != a.i ? t("img", {
                        staticClass: "clickable",
                        attrs: {
                            src: "images/respawn/" + a.i + ".png",
                            alt: ""
                        },
                        on: {
                            click: function(t) {
                                return e.Respawn(a)
                            }
                        }
                    }) : t("img", {
                        staticClass: "clickable",
                        attrs: {
                            src: "images/teams/" + a.p + ".png",
                            alt: ""
                        },
                        on: {
                            click: function(t) {
                                return e.Respawn(a)
                            }
                        }
                    }), t("div", {
                        staticClass: "respawn-item-name"
                    }, [e._v(" " + e._s(e.getString(a)) + " ")])])
                })), 0)])
            },
            Rs = [],
            Vs = {
                name: "Respawn",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        loginTime: 180,
                        timeInterval: null
                    }
                },
                methods: {
                    Respawn: function(e) {
                        this.emitServer("RespawnPlayer", e.i, e.p), clearInterval(this.timeInterval), this.timeInterval = null, this.hide()
                    },
                    getString: function(e) {
                        switch (e.i) {
                            case 1:
                            case 2:
                                return "Haus " + e.p;
                            case 3:
                            case 4:
                                return e.n;
                            case 5:
                                return "Business"
                        }
                    },
                    loginTimeChange: function() {
                        this.loginTime--, 0 == this.loginTime && (clearInterval(this.timeInterval), this.timeInterval = null, this.emitServer("RespawnPlayer", 99, 99))
                    }
                },
                mounted: function() {
                    this.timeInterval = setInterval(this.loginTimeChange, 1e3)
                },
                computed: {
                    loginTimeMessage: function() {
                        var e = parseInt(this.loginTime / 60),
                            t = this.loginTime % 60;
                        return t >= 10 ? "0" + e + ":" + t : "0" + e + ":0" + t
                    }
                }
            },
            Es = Vs,
            Gs = (a("b7c6"), Object(d["a"])(Es, js, Rs, !1, null, "d86a1782", null)),
            Ws = Gs.exports,
            Ks = function() {
                var e = this;
                e._self._c;
                return e._m(0)
            },
            Us = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "coma-screen"
                }, [t("div", {
                    staticClass: "coma-screen-box"
                }, [t("div", {
                    staticClass: "coma-title"
                }, [e._v("Du liegst im Koma")]), t("div", {
                    staticClass: "coma-subtitle"
                }, [e._v("Der Notfallmediziner wird sich um dich kümmern")])])])
            }],
            $s = {
                name: "Coma",
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                mounted: function() {
                    this.emit("SetComa", !0)
                },
                methods: {}
            },
            qs = $s,
            Js = (a("a80d"), Object(d["a"])(qs, Ks, Us, !1, null, "3dc6b5fd", null)),
            Zs = Js.exports,
            Xs = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    attrs: {
                        slot: "computer-header-buttons"
                    },
                    slot: "computer-header-buttons"
                }, [t("button", {
                    on: {
                        click: function(t) {
                            return e.switchControlCenter()
                        }
                    }
                }, [1 == this.cdata.oo ? t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("Leitstelle abgeben")]) : t("span", {
                    staticClass: "text-custom-success"
                }, [e._v("Leitstelle übernehmen")])]), 5 == e.teamData.i ? t("button", {
                    on: {
                        click: e.sendGovMessage
                    }
                }, [e._v("Öffentliche Nachricht")]) : e._e(), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.govPrompt,
                        expression: "govPrompt"
                    }],
                    attrs: {
                        message: "LSMC Nachricht:",
                        confirmText: "Absenden",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirmGovMessage
                    }
                })], 1), t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [null != e.teamData ? t("img", {
                    attrs: {
                        src: "images/teams/" + e.teamData.i + ".png",
                        alt: ""
                    }
                }) : e._e()]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Service Übersicht ")])]), null != e.teamData ? t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v(e._s(e.teamData.s))]), t("span", [e._v(e._s(e.pageTitle))])]) : e._e(), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(1, "Offene Services")
                        }
                    }
                }, [t("a", {}, [e._v("Offene Services")])]), t("li", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(2, "Eigene Services")
                        }
                    }
                }, [t("a", {}, [e._v("Eigene Services")])]), t("li", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(3, "Alle Services")
                        }
                    }
                }, [t("a", {}, [e._v("Alle Services")])]), null == this.teamData || 3 != this.teamData.i && 7 != this.teamData.i && 6 != this.teamData.i && 15 != this.teamData.i ? e._e() : t("li", {
                    on: {
                        click: e.openVehicleRegistrationOverview
                    }
                }, [t("a", {}, [e._v("Fahrzeuganmeldungen")])]), 1 == this.cdata.oo ? t("li", {
                    on: {
                        click: function(t) {
                            return e.emitServer("ControlMap")
                        }
                    }
                }, [t("a", {}, [e._v("Leitstellenkarte")])]) : e._e()]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [t("div", {
                    staticClass: "computer-body-content-box-services"
                }, [e.page >= 1 ? t("div", {
                    staticClass: "servicelist-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Datum")]), t("th", {
                    attrs: {
                        width: "17%"
                    }
                }, [e._v("Name")]), t("th", [e._v("Nachricht")]), 3 == e.page ? t("th", {
                    attrs: {
                        width: "17%"
                    }
                }, [e._v("Bearbeiter")]) : e._e(), t("th", {
                    attrs: {
                        width: "8%"
                    }
                }, [e._v("Distanz")]), t("th", {
                    attrs: {
                        width: "16%"
                    }
                }, [e._v("Aktion")])])]), t("tbody", e._l(e.services, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(a.d))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.m))]), 3 == e.page ? t("td", [e._v(e._s(a.a))]) : e._e(), t("td", [e._v(e._s(a.di))]), t("td", {
                        staticClass: "text-center"
                    }, [1 == e.page ? t("span", [t("span", {
                        staticClass: "mdi mdi-check clickable",
                        on: {
                            click: function(t) {
                                return e.assignService(a)
                            }
                        }
                    })]) : e._e(), 0 != a.p ? t("span", {
                        staticClass: "mdi mdi-phone clickable",
                        on: {
                            click: function(t) {
                                return e.emitServer("Call", a.p)
                            }
                        }
                    }) : e._e(), t("span", {
                        staticClass: "mdi mdi-map-marker clickable",
                        on: {
                            click: function(t) {
                                return e.setMarkerForService(a)
                            }
                        }
                    }), e.page <= 2 ? t("span", {
                        staticClass: "mdi mdi-close clickable",
                        on: {
                            click: function(t) {
                                return e.deleteService(a)
                            }
                        }
                    }) : e._e()])])
                })), 0)])], 1) : e._e()])])])
            },
            Ys = [],
            Qs = (a("7db0"), {
                name: "ServiceList",
                components: {
                    CorePrompt: Ee,
                    CoreTable: ge,
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        cdata: JSON.parse(this.data),
                        openServices: JSON.parse(this.data).d,
                        assignedServices: [],
                        allServices: [],
                        services: JSON.parse(this.data).ad,
                        page: 1,
                        pageTitle: "Offene Services",
                        teamData: JSON.parse(this.data).t,
                        govPrompt: !1
                    }
                },
                methods: {
                    switchControlCenter: function() {
                        switch (this.cdata.oo) {
                            case 0:
                                this.cdata.oo = 1;
                                break;
                            case 1:
                                this.cdata.oo = 0;
                                break;
                            case 2:
                                this.cdata.oo = 1;
                                break
                        }
                        this.emitServer("Control")
                    },
                    assignService: function(e) {
                        var t = this.services.indexOf(e);
                        this.services.splice(t, 1), this.openServices = this.services, this.setMarkerForService(e), this.emitServer("AssignService", e.i)
                    },
                    setMarkerForService: function(e) {
                        fuckThistwo("setPlayerGpsMarker", e.x, e.y)
                    },
                    deleteService: function(e) {
                        var t = this.services.indexOf(e);
                        if (this.services.splice(t, 1), 1 == this.page) this.openServices = this.services;
                        else {
                            if (2 != this.page) return;
                            this.assignedServices = this.services
                        }
                        this.emitServer("DeleteService", e.i)
                    },
                    SendAssignedServices: function(e) {
                        this.assignedServices = JSON.parse(e), this.services = this.assignedServices
                    },
                    AddAssignedService: function(e) {
                        this.assignedServices.push(e)
                    },
                    SendAllServices: function(e) {
                        this.allServices = JSON.parse(e), this.services = this.allServices
                    },
                    ResponseServiceTeam: function(e) {
                        this.teamData = this.teamData.find((function(t) {
                            return t.i == e
                        }))
                    },
                    sendGovMessage: function() {
                        5 == this.teamData.i && (this.govPrompt = !0)
                    },
                    confirmGovMessage: function(e) {
                        void 0 !== e ? "" != e.trim() && (this.emitServer("GovMsg", 1, e), this.govPrompt = !1) : this.govPrompt = !1
                    },
                    changePage: function(e, t) {
                        switch (this.page = e, this.pageTitle = t, this.page) {
                            case 1:
                                this.services = this.openServices;
                                break;
                            case 2:
                                this.assignedServices.length ? this.services = this.assignedServices : this.dev ? (this.assignedServices = this.openServices, this.services = this.openServices) : this.emitServer("GetAssignedServices");
                                break;
                            case 3:
                                this.allServices.length ? this.services = this.assignedServices : this.dev ? (this.allServices = this.openServices, this.services = this.openServices) : this.emitServer("GetAllServices");
                                break
                        }
                    },
                    openVehicleRegistrationOverview: function() {
                        this.hide(), fuckThis("openWindow", "VehicleRegistrationOverview")
                    }
                },
                created: function() {
                    var e = this;
             
                    e.changePage(1);
                                    e.addEvent("ResponseServiceTeam", e.ResponseServiceTeam), e.emitServer("ResponseServiceTeam");
                                    e.addEvent("SendAssignedServices", e.SendAssignedServices), e.addEvent("AddAssignedService", e.AddAssignedService), e.addEvent("SendAllServices", e.SendAllServices);
                },
                mounted: function() {}
            }),
            en = Qs,
            tn = (a("3141"), Object(d["a"])(en, Xs, Ys, !1, null, null, null)),
            an = tn.exports,
            sn = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-colorpicker",
                    attrs: {
                        title: "Fahrzeug Lackierung",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "color-picker"
                }, [t("div", {
                    staticClass: "color-picker-header"
                }, [t("CoreButtonGroup", [0 == this.data.t ? t("CoreButton", {
                    class: {
                        active: this.isPrimary
                    },
                    on: {
                        click: e.openPrimary
                    }
                }, [e._v("Primär")]) : e._e(), 0 == this.data.t ? t("CoreButton", {
                    class: {
                        active: !this.isPrimary
                    },
                    on: {
                        click: e.openSecondary
                    }
                }, [e._v("Sekundär")]) : e._e(), 1 == this.data.t ? t("CoreButton", {
                    class: {
                        "text-custom-success": 1 == this.data.t
                    },
                    on: {
                        click: e.openNeon
                    }
                }, [e._v("Neon")]) : e._e(), 2 == this.data.t ? t("CoreButton", {
                    class: {
                        "text-custom-success": 2 == this.data.t
                    },
                    on: {
                        click: e.openTires
                    }
                }, [e._v("Reifenqualm")]) : e._e()], 1)], 1), t("div", {
                    staticClass: "color-picker-body"
                }, [0 == this.data.t ? t("div", {
                    staticClass: "color-picker-body-box"
                }, [t("div", {
                    staticClass: "color-picker-body-box-picker"
                }, [t("div", {
                    attrs: {
                        id: "parent"
                    }
                })]), t("div", {
                    staticClass: "color-picker-body-box-details"
                }, [t("div", [e._v("Lackierungsart:")]), t("div", [e._v(e._s(this.data.m ? "matt" : "metallic"))]), t("CoreButton", {
                    on: {
                        click: e.changeMatte
                    }
                }, [e._v("Lackierungsart ändern")])], 1)]) : e._e(), 1 == this.data.t ? t("div", {
                    staticClass: "color-picker-body-box"
                }, [t("div", {
                    staticClass: "colorpicker-content-box-picker"
                }, [t("div", {
                    attrs: {
                        id: "parent"
                    }
                })])]) : e._e(), 2 == this.data.t ? t("div", {
                    staticClass: "color-picker-body-box"
                }, [t("div", {
                    staticClass: "colorpicker-content-box-picker"
                }, [t("div", {
                    attrs: {
                        id: "parent"
                    }
                })])]) : e._e()])])])
            },
            nn = [],
            rn = {
                name: "ColorPicker",
                components: {
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        picker: null,
                        isPrimary: !0,
                        primaryColor: null,
                        secondaryColor: null,
                        page: 0
                    }
                },
                methods: {
                    changeMatte: function() {
                        this.data.m = !this.data.m;
                        var e = null;
                        e = this.isPrimary ? this.primaryColor : this.secondaryColor, this.emitServer("MatteColor", this.data.m, this.isPrimary, e[0], e[1], e[2])
                    },
                    openPrimary: function() {
                        this.isPrimary = !0, this.secondaryColor = this.picker.color._rgba, null != this.primaryColor && this.picker.setColor(this.primaryColor)
                    },
                    openSecondary: function() {
                        this.isPrimary = !1, this.primaryColor = this.picker.color._rgba, null != this.secondaryColor && this.picker.setColor(this.secondaryColor)
                    },
                    openNeon: function() {
                        this.page = 2
                    },
                    openTires: function() {
                        this.page = 3
                    },
                    colorVehicle: function(e) {
                        this.isPrimary ? this.primaryColor = e._rgba : this.secondaryColor = e._rgba, 0 == this.data.t ? this.emitServer("VehColor", this.isPrimary, e.rgba[0], e.rgba[1], e.rgba[2]) : 2 == this.data.t ? this.emitServer("TireSmokeColor", e.rgba[0], e.rgba[1], e.rgba[2]) : this.emitServer("NeonColor", e.rgba[0], e.rgba[1], e.rgba[2])
                    },
                    doneVehicle: function() {
                        0 == this.data.t ? this.emitServer("SaveVehColor") : 2 == this.data.t ? this.emitServer("SaveTireSmokeColor") : this.emitServer("SaveNeonColor"), this.hide()
                    },
                    close: function() {
                        this.emitServer("CancelColoring"), this.hide()
                    }
                },
                created: function() {
                    this.$nextTick((function() {
                        var e = document.querySelector("#parent");
                        this.picker = new Te["a"]({
                            parent: e,
                            popup: !1,
                            editor: !0,
                            alpha: !1
                        }), this.picker.openHandler();
                        var t = this;
                        this.picker.onChange = function(e) {
                            t.colorVehicle(e)
                        }, this.picker.onDone = function(e) {
                            t.doneVehicle(e)
                        }, this.picker.setColor(this.data.c1.split(";"), !0), 0 == this.data.t && (this.primaryColor = this.data.c1.split(";"), this.secondaryColor = this.data.c2.split(";"))
                    }))
                }
            },
            on = rn,
            cn = (a("afd7"), Object(d["a"])(on, sn, nn, !1, null, null, null)),
            ln = cn.exports,
            un = function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    attrs: {
                        title: "Universität von Los Santos",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "attribute-table"
                }, [t("BaseTable", {
                    staticClass: "table table-borderless text-white"
                }, [t("thead", [t("tr", [t("th", [e._v("Attribut")]), t("th", [e._v("Stufe")])])]), t("tbody", [t("tr", [t("td", [t("span", {
                    staticClass: "mdi mdi-dumbbell"
                }), t("span", [e._v(" Stärke")])]), t("td", [t("span", {
                    staticClass: "mdi mdi-minus",
                    on: {
                        click: function(t) {
                            return e.DecreaseAttribute(0)
                        }
                    }
                }), t("span", [e._v(e._s(this.data.s))]), t("span", {
                    staticClass: "mdi mdi-plus",
                    on: {
                        click: function(t) {
                            return e.IncreaseAttribute(0)
                        }
                    }
                }), t("span", [e._v(" (+" + e._s(this.data.s - this.str_fix) + ")")])])]), t("tr", [t("td", [t("span", {
                    staticClass: "mdi mdi-hospital"
                }), t("span", [e._v(" Vitalität")])]), t("td", [t("span", {
                    staticClass: "mdi mdi-minus",
                    on: {
                        click: function(t) {
                            return e.DecreaseAttribute(1)
                        }
                    }
                }), t("span", [e._v(" " + e._s(this.data.v))]), t("span", {
                    staticClass: "mdi mdi-plus",
                    on: {
                        click: function(t) {
                            return e.IncreaseAttribute(1)
                        }
                    }
                }), t("span", [e._v(" (+" + e._s(this.data.v - this.vit_fix) + ")")])])]), t("tr", [t("td", [t("span", {
                    staticClass: "mdi mdi-hand-left"
                }), t("span", [e._v(" Geschicklichkeit")])]), t("td", [t("span", {
                    staticClass: "mdi mdi-minus",
                    on: {
                        click: function(t) {
                            return e.DecreaseAttribute(2)
                        }
                    }
                }), t("span", [e._v(" " + e._s(this.data.d))]), t("span", {
                    staticClass: "mdi mdi-plus",
                    on: {
                        click: function(t) {
                            return e.IncreaseAttribute(2)
                        }
                    }
                }), t("span", [e._v(" (+" + e._s(this.data.d - this.dex_fix) + ")")])])]), t("tr", [t("td", [t("span", {
                    staticClass: "mdi mdi-brain"
                }), t("span", [e._v(" Intelligenz")])]), t("td", [t("span", {
                    staticClass: "mdi mdi-minus",
                    on: {
                        click: function(t) {
                            return e.DecreaseAttribute(3)
                        }
                    }
                }), t("span", [e._v(" " + e._s(this.data.i))]), t("span", {
                    staticClass: "mdi mdi-plus",
                    on: {
                        click: function(t) {
                            return e.IncreaseAttribute(3)
                        }
                    }
                }), t("span", [e._v(" (+" + e._s(this.data.i - this.int_fix) + ")")])])]), t("tr", [t("td"), t("td", [t("span", [e._v(" Freie Punkte: " + e._s(this.data.f))])])])])])], 1), t("div", {
                    staticClass: "attribute-actions"
                }, [t("BaseButton", {
                    attrs: {
                        text: "Speichern"
                    },
                    on: {
                        click: function(t) {
                            return e.SaveAttributes()
                        }
                    }
                }), t("BaseButton", {
                    attrs: {
                        text: "Attribute neuverteilen"
                    },
                    on: {
                        click: function(t) {
                            return e.Reskill()
                        }
                    }
                })], 1)])
            },
            mn = [],
            dn = {
                name: "Attribute",
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        str_fix: "",
                        vit_fix: "",
                        dex_fix: "",
                        int_fix: "",
                        default_attribute: 0,
                        maximum_attributes: 0
                    }
                },
                created: function() {
                    this.str_fix = this.data.s, this.vit_fix = this.data.v, this.dex_fix = this.data.d, this.int_fix = this.data.i, this.maximum_attributes += this.data.s, this.maximum_attributes += this.data.v, this.maximum_attributes += this.data.d, this.maximum_attributes += this.data.i, this.maximum_attributes += this.data.f
                },
                methods: {
                    Reskill: function() {
                        this.data.f = this.maximum_attributes, this.str_fix = this.default_attribute, this.vit_fix = this.default_attribute, this.dex_fix = this.default_attribute, this.int_fix = this.default_attribute, this.data.s = this.str_fix, this.data.v = this.vit_fix, this.data.d = this.dex_fix, this.data.i = this.int_fix
                    },
                    SaveAttributes: function() {
                        this.str_fix = this.data.s, this.vit_fix = this.data.v, this.dex_fix = this.data.d, this.int_fix = this.data.i, this.emitServer("SaveAttribtues", this.data.s, this.data.v, this.data.d, this.data.i)
                    },
                    IncreaseAttribute: function(e) {
                        switch (e) {
                            case 0:
                                this.data.f > 0 && (this.data.s++, this.data.f--);
                                break;
                            case 1:
                                this.data.f > 0 && (this.data.v++, this.data.f--);
                                break;
                            case 2:
                                this.data.f > 0 && (this.data.d++, this.data.f--);
                                break;
                            case 3:
                                this.data.f > 0 && (this.data.i++, this.data.f--);
                                break
                        }
                    },
                    DecreaseAttribute: function(e) {
                        switch (e) {
                            case 0:
                                this.data.s > this.str_fix && (this.data.s--, this.data.f++);
                                break;
                            case 1:
                                this.data.v > this.vit_fix && (this.data.v--, this.data.f++);
                                break;
                            case 2:
                                this.data.d > this.dex_fix && (this.data.d--, this.data.f++);
                                break;
                            case 3:
                                this.data.i > this.int_fix && (this.data.i--, this.data.f++);
                                break
                        }
                    }
                }
            },
            hn = dn,
            _n = (a("584a"), Object(d["a"])(hn, un, mn, !1, null, "51d443f2", null)),
            pn = _n.exports,
            vn = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-code",
                    attrs: {
                        title: "Sicherheitssystem",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "code"
                }, [t("div", {
                    staticClass: "code-feedback"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    class: {
                        "text-custom-danger": e.isWrong,
                        "text-custom-success": e.success
                    },
                    attrs: {
                        placeholder: "CODE"
                    },
                    model: {
                        value: e.codeInput,
                        callback: function(t) {
                            e.codeInput = e._n(t)
                        },
                        expression: "codeInput"
                    }
                })], 1), t("div", {
                    staticClass: "code-numbers"
                }, [e._l(9, (function(a) {
                    return t("CoreButton", {
                        key: a,
                        on: {
                            click: function(t) {
                                return e.AddNumber(a)
                            }
                        }
                    }, [e._v(" " + e._s(a) + " ")])
                })), t("CoreButton", {
                    on: {
                        click: e.ClearNumbers
                    }
                }, [e._v("C")]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.AddNumber(0)
                        }
                    }
                }, [e._v("0")]), t("CoreButton", {
                    on: {
                        click: e.CheckCode
                    }
                }, [e._v("OK")])], 2)])])
            },
            fn = [],
            bn = {
                name: "Code",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        codeInput: "",
                        attempts: 0,
                        success: 0,
                        isWrong: 0
                    }
                },
                created: function() {},
                methods: {
                    AddNumber: function(e) {
                        1 != this.success && this.codeInput.length < this.data.c.toString().length && (this.codeInput = this.codeInput + e.toString())
                    },
                    ClearNumbers: function() {
                        1 != this.success && (this.isWrong = 0, this.codeInput = "")
                    },
                    CheckCode: function() {
                        1 != this.success && (this.data.c == parseInt(this.codeInput) ? (this.success = 1, this.emitServer("StaatsbankCode", this.data.t, parseInt(this.codeInput)), this.codeInput = "CODE ACCEPTED") : (this.isWrong = 1, this.attempts++, this.attempts >= 3 && (this.emitServer("StaatsbankCode", this.data.t, parseInt(this.codeInput)), this.hide()), this.codeInput = "WRONG"))
                    }
                }
            },
            gn = bn,
            yn = (a("6490"), Object(d["a"])(gn, vn, fn, !1, null, "6a984306", null)),
            Cn = yn.exports,
            kn = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "login"
                }, [e._m(0), t("div", {
                    staticClass: "login-box"
                }, [t("div", {
                    staticClass: "login-box-helper"
                }, [t("div", {
                    staticClass: "login-time"
                }, [t("div", {
                    staticClass: "login-time-title"
                }, [e._v("Verbleibende Zeit")]), t("div", {
                    staticClass: "login-time-amount"
                }, [e._v(e._s(e.loginTimeMessage))])]), t("div", {
                    staticClass: "login-details text-center"
                }, [t("div", {
                    staticClass: "login-details-header"
                }, [t("div", {
                    staticClass: "ldh-welcome"
                }, [e._v("Herzlich Willkommen")]), t("div", {
                    staticClass: "ldh-username"
                }, [e._v(this.logindata.n.replaceAll('"', ''))])]), t("div", {
                    staticClass: "login-details-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        maxlength: "16",
                        type: "password"
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.send.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.input,
                        callback: function(t) {
                            e.input = t
                        },
                        expression: "input"
                    }
                })], 1), t("div", {
                    staticClass: "login-details-confirmation"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: e.input.length < 1
                    },
                    on: {
                        click: e.send
                    }
                }, [e._v("Einloggen")])], 1)])])]), e._m(1)])
            },
            wn = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "login-logo text-center"
                }, [t("img", {
                    staticClass: "sibaui",
                    attrs: {
                        src: "images/loginLogo.png",
                        alt: "Sibaui Logo"
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "login-logo2"
                }, [t("dfsdfdf", {
                    staticClass: "dsh",
                })])
            }],
            Sn = {
                name: "Login",
                components: {
                    CoreButton: x,
                    CoreInput: A
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        logindata: JSON.parse(this.data),
                        input: "",
                        loginText: "",
                        wrongLoginCounter: 0,
                        loginTime: 180,
                        loginInterval: null,
                        audio: null,
                    }
                },
                methods: {
                 
                    send: function() {
                        this.input.length > 0 && (this.emitServer("TryLogin", this.input), clearInterval(this.loginInterval),     this.audio.pause(),           this.loginInterval = null, this.input = "")
                    },
                    loginTimeChange: function() {
                        this.loginTime--, 0 == this.loginTime && this.emitServer("LoginTimeout")
                    },
                    WrongLogin: function(e) {
                        this.wrongLoginCounter = e
                    }
                },
                created: function() {
                  var randomItem = this.logindata.d[Math.floor(Math.random()*this.logindata.d.length)]

                  this.loginText = randomItem.Text;

                  this.audio = new Audio(randomItem.Url);
                  this.audio.volume = 0.2;
                  this.audio.play();
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    e.addEvent("WrongLogin", e.WrongLogin), e.emit("HidePlayerHud", !0);
                                case 2:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                },
                mounted: function() {
                    this.loginInterval = setInterval(this.loginTimeChange, 1e3)
                },
                computed: {
                    loginTimeMessage: function() {
                        var e = parseInt(this.loginTime / 60),
                            t = this.loginTime % 60;
                        return 0 != e ? e + ":" + t : t
                    }
                }
            },
            Mn = Sn,
            xn = (a("94b9"), Object(d["a"])(Mn, kn, wn, !1, null, "078df0e5", null)),
            Pn = xn.exports,
            Tn = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-self",
                    attrs: {
                        title: "Eigenaktion",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "self-interface-header"
                }, [t("div", {
                    staticClass: "self-interface-header-group"
                }, [t("div", {
                    staticClass: "self-interface-header-group-tabs"
                }, [t("div", {
                    staticClass: "self-interface-header-group-tabs-tab"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    staticClass: "active"
                }, [e._v("Kleidung")]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.emitServer("OwnDoc")
                        }
                    }
                }, [e._v("Dokumente")]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.emitServer("OpenTeam")
                        }
                    }
                }, [e._v("Fraktionübersicht")]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.emitServer("OpenBusiness")
                        }
                    }
                }, [e._v("Businessübersicht")]), t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.emitServer("OpenVehOver")
                        }
                    }
                }, [e._v("Fahrzeugübersicht")])], 1)], 1)]), t("div", {
                    staticClass: "self-interface-header-group-subtabs"
                }, [t("div", {
                    staticClass: "btn-group"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    staticClass: "btn",
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 1
                        }
                    }
                }, [e._v("Kleidung")]), t("CoreButton", {
                    staticClass: "btn",
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            e.page = 2
                        }
                    }
                }, [e._v("Training")])], 1)], 1)])])]), t("div", {
                    staticClass: "self-interface-body"
                }, [1 == e.page ? t("div", {
                    staticClass: "self-interface-body-body"
                }, [t("div", {
                    staticClass: "body-row"
                }, [t("div", {
                    staticClass: "body-row-row"
                }, [t("div", {
                    class: {
                        active: e.clothes[0]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(0)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/cap.png",
                        alt: "Hut"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[11]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(11)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/pullover.png",
                        alt: "Oberteil"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[4]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(4)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/hose.png",
                        alt: "Hose"
                    }
                })])]), t("div", {
                    staticClass: "body-row-row"
                }, [t("div", {
                    class: {
                        active: e.clothes[1]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(1)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/maske.png",
                        alt: "Maske"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[8]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(8)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/tshirt.png",
                        alt: "Unterteil"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[6]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(6)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/schuhe.png",
                        alt: "Schuhe"
                    }
                })])])]), t("div", {
                    staticClass: "body-row"
                }, [t("div", {
                    staticClass: "body-row-row"
                }, [t("div", {
                    class: {
                        active: e.clothes[-1]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(-1)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/sonnenbrille.png",
                        alt: "Brille"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[-6]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(-6)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/armbanduhr.png",
                        alt: "Uhr"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[7]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(7)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/accessoirs.png",
                        alt: "Accessoirs"
                    }
                })])]), t("div", {
                    staticClass: "body-row-row"
                }, [t("div", {
                    class: {
                        active: e.clothes[-2]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(-2)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/ohrringe.png",
                        alt: "Ohrringe"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[-7]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(-7)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/armband.png",
                        alt: "Armband"
                    }
                })]), t("div", {
                    class: {
                        active: e.clothes[10]
                    },
                    on: {
                        click: function(t) {
                            return e.changeCloth(10)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/selfmenu/decals.png",
                        alt: "Decals"
                    }
                })])])])]) : t("div", {
                    staticClass: "self-interface-body-training"
                }, [t("div", {
                    staticClass: "self-interface-body-training-item",
                    on: {
                        click: function(t) {
                            return e.fitness(1)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "images/interface/selfmenu/joggen.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "self-interface-body-training-item",
                    on: {
                        click: function(t) {
                            return e.fitness(2)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "images/interface/selfmenu/liegestutze.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "self-interface-body-training-item",
                    on: {
                        click: function(t) {
                            return e.fitness(3)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "images/interface/selfmenu/situps.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "self-interface-body-training-item",
                    on: {
                        click: function(t) {
                            return e.fitness(4)
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "images/interface/selfmenu/yoga.png",
                        alt: ""
                    }
                })])])])])
            },
            Fn = [],
            Bn = {
                ringtoneId: "",
                volume: 25,
                funkFavorites: [],
                wallpaperId: 1,
                smsMute: !1,
                callMute: !1,
                beepMute: !1,
                contacts: {},
                contactList: [],
                phoneHistory: [],
                smsChatList: [],
                smsChats: {},
                marketPrices: null,
                marketTag: 0,
                marketLastUpdate: null,
                ownNumber: 0,
                activeCall: 0,
                activeCallTime: -1,
                activeCallInterval: null,
                gpsList: null,
                gpsListLastUpdate: null,
                clothes: {
                    1: !1,
                    4: !0,
                    6: !0,
                    7: !0,
                    8: !0,
                    11: !0,
                    0: !0,
                    "-1": !0,
                    "-2": !0,
                    "-6": !0,
                    "-7": !0
                }
            },
            In = {
                name: "Self",
                components: {
                    CoreButtonGroup: te,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        clothes: Bn.clothes,
                        page: 1,
                        lastInteract: 0,
                        sex: 0
                    }
                },
                methods: {
                    changeCloth: function(e) {
                        var t = this,
                            a = Date.now();
                        a - this.lastInteract > 150 && (this.lastInteract = a, this.clothes[e] = !this.clothes[e], 1 === e ? (this.emitServer("ToggleCloth", e), setTimeout((function() {
                            t.emitServer("ToggleCloth", e)
                        }), 200)) : this.emitServer("ToggleCloth", e))
                    },
                    fitness: function(e) {
                        this.emitServer("DoFitness", e), this.hide()
                    },
                    toggleIsWearingCloth: function(e) {
                        this.clothes[e] = !this.clothes[e]
                    },
                    setSex: function(e) {
                        this.sex = e
                    }
                },
                created: function() {
                    this.addEvent("ToggleIsWearingCloth", this.toggleIsWearingCloth), this.addEvent("ReturnSex", this.setSex), this.emit("GetSex")
                }
            },
            An = In,
            Dn = (a("f87a"), Object(d["a"])(An, Tn, Fn, !1, null, null, null)),
            Nn = Dn.exports,
            On = function() {
                var e = this,
                    t = e._self._c;
                return t("BaseInterface", {
                    staticClass: "text-align-center",
                    attrs: {
                        title: "Forensischer Bericht",
                        icon: "school",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("span", [e._v(" Am Tatort wurde ein Beweismittel (" + e._s(this.data.a) + ") von " + e._s(this.data.n) + " (" + e._s(this.data.i) + ") gefunden. Typ: " + e._s(this.data.t) + " ")])])
            },
            Ln = [],
            Hn = {
                name: "ForensischerBericht",
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                created: function() {},
                methods: {}
            },
            zn = Hn,
            jn = Object(d["a"])(zn, On, Ln, !1, null, "a1063e68", null),
            Rn = jn.exports,
            Vn = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Schwarzmarkt",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "blackmarket"
                }, [e.itemData ? t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "25%"
                    }
                }, [e._v("Gegenstand")]), t("th", [e._v("Preis")]), t("th", [e._v("Verfügbar")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v(" ")])])]), t("tbody", e._l(this.data.d, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [t("img", {
                        attrs: {
                            src: "images/inventoy/items/" + a.i + ".png",
                            alt: ""
                        }
                    })]), t("td", [e._v(" " + e._s(a.p) + " $ ")]), t("td", [e._v(" " + e._s(a.a) + " Stk. ")]), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.selectItem(a)
                            }
                        }
                    }, [e._v("Kaufen")])], 1)])
                })), 0), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    attrs: {
                        message: "Anzahl",
                        confirmText: "Kaufen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.buyItem,
                        abort: function(t) {
                            e.prompt = !1
                        }
                    }
                })], 1) : e._e()], 1)])
            },
            En = [],
            Gn = {
                name: "Blackmarket",
                components: {
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterface: J,
                    CorePrompt: Ee
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1,
                        selectedItem: null,
                        itemData: null
                    }
                },
                methods: {
                    selectItem: function(e) {
                        this.prompt = !0, this.selectedItem = e
                    },
                    buyItem: function(e) {
                        if (e) {
                            var t = e.trim();
                            if (!t) return;
                            if (!isNaN(t) && t <= this.selectedItem.a) return this.emitServer("BlackmarketBuy", this.data.i, this.selectedItem.i, e), void this.hide()
                        }
                        this.selectedItem = null, this.prompt = !1
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (!e.dev) {
                                        t.next = 3;
                                        break
                                    }
                                    return e.itemData = {
                                        0: {
                                            name: "",
                                            maxStack: 0,
                                            weight: 0
                                        },
                                        1: {
                                            name: "Schutzweste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        2: {
                                            name: "Verbandskasten",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        3: {
                                            name: "Weed",
                                            maxStack: 100,
                                            weight: 100,
                                            customDataText: "Weed (Reinheitsgrad {0}%)"
                                        },
                                        4: {
                                            name: "Fahrzeugschlüssel",
                                            maxStack: 1,
                                            weight: 100,
                                            customDataText: "Schlüssel von {0} ({1})"
                                        },
                                        5: {
                                            name: "Diamant",
                                            maxStack: 10,
                                            weight: 100
                                        },
                                        6: {
                                            name: "Verbandskoffer",
                                            maxStack: 1,
                                            weight: 8e3
                                        },
                                        7: {
                                            name: "Joint",
                                            maxStack: 100,
                                            weight: 100
                                        },
                                        8: {
                                            name: "Wassereimer",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        9: {
                                            name: "Schaufel",
                                            maxStack: 1,
                                            weight: 3e3
                                        },
                                        10: {
                                            name: "Dünger",
                                            maxStack: 3,
                                            weight: 100
                                        }
                                    }, t.abrupt("return");
                                case 3:
                                    return t.next = 5, fetch("http://assets/SibauiRP_Assets/data/items.json");
                                case 5:
                                    return t.next = 7, t.sent.json();
                                case 7:
                                    e.itemData = t.sent;
                                case 8:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            },
            Wn = Gn,
            Kn = (a("cdf5"), Object(d["a"])(Wn, Vn, En, !1, null, null, null)),
            Un = Kn.exports,
            $n = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Jobcenter",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "joboverview"
                }, [t("div", {
                    staticClass: "joboverview-header"
                }, [t("CoreButtonGroup", [t("CoreButton", [e._v("Aktueller Job: " + e._s(e.jobdata.i > 0 ? e.jobs[e.jobdata.i] : e.jobs[-1 * e.jobdata.i]))]), t("CoreButton", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: this.jobdata.i > 0,
                        expression: "this.jobdata.i > 0"
                    }],
                    staticClass: "danger",
                    on: {
                        click: e.cancelJob
                    }
                }, [e._v("Job kündigen")])], 1)], 1), t("div", {
                    staticClass: "joboverview-body"
                }, [t("div", {
                    staticClass: "joboverview-body-row"
                }, e._l(e.jobdata.data, (function(a) {
                    return t("CoreItemBox", {
                        key: a.i
                    }, [t("div", {
                        attrs: {
                            slot: "details-title"
                        },
                        slot: "details-title"
                    }, [e._v(e._s(a.n))]), t("div", {
                        attrs: {
                            slot: "image"
                        },
                        slot: "image"
                    }, [t("span", {
                        staticClass: "mdi mdi-information text-white",
                        on: {
                            click: function(t) {
                                return e.showJobInfo(a)
                            }
                        }
                    })])])
                })), 1), e.currentJob ? t("div", {
                    staticClass: "joboverview-body-actions mt-5"
                }, [t("div", [t("h3", [e._v(e._s(e.currentJob.n))]), t("div", {
                    staticClass: "job-description"
                }, [e._v(e._s(e.currentJob.d))])]), t("CoreButton", {
                    staticClass: "buy",
                    on: {
                        click: e.showGPS
                    }
                }, [e._v("Im GPS markieren")]), t("CoreButton", {
                    staticClass: "buy",
                    on: {
                        click: e.acceptJob
                    }
                }, [e._v("Job annehmen")])], 1) : e._e()])]), t("CorePopup", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.popup,
                        expression: "popup"
                    }],
                    attrs: {
                        header: "Möchtest du deinen Job wirklich kündigen?",
                        confirmButton: "Ja",
                        cancelButton: "Nein"
                    },
                    on: {
                        confirm: e.cancelJobConfirm
                    }
                })], 1)
            },
            qn = [],
            Jn = {
                name: "JobOverview",
                components: {
                    CoreItemBox: oe,
                    CoreButtonGroup: te,
                    CoreButton: x,
                    CorePopup: qe,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        currentJob: null,
                        popup: !1,
                        jobs: ["Arbeitslos", "Busfahrer", "Müllmann", "Farmer", "Trucker", "Postbote"]
                    }
                },
                methods: {
                    acceptJob: function() {
                        this.emitServer("AcceptJob", this.currentJob.i), this.hide()
                    },
                    showGPS: function() {
                        this.emit("SetGPS", this.currentJob.x, this.currentJob.y), this.hide()
                    },
                    showJobInfo: function(e) {
                        this.currentJob = e
                    },
                    cancelJob: function() {
                        this.popup = !0
                    },
                    cancelJobConfirm: function(e) {
                        e && (this.emitServer("CancelJob"), this.hide()), this.popup = !1
                    }
                }
            },
            Zn = Jn,
            Xn = (a("131c"), Object(d["a"])(Zn, $n, qn, !1, null, null, null)),
            Yn = Xn.exports,
            Qn = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("div", {
                    staticClass: "wrapper"
                }, [t("BaseInterface", {
                    staticClass: "fishing-interface",
                    attrs: {
                        title: "Angeln"
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("BaseButton", {
                    staticClass: "fishing-button",
                    attrs: {
                        text: "Beenden"
                    },
                    on: {
                        click: function(t) {
                            return e.close()
                        }
                    }
                })], 1)], 1), 1 == e.isActive ? t("div", {
                    style: "position: absolute; top: " + e.top + "rem;left: " + e.left + "rem"
                }, [t("img", {
                    staticStyle: {
                        height: "32px",
                        width: "32px"
                    },
                    attrs: {
                        src: "images/fishing-hook.png"
                    },
                    on: {
                        click: function(t) {
                            return e.catchFish()
                        }
                    }
                })]) : e._e()])
            },
            er = [],
            tr = {
                name: "Fishing",
                components: {
                    BaseButton: dt,
                    BaseInterface: ya
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        top: 1,
                        left: 1,
                        isActive: false
                    }
                },
                methods: {
                    close: function() {
                        this.emitServer("StopFishing"), this.hide()
                    },
                    catchFish: function() {
                        this.isActive = false, this.emitServer("CatchFish")
                    },
                    changePosition: function() {
                        var e = this;
                        setTimeout((function() {
                            e.isActive = false, e.top = 50 * Math.random(), e.left = 80 * Math.random() + 10, setTimeout((function() {
                                e.isActive = true
                            }), 7500), e.changePosition(), console.log("FISHING")
                        }), 3e4 * Math.random() + 3e4)
                    }
                },
                mounted: function() {
                    this.changePosition()
                }
            },
            ar = tr,
            ir = (a("2453"), a("20f2"), Object(d["a"])(ar, Qn, er, !1, null, "36cc5614", null)),
            sr = ir.exports,
            nr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-animmenu",
                    attrs: {
                        title: e.showAnims ? "Animationen" : "Gehstile",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "anim-menu"
                }, [t("div", {
                    staticClass: "anim-menu-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: e.showAnims
                    },
                    on: {
                        click: function(t) {
                            e.showAnims = !0
                        }
                    }
                }, [e._v("Animationen")]), t("CoreButton", {
                    class: {
                        active: !e.showAnims
                    },
                    on: {
                        click: function(t) {
                            e.showAnims = !1
                        }
                    }
                }, [e._v("Gehstile")]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: function(t) {
                            fuckThis(e.showAnims ? "PlayNoAnim" : "PlayNoSet")
                        }
                    }
                }, [e._v(e._s(e.showAnims ? "Animation stoppen" : "Gehstil stoppen"))])], 1)], 1), t("div", {
                    staticClass: "anim-menu-body"
                }, [t("div", {
                    staticClass: "anim-menu-body-search"
                }, [e.showAnims ? t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Animation suchen"
                    },
                    model: {
                        value: e.searchAnim,
                        callback: function(t) {
                            e.searchAnim = t
                        },
                        expression: "searchAnim"
                    }
                }) : e._e(), e.showAnims ? e._e() : t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Gehstile suchen"
                    },
                    model: {
                        value: e.searchAnim,
                        callback: function(t) {
                            e.searchAnim = t
                        },
                        expression: "searchAnim"
                    }
                })], 1), t("div", {
                    staticClass: "anim-menu-body-table"
                }, [t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showAnims,
                        expression: "showAnims"
                    }],
                    staticClass: "anim-menu-body-table-animations"
                }, [t("div", {
                    staticClass: "animations-categories"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Kategorie")])])]), t("tbody", e._l(e.filteredCategories, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.selectCat(a)
                            }
                        }
                    }, [t("td", {
                        class: {
                            active: null != e.selectedCat && e.selectedCat.name == a.name
                        }
                    }, [e._v(e._s(a.name))])])
                })), 0)])], 1), t("div", {
                    staticClass: "animations-animations"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "10%"
                    }
                }), t("th", [e._v("Animation")])])]), t("tbody", e._l(e.anims, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable"
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-cog main-button-icon",
                        on: {
                            click: function(t) {
                                return e.saveAnim(a)
                            }
                        }
                    })]), t("td", {
                        on: {
                            click: function(t) {
                                return e.selecAnim(a)
                            }
                        }
                    }, [e._v(" " + e._s(a[0]) + " ")])])
                })), 0)])], 1)]), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: !e.showAnims,
                        expression: "!showAnims"
                    }],
                    staticClass: "anim-menu-body-table-walkstyles"
                }, [t("div", {
                    staticClass: "animations-walkstyles"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Gehstile")])])]), t("tbody", e._l(e.sets, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        on: {
                            click: function(t) {
                                return e.playSet(a[1])
                            }
                        }
                    }, [t("td", [e._v(e._s(a[0]))])])
                })), 0)])], 1)])])])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    attrs: {
                        message: "Welcher Slot? (1-15)",
                        confirmText: "Speichern",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirmAnim
                    }
                })], 1)
            },
            rr = [],
            or = {
                name: "AnimMenu",
                components: {
                    CoreInput: A,
                    CorePrompt: Ee,
                    CoreTable: ge,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        selectedCat: null,
                        selectedAnims: [],
                        showAnims: !0,
                        searchAnim: "",
                        prompt: !1,
                        selectedAnim: null,
                        categories: [{
                            name: "Körperhaltung",
                            anims: [
                                ["Gürtel anfassen 1", "amb@code_human_police_investigate@base", "base", 1],
                                ["Gürtel anfassen 2", "amb@code_human_wander_idles_cop@male@static", "static", 1],
                                ["Knien", "amb@medic@standing@kneel@base", "base", 1],
                                ["Langsam hinknien", "amb@medic@standing@kneel@enter", "enter", 2],
                                ["Hocke", "amb@medic@standing@tendtodead@base", "base", 1],
                                ["Betrunken", "amb@world_human_bum_standing@drunk@idle_a", "idle_c", 1],
                                ["Unruhig", "amb@world_human_bum_standing@twitchy@base", "base", 1],
                                ["Crossedarms (weiblich)", "amb@world_human_hang_out_street@female_arms_crossed@enter", "enter", 2],
                                ["Crossedarms (männlich)", "amb@world_human_hang_out_street@male_c@enter", "enter", 2],
                                ["Rucksack festhalten", "amb@world_human_hiker_standing@male@base", "base", 1],
                                ["Entsetzt", "amb@world_human_prostitute@hooker@enter", "enter", 1],
                                ["Gelangweilt warten (weiblich)", "friends@fra@ig_1", "base_idle", 1],
                                ["Hände an Gürtel und umsehen", "anim@heists@prison_heiststation@cop_reactions", "cop_a_reaction", 1],
                                ["Hände zusammen", "amb@world_human_stand_guard@male@enter", "enter", 2],
                                ["Statue", "amb@world_human_statue@enter", "enter", 2],
                                ["Arsch kratzen", "anim@mp_freemode_return@f@idle", "idle_a", 1],
                                ["Traurig", "amb@world_human_bum_standing@depressed@base", "base", 1],
                                ["Traurig 2", "amb@world_human_bum_standing@depressed@idle_a", "idle_a", 1],
                                ["Hand auf der Hüfte - Kontrollieren", "anim@arena@celeb@flat@solo@no_props@", "smug_b_player_b", 1],
                                ["Hand auf der Hüfte - Kommt schon Jungs", "anim@arena@celeb@flat@solo@no_props@", "taunt_b_player_b", 1]
                            ]
                        }, {
                            name: "Essen / Trinken",
                            anims: [
                                ["Bier halten Weiblich", "amb@code_human_wander_drinking@beer@female@base", "static", 1],
                                ["Bier halten Männlich", "amb@code_human_wander_drinking@beer@male@base", "static", 1],
                                ["Donut essen Weiblich", "amb@code_human_wander_eating_donut@female@idle_a", "idle_b", 1],
                                ["Donut essen Männlich", "amb@code_human_wander_eating_donut@male@idle_a", "idle_c", 1],
                                ["Cafe trinken", "amb@world_human_drinking@coffee@male@idle_a", "idle_a", 1],
                                ["Essen ", "mp_player_inteat@burger", "mp_player_int_eat_burger", 1]
                            ]
                        }, {
                            name: "Anlehnen",
                            anims: [
                                ["Café trinken", "amb@world_human_leaning@female@coffee@idle_a", "idle_c", 1],
                                ["Anlehnen rauchen (weiblich)", "amb@world_human_leaning@female@smoke@idle_a", "idle_a", 1],
                                ["Anlehnen Hand hoch", "amb@world_human_leaning@female@wall@back@hand_up@idle_a", "idle_a", 1],
                                ["Anlehnen Ellenbogen halten (weiblich)", "amb@world_human_leaning@female@wall@back@holding_elbow@enter", "enter_front", 2],
                                ["Anlehnen Bier trinken", "amb@world_human_leaning@male@wall@back@beer@idle_a", "idle_a", 1],
                                ["Anlehnen linkes Bein", "amb@world_human_leaning@male@wall@back@foot_up@enter", "enter_back", 2],
                                ["Anlehnen Rücken", "amb@world_human_leaning@male@wall@back@hands_together@enter", "enter_back", 2],
                                ["Anlehnen Ellenbogen halten (männlich)", "amb@world_human_leaning@male@wall@back@legs_crossed@enter", "enter_front", 2],
                                ["Anlehnen telefonieren", "amb@world_human_leaning@male@wall@back@mobile@base", "base", 1],
                                ["Anlehnen rauchen (männlich)", "amb@world_human_leaning@male@wall@back@smoking@idle_a", "idle_d", 1],
                                ["Betrunken anlehnen ", "misscarstealfinale", "packer_idle_1_trevor", 1],
                                ["An die Wand lehnen mit Fuß", "amb@world_human_leaning@male@wall@back@foot_up@base", "base", 1],
                                ["Anlehnen - Handy scrollen", "missarmenian1leadinoutarm_1_ig_14_leadinout", "leadin_loop", 1],
                                ["Anlehnen - Schüchtern warten (weiblich)", "missarmenian1movieextras", "smallgroup_loop_f_a", 1],
                                ["Anlehnen chillig", "amb@prop_human_bum_shopping_cart@male@enter", "enter", 2],
                                ["Anlehnen Protzig", "switch@michael@sitting_on_car_bonnet", "sitting_on_car_bonnet_loop", 1],
                                ["Chillig abstützen", "rcmnigel1aig_1", "base_02_willie", 1],
                                ["Arrogant anlehnen", "armenian_1_int-0", "a_m_y_cyclist_01-0", 1],
                                ["Am Auto anlehnen", "misscarstealfinalecar_5_ig_1", "waitloop_lamar", 1],
                                ["An Bar lehnen", "misscarsteal1car_1_ext_leadin", "base_driver1", 1],
                                ["An Wand lehnen (weiblich)", "misscarsteal1leadin", "molly_idle_03", 1]
                            ]
                        }, {
                            name: "Geste",
                            anims: [
                                ["Mittelfinger in die Menge mit Diva Haltung (weiblich)", "anim@mp_player_intcelebrationfemale@finger", "finger", 1],
                                ["Freuen mit Shakyhands (weiblich)", "anim@mp_player_intcelebrationfemale@jazz_hands", "jazz_hands", 1],
                                ["Faustknochen crushen (weiblich)", "anim@mp_player_intcelebrationfemale@knuckle_crunch", "knuckle_crunch", 1],
                                ["Facepalm 2", "anim@mp_player_intcelebrationmale@face_palm", "face_palm", 1],
                                ["Fickt euch alle", "anim@mp_player_intcelebrationmale@finger", "finger", 1],
                                ["Daumen hoch mit schmackes", "anim@mp_player_intcelebrationmale@thumbs_up", "thumbs_up", 1],
                                ["Wie die Queen winken", "anim@mp_player_intcelebrationmale@wave", "wave", 1],
                                ["RocknRoll Finger mit Laufen", "anim@mp_player_intincarrockbodhi@ds@", "idle_a", 1],
                                ["Salutieren (Kurz)", "anim@mp_player_intincarsalutestd@ds@", "enter", 1],
                                ["Ist der Finger oben", "anim@mp_player_intincarthumbs_upstd@ds@", "enter", 1],
                                ["Luftkuss", "anim@mp_player_intselfieblow_kiss", "exit", 1],
                                ["Intensiver Luftkuss", "mini@hookers_sp", "idle_a", 1],
                                ["OK", "anim@mp_player_intselfiedock", "idle_a", 1],
                                ["Mittelfinger Standard laufend", "anim@mp_player_intselfiethe_bird", "idle_a", 1],
                                ["Doppelter Mittelfinger", "anim@mp_player_intupperfinger", "idle_a_fp", 1],
                                ["Finger knacken ", "anim@mp_player_intupperknuckle_crunch", "idle_a", 1],
                                ["Shhhh vorm Mund", "anim@mp_player_intuppershush", "idle_a_fp", 1],
                                ["Beide Daumen hoch!", "anim@mp_player_intupperthumbs_up", "idle_a", 1],
                                ["Rüber winken ", "friends@frl@ig_1", "waive_b_lamar", 1],
                                ["Com'on keine Zeit ", "friends@frm@ig_1", "greeting_idle_b", 1],
                                ["Genau Du!", "gestures@f@standing@casual", "gesture_point", 1],
                                ["Puh schwitze ich", "mini@tennis@female", "_react_ball_out_lt", 1],
                                ["Komm her", "missarmenian1ig_13", "lamar_idle_02", 1],
                                ["Beeil dich!", "missarmenian1ig_13", "lamar_idle_03", 1],
                                ["Was los?!", "missarmenian1ig_13", "lamar_idle_01", 1],
                                ["Gekränkt", "missarmenian1leadinoutarmenian_1_mcs_1_leadinout", "_leadout_simeon", 1],
                                ["Erklären", "missarmenian1movieextras", "smallgroup_loop_m_b", 1],
                                ["Aufregen", "missarmenian2", "lamar_impatient_a", 1],
                                ["Zurückfallen ", "misschinese2_bank1", "reaction_forward_big_intro_a", 1],
                                ["Aggresiv schauen", "misscarsteal1leadinout@i_fought_the_law", "micarrive_leadin_loop_devin", 1],
                                ["Ups", "anim@mp_player_intincarblow_kissbodhi@ds@", "enter", 1],
                                ["Nackenschelle antäuschen", "amb@world_human_statue@base", "base", 1],
                                ["Kopfkratzen ", "rcmepsilonism8", "think", 1],
                                ["Weiß ich nicht", "gestures@m@standing@casual", "gesture_shrug_hard", 1],
                                ["Nein danke!", "gestures@m@standing@casual", "gesture_no_way", 1],
                                ["Komm her", "gestures@m@standing@casual", "gesture_bring_it_on", 1],
                                ["Mit dem Finger zeigen - Ja richtig", "gestures@m@standing@casual", "gesture_i_will", 1],
                                ["Mit dem Finger auf sich selbst zeigen", "gestures@m@standing@casual", "gesture_me", 1],
                                ["Geh weg!", "gestures@m@standing@casual", "gesture_bye_hard", 1],
                                ["Na komm her", "gestures@m@standing@casual", "gesture_come_here_soft", 1],
                                ["Ach", "gestures@m@standing@casual", "gesture_displeased", 1],
                                ["Ja man ", "gestures@miss@fra_0", "franklin_fkn0_cjad_01_g1", 1],
                                ["Komm mit ", "gestures@miss@fra_0", "lamar_fkn0_cjaa_01_g1", 1],
                                ["Betteln und um Gnade flehen", "random@domestic", "f_distressed_loop", 1],
                                ["Husten ", "timetable@gardener@smoking_joint", "idle_cough", 1],
                                ["Rauchen - Joint rauchen", "timetable@gardener@smoking_joint", "smoke_idle", 1],
                                ["Drohende Faust", "misscommon@response", "screw_you", 1],
                                ["Ohh Verdammt", "misscommon@response", "curse", 1],
                                ["Ohh Junge", "misscommon@response", "numbnuts", 1],
                                ["Na los jetzt", "misscommon@response", "threaten", 1],
                                ["Oh man", "misscommon@response", "damn", 1],
                                ["Hier Landen ", "missfbi2extra", "direct_heli_loop_dave", 1],
                                ["Ahnungslos am Kopf kratzen", "clothingtie", "check_out_a", 1],
                                ["Fick dich ", "mp_player_int_upperfinger", "mp_player_int_finger_02", 1],
                                ["Doppel Fickt euch", "mp_player_int_upperfinger", "mp_player_int_finger_01", 1],
                                ["Der Denker", "misscarsteal4@aliens", "rehearsal_base_idle_director", 1],
                                ["Rauchen - Joint schnell rauchen", "amb@world_human_smoking_fat@male@male_b@idle_a", "idle_c", 1],
                                ["Küssen ", "mp_ped_interaction", "kisses_guy_b", 1],
                                ["Umarmen", "mp_ped_interaction", "hugs_guy_a", 1],
                                ["Nase bohren ", "anim@mp_player_intincarnose_pickbodhi@ps@", "idle_a", 1],
                                ["Heavymetal finger", "amb@code_human_in_car_mp_actions@rock@std@rds@base", "idle_a", 1],
                                ["Titanicpose", "hs3f_int1-1", "mp_m_freemode_01_dual-1", 1],
                                ["Fingernägel auskratzen", "mp_common_heist", "use_terminal_loop", 1],
                                ["Grüßen ", "gestures@m@standing@casual", "gesture_hello", 1],
                                ["Verdammt ", "gestures@m@standing@casual", "gesture_damn", 1],
                                ["Luftküsse ", "anim@mp_player_intcelebrationfemale@blow_kiss", "blow_kiss", 1],
                                ["Arsch kratzen ", "anim@mp_corona_idles@male_a@idle_a", "idle_e", 1],
                                ["Popel wegschnipsen", "anim@mp_player_intcelebrationmale@nose_pick", "nose_pick", 1],
                                ["An den Eiern kraulen", "missarmenian2", "arm2_lamar_idle_01", 1],
                                ["Mund abwischen", "gestures@miss@fbi_5", "fbi5_gesture_wipe", 1],
                                ["Winken - Hier bin ich", "random@car_thief@victimpoints_ig_3", "arms_waving", 1],
                                ["Ich verbeuge mich mein Lord", "anim@arena@celeb@podium@no_prop@", "regal_a_1st", 1],
                                ["Den Klose machen", "anim@arena@celeb@flat@solo@no_props@", "flip_a_player_a", 1],
                                ["Seid mal leise", "anim@arena@celeb@flat@solo@no_props@", "giggle_a_player_a", 1],
                                ["Jemanden auslachen", "anim@arena@celeb@flat@solo@no_props@", "taunt_d_player_b", 1],
                                ["Julius Caesar", "anim@arena@celeb@flat@solo@no_props@", "thumbs_down_a_player_a", 1],
                                ["Daumen Runter", "anim@arena@celeb@flat@solo@no_props@", "thumbs_down_a_player_b", 1],
                                ["Zuschauer zu Winken", "anim@arena@celeb@flat@solo@no_props@", "wave_a_player_b", 1],
                                ["Verzweifelt - Unbegreiflich", "anim@arena@celeb@flat@solo@no_props@", "wow_a_player_b", 1],
                                ["Nachdenklich - Sucht nach Antworten", "anim@arena@celeb@flat@solo@no_props@", "wow_b_player_b", 1],
                                ["Komasaufen 1", "anim@arena@celeb@flat@solo@props@", "chug_beer_a_player_a", 1],
                                ["Komasaufen 2", "anim@arena@celeb@flat@solo@props@", "chug_beer_b_player_a", 1],
                                ["Nimm mein Geld - Zack Zack Zack", "anim@arena@celeb@flat@solo@props@", "make_it_rain_b_player_b", 1],
                                ["Slap it", "anim@arena@celeb@podium@no_prop@", "air_slap_a_1st", 1],
                                ["Die Langsame Ente", "anim@arena@celeb@podium@no_prop@", "cocky_a_1st", 1],
                                ["Die crowd begrüßen", "anim@arena@celeb@podium@no_prop@", "crowd_point_a_1st", 1],
                                ["Die Ente lässt die Hüften schwingen", "anim@arena@celeb@podium@no_prop@", "dance_a_1st", 1],
                                ["Zu wenig dass es Tanzen ist", "anim@arena@celeb@podium@no_prop@", "dance_b_1st", 1],
                                ["Peng Peng - Hier bin ich", "anim@arena@celeb@podium@no_prop@", "finger_guns_a_1st", 1],
                                ["Rattatatata - Hier bin ich", "anim@arena@celeb@podium@no_prop@", "finger_guns_b_1st", 1],
                                ["Seht hier mein Mittelfinger", "anim@arena@celeb@podium@no_prop@", "flip_off_a_1st", 1],
                                ["Die Suche nach dem Mittelfinger", "anim@arena@celeb@podium@no_prop@", "flip_off_b_1st", 1],
                                ["Jeder bekommt einen Mittelfinger ab", "anim@arena@celeb@podium@no_prop@", "flip_off_c_1st", 1],
                                ["Und wer seid ihr? Verschwindet!", "anim@arena@celeb@podium@no_prop@", "flip_off_c_2nd", 1],
                                ["Fuß abtreten", "anim@arena@celeb@podium@no_prop@", "regal_a_3rd", 1],
                                ["Was hat da geknallt?", "anim@arena@celeb@podium@prop@", "confetti_canon_c_2nd", 1],
                                ["Rock 'n' Roll", "amb@code_human_in_car_mp_actions@rock@low@ps@base", "enter", 1],
                                ["Peace", "amb@code_human_in_car_mp_actions@v_sign@bodhi@rps@base", "idle_a", 2],
                                ["Double Peace", "amb@code_human_in_car_mp_actions@v_sign@std@rps@base", "enter", 2],
                                ["Bye (soft)", "gestures@f@standing@casual", "gesture_bye_soft", 1],
                                ["Chill, komm runter ", "gestures@f@standing@casual", "gesture_easy_now", 1],
                                ["No way", "gestures@f@standing@casual", "gesture_nod_no_hard", 1],
                                ["Fickificki", "anim@mp_player_intupperdock", "idle_a", 1],
                                ["Ausweichen Links", "move_avoidance@generic_m", "react_front_dive_left", 2],
                                ["Ausweichen Rechts", "move_avoidance@generic_m", "react_front_dive_right", 2],
                                ["Stehen bleiben!", "anim@amb@nightclub@peds@", "mini_strip_club_idles_bouncer_stop_stop", 2],
                                ["Salutieren", "anim@mp_player_intincarsalutestd@ds@", "idle_a", 1],
                                ["Gangsign 1", "amb@code_human_in_car_mp_actions@gang_sign_a@low@ps@base", "enter", 1],
                                ["Gangsign 2", "mp_player_int_uppergang_sign_a", "mp_player_int_gang_sign_a", 1],
                                ["Gangsign 3", "mp_player_int_uppergang_sign_b", "mp_player_int_gang_sign_b", 1],
                                ["Gangsign 4", "amb@code_human_in_car_mp_actions@gang_sign_b@std@ds@base", "enter", 1],
                                ["Verbeugen", "anim@arena@celeb@podium@no_prop@", "regal_c_1st", 1],
                                ["Handschlag", "mp_ped_interaction", "handshake_guy_b", 1],
                                ["Herzschmerz", "rcmfanatic1out_of_breath", "p_zero_tired_01", 1],
                                ["Herzschmerz 2", "rcmfanatic1out_of_breath", "p_zero_tired_02", 1]
                            ]
                        }, {
                            name: "Handy / Kamera",
                            anims: [
                                ["Telefonieren 1", "amb@code_human_wander_mobile@male@base", "static", 1],
                                ["SMS schreiben / Handy benutzen ", "amb@code_human_wander_texting@male@base", "static", 1],
                                ["Mit Handy filmen ", "amb@world_human_mobile_film_shocking@male@enter", "enter", 1],
                                ["Telefonieren 2", "amb@world_human_stand_mobile@male@standing@call@base", "base", 1],
                                ["Selfie", "amb@world_human_tourist_mobile@male@enter", "enter", 1]
                            ]
                        }, {
                            name: "Liegen",
                            anims: [
                                ["Schlafen (Rechts)", "amb@world_human_bum_slumped@male@laying_on_right_side@idle_a", "idle_a", 1],
                                ["Schlafen (Links)", "amb@world_human_bum_slumped@male@laying_on_left_side@base", "base", 1],
                                ["Verletzt", "timetable@tracy@sleep@", "base", 1],
                                ["Auf dem Rücken niedergeschlagen", "mini@cpr@char_b@cpr_def", "cpr_pumpchest_idle", 1],
                                ["Auf dem Bauch (Männlich)", "amb@world_human_sunbathe@male@front@base", "base", 2],
                                ["Auf dem Rücken entspannen", "amb@world_human_sunbathe@male@back@base", "base", 1],
                                ["Auf dem Bauch (Weiblich)", "amb@world_human_sunbathe@female@front@base", "base", 1],
                                ["Auf dem Rücken ausruhen", "amb@world_human_sunbathe@female@back@base", "base", 1],
                                ["Weit nach hinten fliegen", "dam_ko", "ko_front", 2]
                            ]
                        }, {
                            name: "Tanzen",
                            anims: [
                                ["Stepptanz", "special_ped@mountain_dancer@base", "base", 1],
                                ["Stepptanz Hände in die Höh", "special_ped@mountain_dancer@monologue_2@monologue_2a", "mnt_dnc_angel", 1],
                                ["Stepptanz mit Hüftwackeln", "special_ped@mountain_dancer@monologue_3@monologue_3a", "mnt_dnc_buttwag", 1],
                                ["Stepptanz Slow", "special_ped@mountain_dancer@monologue_4@monologue_4a", "mnt_dnc_verse", 1],
                                ["Tanzmuffel", "anim@amb@nightclub@dancers@black_madonna_entourage@", "li_dance_facedj_11_v1_male^1", 1],
                                ["Groovie", "anim@amb@nightclub@dancers@black_madonna_entourage@", "hi_dance_facedj_09_v2_male^5", 1],
                                ["Bar lehnend zum Beat nicken", "anim@amb@nightclub@dancers@club_ambientpeds@", "mi-hi_amb_club_13_v1_female^6", 1],
                                ["Drink - lässig", "anim@amb@nightclub@dancers@club_ambientpeds@", "mi-hi_amb_club_06_base_female^3", 1],
                                ["Beobachten und trinken", "anim@amb@nightclub@dancers@club_ambientpeds@", "li-mi_amb_club_13_v1_male^2", 1],
                                ["HipHop - Lässig", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_09_v1_female^5", 1],
                                ["Vertäumt", "anim@amb@nightclub@dancers@crowddance_facedj@", "li_dance_facedj_15_v1_male^4", 1],
                                ["Girly - Pop Dance", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_11_v1_female^3", 1],
                                ["Festival - Fühlt die Musik", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_15_v2_male^4", 1],
                                ["Festival - Wo bleibt der Beat", "anim@amb@nightclub@dancers@crowddance_facedj@", "mi_dance_facedj_15_v2_male^3", 1],
                                ["Girly - Grooving", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_17_v1_female^6", 1],
                                ["Der Antänzer", "anim@amb@nightclub@dancers@crowddance_facedj@", "li_dance_facedj_11_v1_male^4", 1],
                                ["Weiblich - Lebensfreude", "anim@amb@nightclub@dancers@crowddance_facedj@", "mi_dance_facedj_09_v2_female^3", 1],
                                ["Girly - Funky", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_09_v2_female^3", 1],
                                ["Schüchtern", "anim@amb@nightclub@dancers@crowddance_facedj@", "li_dance_facedj_09_v2_male^6", 1],
                                ["Techno", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_13_v2_male^4", 1],
                                ["Zum Beat wippen", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_17_v1_male^1", 1],
                                ["Girly - Disco Dance", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_13_v2_female^3", 1],
                                ["Sidestep", "anim@amb@nightclub@dancers@crowddance_facedj@", "mi_dance_facedj_15_v2_male^4", 1],
                                ["Waven", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_13_v1_female^5", 1],
                                ["Abfeiern", "anim@amb@nightclub@dancers@crowddance_facedj@", "hi_dance_facedj_11_v2_female^2", 1],
                                ["Verträumter Wave", "anim@amb@nightclub@dancers@crowddance_facedj@", "mi_dance_facedj_13_v2_male^4", 1],
                                ["Slowmo", "anim@amb@nightclub@dancers@crowddance_facedj@", "li_dance_facedj_17_v2_male^1", 1],
                                ["Raven", "anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity", "hi_dance_facedj_15_v1_female^1", 1],
                                ["Chilliger Club Dance", "anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity", "hi_dance_facedj_17_v1_male^3", 1],
                                ["Der Antänzer", "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity", "li_dance_facedj_11_v1_male^4", 1],
                                ["Erzwungener Tanz", "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity", "li_dance_facedj_15_v1_female^1", 1],
                                ["Unauffällig", "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity", "li_dance_facedj_13_v1_male^6", 1],
                                ["Traumtänzer", "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity", "li_dance_facedj_11_v1_female^6", 1],
                                ["Wild abfeiern", "anim@amb@nightclub@dancers@crowddance_facedj_transitions@", "trans_dance_facedj_li_to_hi_09_v1_female^3", 1],
                                ["Affentanz", "anim@amb@nightclub@dancers@crowddance_facedj_transitions@", "trans_dance_facedj_hi_to_li_09_v1_male^1", 1],
                                ["Beat fühlen", "anim@amb@nightclub@dancers@crowddance_facedj_transitions@", "trans_dance_facedj_mi_to_li_09_v1_female^1", 1],
                                ["Der Beobachter", "anim@amb@nightclub@dancers@club_ambientpeds@", "mi-hi_amb_club_06_base_female^5", 1],
                                ["Tanzen mit Bier in der Hand (weiblich)", "amb@world_human_partying@female@partying_beer@base", "base", 1],
                                ["Tanzen mit Bier in der Hand (männlich)", "amb@world_human_partying@male@partying_beer@base", "base", 1],
                                ["Wild abfeiern", "anim@amb@nightclub@dancers@crowddance_facedj_transitions@", "trans_dance_facedj_li_to_hi_09_v1_female^3", 1],
                                ["Die Nickerin", "anim@mp_celebration@idles@female", "celebration_idle_f_a", 1],
                                ["Der Nicker", "amb@world_human_strip_watch_stand@male_a@base", "base", 1],
                                ["DJ", "anim@mp_player_intcelebrationfemale@dj", "dj", 1],
                                ["DJ 2", "anim@mp_player_intcelebrationmale@dj", "dj", 1],
                                ["Am DJ Pult", "anim@amb@nightclub@djs@black_madonna@", "dance_b_trans_pose_c_blamadon", 1],
                                ["Heftiger Raven", "misschinese2_crystalmazemcs1_cs", "dance_loop_tao", 1],
                                ["Welle", "mini@strip_club@private_dance@idle", "priv_dance_idle", 1],
                                ["Der Armwedler", "anim@amb@casino@mini@dance@dance_solo@female@var_a@", "high_center", 1],
                                ["Langsam Step Step", "anim@amb@casino@mini@dance@dance_solo@female@var_a@", "low_center", 1],
                                ["Step Step links rechts", "anim@amb@casino@mini@dance@dance_solo@female@var_a@", "med_center", 1],
                                ["Step Step vorn", "anim@amb@casino@mini@dance@dance_solo@female@var_b@", "med_center", 1],
                                ["Am Seil ziehen", "anim@amb@casino@mini@dance@dance_solo@female@var_a@", "med_center_down", 1],
                                ["HipHop", "missfbi3_sniping", "dance_m_default", 1],
                                ["Hochnäsiges Armschwingen", "move_clown@p_m_zero_idles@", "fidget_short_dance", 1],
                                ["Partyclown", "move_clown@p_m_two_idles@", "fidget_short_dance", 1],
                                ["Leichtes Wippen", "mini@strip_club@drink@idle_a", "idle_a", 1],
                                ["Lässig im Club", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_09_v1_male^4", 1],
                                ["Girly-chillig", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_09_v2_female^1", 1],
                                ["cool im Club", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_09_v2_male^2", 1],
                                ["wild Feiern", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_09_v2_male^5", 1],
                                ["Girly- wild abgehen", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_11_v1_female^1", 1],
                                ["im Club posen", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_11_v1_male^2", 1],
                                ["locker im Club", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_11_v1_male^4", 1],
                                ["entspannt", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_11_v1_male^6", 1],
                                ["Girly- sexy feiern", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_15_v1_female^1", 1],
                                ["Girly- Pop Dance2", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_15_v1_female^3", 1],
                                ["Girly- Arme schwingen", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_15_v1_female^5", 1],
                                ["Girly- sexy", "anim@amb@nightclub@dancers@crowddance_groups@", "hi_dance_crowd_15_v1_female^6", 1],
                                ["Girly- locker", "anim@amb@nightclub@dancers@crowddance_groups@", "mi_dance_crowd_13_v1_female^3", 1]
                            ]
                        }, {
                            name: "Arbeit",
                            anims: [
                                ["Unter dem Auto reparieren", "amb@world_human_vehicle_mechanic@male@base", "base", 1],
                                ["Stein mit Spitzhacke abbauen", "mini@tennis", "react_lose_trevor", 1],
                                ["Schweißen", "amb@world_human_welding@male@idle_a", "idle_a", 1],
                                ["Schweißnaht überprüfen", "amb@world_human_welding@male@idle_a", "idle_b", 1],
                                ["Schweißgerät einstellen", "amb@world_human_welding@male@idle_a", "idle_c", 1],
                                ["Fenster putzen ", "oddjobs@assassinate@multi@windowwasher", "_wash_loop", 1],
                                ["Laubbläser ", "amb@code_human_wander_gardener_leaf_blower@base", "static", 1],
                                ["Herumwühlen", "amb@prop_human_bum_bin@base", "base", 1],
                                ["Presslufthammer", "amb@world_human_const_drill@male@drill@base", "base", 1],
                                ["Etwas ausgraben ", "amb@world_human_gardener_plant@female@base", "base_female", 1],
                                ["Hämmern", "amb@world_human_hammering@male@base", "base", 1],
                                ["Fegen", "amb@world_human_janitor@male@idle_a", "idle_a", 1],
                                ["Wischen ", "amb@world_human_maid_clean@base", "base", 1],
                                ["Angeln", "amb@world_human_stand_fishing@idle_a", "idle_c", 1],
                                ["Eingraben", "missarmenian3_gardener", "idle_a", 1],
                                ["Gießen", "missarmenian3_gardener", "blower_idle_a", 1],
                                ["Anschieben", "missbigscore2aig_5", "push_trolly_enter", 1]
                            ]
                        }, {
                            name: "Angst",
                            anims: [
                                ["Ängstlich in der Hocke", "amb@code_human_cower@male@base", "base", 1],
                                ["Ängstlich gebückt", "amb@code_human_cower_stand@female@base", "base", 1],
                                ["Ängstlich auf dem Boden kauern", "anim@heists@ornate_bank@hostages@cashier_b@", "flinch_loop_underfire", 1],
                                ["Bedroht werden weiblich", "anim@move_hostages@female", "female_idle", 1],
                                ["Bedroht werden männlich", "anim@move_hostages@male", "male_idle", 1],
                                ["Bitte nicht! (Hände vorm Gesicht)", "anim@mp_player_intuppersurrender", "idle_a_fp", 1],
                                ["Zusammenzucken", "missarmenian2", "lemar_flinch", 1],
                                ["Angst haben", "amb@code_human_cower@female@base", "base", 1],
                                ["Ängstlich ergeben", "misschinese2_crystalmaze", "_stand_loop_b", 1],
                                ["Bitte nicht schlagen ", "amb@code_human_cower_stand@female@react_cowering", "base_right", 1]
                            ]
                        }, {
                            name: "Interaktion",
                            anims: [
                                ["Um Verzeihung betteln / Verzweiflung", "misscarsteal2car_stolen", "chad_car_stolen_reaction", 2],
                                ["Knopf an Wand drücken", "anim@mp_radio@garage@high", "action_a", 1],
                                ["Luftgitarre", "anim@mp_player_intupperair_guitar", "idle_a", 1],
                                ["Luftgitarre heftiger", "anim@mp_player_intupperair_guitar", "idle_a_fp", 1],
                                ["Luftpiano", "anim@mp_player_intupperair_synth", "idle_a_fp", 1],
                                ["Bongos spielen", "amb@world_human_musician@bongos@male@base", "base", 1],
                                ["Gitarre spielen", "amb@world_human_musician@guitar@male@base", "base", 1],
                                ["Aufschreiben", "amb@medic@standing@timeofdeath@base", "base", 1],
                                ["Kleingeld zählen", "amb@prop_human_parking_meter@male@base", "base", 1],
                                ["Fernglas", "amb@world_human_binoculars@male@enter", "enter", 1],
                                ["Hände waschen Boden", "amb@world_human_bum_wash@male@high@idle_a", "idle_a", 1],
                                ["Wegschlagen Boden", "amb@world_human_bum_wash@male@low@base", "base", 1],
                                ["durchwinken", "amb@world_human_car_park_attendant@male@base", "base", 1],
                                ["Gegenstand rausholen", "amb@world_human_security_shine_torch@male@enter", "enter", 1],
                                ["Knopf drücken", "anim@apt_trans@buzzer", "buzz_reg", 1],
                                ["Bimsen (Weiblich)", "anim@mp_player_intcelebrationfemale@dock", "dock", 1],
                                ["Facepalm", "anim@mp_player_intcelebrationfemale@face_palm", "face_palm", 1],
                                ["Salutieren mit Schwung", "anim@mp_player_intcelebrationmale@salute", "salute", 1],
                                ["Shhhh! (männlich)", "anim@mp_player_intcelebrationmale@shush", "shush", 1],
                                ["Würfeln", "anim@mp_player_intcelebrationmale@wank", "wank", 1],
                                ["Handshake nach Links", "anim@mp_player_intcelebrationpaired@f_f_manly_handshake", "manly_handshake_left", 1],
                                ["Handshake von oben nach unten Rechts", "anim@mp_player_intcelebrationpaired@f_f_manly_handshake", "manly_handshake_right", 1],
                                ["Handy Tippen", "missarmenian2", "lamar_texting", 1],
                                ["Bro Umarmung", "anim@mp_player_intcelebrationpaired@f_f_bro_hug", "bro_hug_left", 1],
                                ["Grüßen / Taxi rufen", "misscarsteal2", "come_here_idle_c", 1],
                                ["Schüchtern melden", "missclothing", "goodbye_storeclerk", 1],
                                ["Weste ", "anim@heists@narcotics@funding@gang_idle", "gang_chatting_idle01", 1],
                                ["Fesseln entfernen / Dietrich", "mp_arresting", "a_uncuff", 1],
                                ["Handschellen entfernen", "mp_uncuff_paired", "crook_01_p2_fwd", 1],
                                ["Wegwerfen", "cover@weapon@grenade", "hi_r_throw_90", 1],
                                ["Item Übergeben", "mp_common", "givetake2_a", 1],
                                ["Aufheben", "pickup_object", "pickup_low", 1],
                                ["Item zuschieben", "mp_safehouselost@", "package_dropoff", 1],
                                ["Unter Hebebühne / LSC", "amb@prop_human_movie_bulb@base", "base", 1],
                                ["Augenhöhe Schrauben drehen", "amb@prop_human_movie_studio_light@base", "base", 1],
                                ["Vom Boden etwas aufheben", "anim@mp_snowball", "pickup_snowball", 1],
                                ["Tippen", "anim@gangops@morgue@office@laptop@", "idle", 1],
                                ["ATM bedienen", "mp_common_heist", "a_atm_mugging", 1],
                                ["Urinieren", "missheist_agency3aig_23", "urinal_youknowyoustayed", 1],
                                ["Hände waschen", "missheist_agency3aig_23", "urinal_sink_loop", 1],
                                ["Etwas Ansehen", "amb@world_human_guard_patrol@male@idle_b", "idle_e", 1]
                            ]
                        }, {
                            name: "Jubel",
                            anims: [
                                ["Jubeln 1 (weiblich)", "amb@world_human_cheering@female_a", "base", 1],
                                ["Jubeln 2 (weiblich)", "amb@world_human_cheering@female_b", "base", 1],
                                ["Jubeln 3 (weiblich)", "amb@world_human_cheering@female_c", "base", 1],
                                ["Jubeln 4 (weiblich)", "amb@world_human_cheering@female_d", "base", 1],
                                ["Jubeln 5 (männlich)", "amb@world_human_cheering@male_a", "base", 1],
                                ["Jubeln 6 (männlich)", "amb@world_human_cheering@male_b", "base", 1],
                                ["Jubeln 7 (männlich)", "amb@world_human_cheering@male_d", "base", 1],
                                ["Klatschen (langsam)", "amb@world_human_cheering@male_e", "base", 1],
                                ["Luftgitarre spielen", "anim@mp_player_intcelebrationfemale@air_guitar", "air_guitar", 1],
                                ["Der Pianist", "anim@mp_player_intcelebrationfemale@air_synth", "air_synth", 1],
                                ["Rock and Roll", "anim@mp_player_intcelebrationmale@rock", "rock", 1],
                                ["Langsames Klatschen", "anim@mp_player_intcelebrationmale@slow_clap", "slow_clap", 1],
                                ["Jawoll", "mini@tennis@female", "react_win_04", 1],
                                ["Sich freuen und selbst motivieren weiblich", "mini@tennisexit@", "tennis_outro_win_03_female", 1],
                                ["Yeah Boi", "mini@tennisexit@", "tennis_outro_win_02", 1],
                                ["Protziger Jubel weiblich", "mini@tennisexit@", "tennis_outro_win_01_female", 1],
                                ["Protziger Jubel männlich", "mini@tennisexit@", "tennis_outro_win_01", 1],
                                ["Sich freuen und selbst motivieren männlich", "mini@tennisexit@", "tennis_outro_win_03", 1],
                                ["Sportliches Faustballen weiblich", "mini@tennisexit@", "tennis_outro_win_02_female", 1],
                                ["Jubellauf weiblich", "mini@tennisexit@female", "tennis_outro_win", 1],
                                ["Jubellauf männlich", "mini@tennisexit@male", "tennis_outro_win", 1],
                                ["Protziger Jubel", "mini@tennisreactions@michael", "positive_react_01", 1],
                                ["Ja man!", "mini@tennis", "react_win_04", 1],
                                ["Großer Jubel", "missfbi3_sniping", "male_unarmed_a", 1],
                                ["Kleiner Jubel", "missfbi3_sniping", "male_unarmed_b", 1],
                                ["Mitklatschen", "amb@world_human_strip_watch_stand@male_a@idle_a", "idle_a", 1],
                                ["Der Bummser", "anim@mp_player_intcelebrationfemale@air_shagging", "air_shagging", 1],
                                ["Sieg feiern 1", "anim@arena@celeb@flat@solo@no_props@", "angry_clap_a_player_a", 1],
                                ["Sieg feiern 2", "anim@arena@celeb@flat@solo@no_props@", "angry_clap_b_player_a", 1],
                                ["Breakdance", "anim@arena@celeb@flat@solo@no_props@", "cap_a_player_a", 1],
                                ["Spagat Jump", "anim@arena@celeb@flat@solo@no_props@", "jump_b_player_a", 1],
                                ["Side Spagat Jump", "anim@arena@celeb@flat@solo@no_props@", "jump_c_player_a", 1],
                                ["Side Jump", "anim@arena@celeb@flat@solo@no_props@", "jump_d_player_a", 1],
                                ["Dramatisch", "anim@arena@celeb@flat@solo@no_props@", "pageant_a_player_a", 1],
                                ["Auf den Knien rutschen", "anim@arena@celeb@flat@solo@no_props@", "slide_a_player_a", 1],
                                ["Auf den Knien rutschen Rockstar", "anim@arena@celeb@flat@solo@no_props@", "slide_b_player_a", 1],
                                ["Auf den Knien rutschen Links Rechts Links", "anim@arena@celeb@flat@solo@no_props@", "slide_c_player_a", 1],
                                ["Home Run", "anim@arena@celeb@flat@solo@no_props@", "slugger_a_player_a", 1],
                                ["Duckjump", "anim@arena@celeb@podium@no_prop@", "cheer_a_1st", 1],
                                ["Duckjump - Klatschen", "anim@arena@celeb@podium@no_prop@", "clapping_a_1st", 1],
                                ["Die Kurbel", "anim@arena@celeb@podium@no_prop@", "fist_pump_a_1st", 1],
                                ["Der Champ ist da 1", "anim@arena@celeb@podium@no_prop@", "hands_air_b_1st", 1],
                                ["Der Champ ist da 2", "anim@arena@celeb@podium@no_prop@", "hands_air_c_1st", 1],
                                ["Praise The Lord", "anim@arena@celeb@podium@no_prop@", "make_noise_a_1st", 1],
                                ["Den Lord begrüßen", "anim@arena@celeb@podium@no_prop@", "regal_b_1st", 1],
                                ["The Trophy is mine", "anim@arena@celeb@podium@prop@", "trophy_a_1st", 1],
                                ["The Trophy is mine - That's Right", "anim@arena@celeb@podium@prop@", "trophy_c_1st", 1],
                                ["Kiss the Trophy", "anim@arena@celeb@podium@prop@", "trophy_e_1st", 1]
                            ]
                        }, {
                            name: "Kampf",
                            anims: [
                                ["Baui Punch", "melee@unarmed@streamed_core", "plyr_takedown_front_uppercut", 1],
                                ["Golfschläger Schlag androhen", "anim@deathmatch_intros@melee@2h", "intro_male_melee_2h_b_gclub", 1],
                                ["Baseball Schläger Schlag androhen", "anim@deathmatch_intros@melee@2h", "intro_male_melee_2h_b", 1],
                                ["Messer schwingen", "anim@deathmatch_intros@melee@1h", "intro_male_melee_1h_c", 1],
                                ["Drohen", "mp_common_heist", "grab_kill_drop", 1],
                                ["Knien - Bedrohen", "missfbi2", "franklin_sniper_crouch", 1],
                                ["Waffe begutachten", "missbigscore1guard_wait_rifle", "wait_c", 1]
                            ]
                        }, {
                            name: "Rauchen",
                            anims: [
                                ["Rauchen Männlich 1", "amb@code_human_wander_smoking@male@idle_a", "idle_a", 1],
                                ["Rauchen 2", "amb@world_human_aa_smoke@male@idle_a", "idle_c", 1],
                                ["Rauchen weiblich 2", "amb@world_human_smoking@female@enter", "enter", 1],
                                ["Rauchen männlich 2", "amb@world_human_smoking@male@male_a@enter", "enter", 1],
                                ["Rauchen - Zigarette ", "amb@world_human_smoking@male@male_a@base", "base", 1],
                                ["Rauchen - Zigarette entspannt rauchen", "amb@world_human_smoking@male@male_b@base", "base", 1],
                                ["Rauchen - Joint lange rauchen", "amb@world_human_smoking_pot@female@base", "base", 1],
                                ["Joint rauchen männlich", "amb@world_human_smoking_pot@male@base", "base", 1]
                            ]
                        }, {
                            name: "Sitzen",
                            anims: [
                                ["Auf den Boden setzen mit abstützen (weiblich)", "amb@world_human_picnic@female@enter", "enter", 2],
                                ["Auf den Boden setzen mit abstützen (männlich)", "amb@world_human_picnic@male@enter", "enter", 2],
                                ["Auf den Boden setzen (abstützen)", "amb@world_human_stupor@male@idle_a", "idle_a", 1],
                                ["Auf dem Boden sitzen (anlehnen)", "amb@world_human_stupor@male_looking_right@base", "base", 1],
                                ["Hinsetzen", "anim@heists@fleeca_bank@ig_7_jetski_owner", "owner_idle", 1],
                                ["Sitzen - Beine ausgestreckt", "amb@world_human_picnic@male@base", "base", 2],
                                ["Sitzen - Auf dem Boden (Weiblich)", "amb@lo_res_idles@", "world_human_picnic_female_lo_res_base", 2],
                                ["Sitzen - Gangster verneinen", "mp_army_contact", "negative_c", 1],
                                ["Sitzen - Gangster zustimmen", "mp_army_contact", "positive_b", 1],
                                ["Sitzen - Gangster", "timetable@ron@ig_3_couch", "base", 1],
                                ["Sitzen - Genießen", "mp_safehouse", "lap_dance_player", 1],
                                ["Gelangweilt sitzen", "switch@michael@sitting", "idle", 1],
                                ["Sitzend am Handy", "anim@amb@business@cfid@cfid_desk_no_work_bgen_chair_no_work@", "tired_search_lazyworker", 1],
                                ["Weiblich am Strand sitzen", "amb@world_human_picnic@female@base", "base", 1],
                                ["Russenhocke", "missheistdockssetup1ig_10@idle_a", "talk_pipe_a_worker1", 2],
                                ["Auf dem Boden sitzen - lässig", "anim@heists@fleeca_bank@ig_7_jetski_owner", "owner_idle", 1],
                                ["Sitzen - Beine überschlagen", "timetable@reunited@ig_10", "base_amanda", 1],
                                ["Sitzen - Schneidersitz", "timetable@jimmy@mics3_ig_15@", "mics3_15_base_tracy", 1],
                                ["Sitzen - Sich breit machen", "timetable@trevor@smoking_meth@base", "base", 1],
                                ["Sitzen - Chillig", "timetable@maid@couch@", "base", 1],
                                ["Sitzen auf Sonnenliege", "timetable@amanda@ig_5", "ig_5_base", 1]
                            ]
                        }, {
                            name: "Sport",
                            anims: [
                                ["Startposition", "special_ped@mani@trevor_1@trevor_1i", "convo_trevor_whahellholaamigo_8", 2],
                                ["Aufwärmen", "timetable@tracy@ig_5@idle_b", "idle_e", 1],
                                ["Aufwärmen Part 2", "timetable@tracy@ig_5@idle_b", "idle_d", 1],
                                ["Muskeln zeigen 1", "amb@world_human_muscle_flex@arms_at_side@base", "base", 1],
                                ["Muskeln zeigen 2", "amb@world_human_muscle_flex@arms_at_side@idle_a", "idle_a", 1],
                                ["Muskeln zeigen 3", "amb@world_human_muscle_flex@arms_at_side@idle_a", "idle_c", 1],
                                ["Muskeln zeigen 4", "amb@world_human_muscle_flex@arms_in_front@base", "base", 1],
                                ["Muskeln zeigen 5", "amb@world_human_muscle_flex@arms_in_front@idle_a", "idle_a", 1],
                                ["Muskeln zeigen 6", "amb@world_human_muscle_flex@arms_in_front@idle_a", "idle_b", 1],
                                ["Muskeln zeigen 7", "amb@world_human_muscle_flex@arms_in_front@idle_a", "idle_c", 1],
                                ["Yoga (weiblich)", "amb@world_human_yoga@female@base", "base_c", 1],
                                ["Yoga (männlich)", "amb@world_human_yoga@male@base", "base_a", 1],
                                ["Yoga (Sonnengruß)", "timetable@amanda@ig_4", "ig_4_idle", 1],
                                ["Liegestütze", "amb@world_human_push_ups@male@idle_a", "idle_d", 1],
                                ["Sit-Ups", "amb@world_human_sit_ups@male@idle_a", "idle_a", 1],
                                ["Sit-Ups 2", "amb@world_human_sit_ups@male@idle_a", "idle_c", 1],
                                ["Joggen", "move_m@jogger", "idle", 1],
                                ["Sprung Übung", "move_m@jogger", "idle_turn_l_0", 1],
                                ["Sprung Übung mit Drehung rechts", "move_m@jogger", "idle_turn_l_180", 1],
                                ["Sprung Übung mit Drehung links", "move_m@jogger", "idle_turn_l_-180", 1],
                                ["Im Kreis Joggen links", "move_m@jogger", "run_turn_l3", 1],
                                ["Im Kreis Joggen rechts", "move_m@jogger", "run_turn_r3", 1],
                                ["Im großen Kreis Joggen links", "move_m@jogger", "run_turn_l2", 1],
                                ["Im großen Kreis Joggen rechts", "move_m@jogger", "run_turn_r2", 1],
                                ["Stretchen", "rcmfanatic1maryann_stretchidle_b", "idle_e", 1]
                            ]
                        }, {
                            name: "Stehen",
                            anims: [
                                ["Warten (weiblich)", "friends@fra@ig_1", "base_idle", 1],
                                ["Entspannt warten", "missarmenian1movieextras", "largegroup_loop_m_c", 1],
                                ["Ungeduldig warten", "missarmenian2", "lamar_impatient_idle", 1],
                                ["Diva an Gelände festhalten", "misschinese1leadinoutchinese_1_int", "janet_leadin_outro_loop", 1],
                                ["Knien - Unterwürfig", "misschinese2_crystalmaze", "2int_loop_base_taotranslator", 2],
                                ["Normal aufstehen", "switch@michael@sitting", "exit_forward", 1],
                                ["Still stehen", "amb@world_human_yoga@male@base", "base", 1],
                                ["Security", "amb@world_human_stand_guard@male@idle_b", "idle_d", 1],
                                ["Stehen (weiblich)", "misscarsteal1leadinout@i_fought_the_law", "micarrive_leadin_loop_molly", 1],
                                ["Aufmerksam", "missbigscore1", "idle_c", 1],
                                ["Hände knacken", "missbigscore1", "idle_e", 1],
                                ["Schüchtern warten", "missclothing", "good_choice_storeclerk", 1],
                                ["Hibbelig warten", "friends@fra@ig_1", "impatient_idle_a", 1],
                                ["Ich bin die Nummer 1", "anim@mp_point", "1st_person_high_blocked", 1],
                                ["Unarmed bereitmachen 2", "anim@deathmatch_intros@unarmed", "intro_male_unarmed_e", 2],
                                ["Unarmed bereitmachen 1", "anim@deathmatch_intros@unarmed", "intro_male_unarmed_c", 2],
                                ["Verkrampfen", "stungun@standing", "damage", 1],
                                ["Jubellauf männlich", "mini@tennisexit@male", "tennis_outro_win", 1],
                                ["Stehend warten", "amb@world_human_stand_guard@male@base", "base", 2],
                                ["Stehend warten 2", "mini@strip_club@idles@bouncer@idle_a", "idle_a", 1],
                                ["Arme verschränkt 1", "amb@world_human_hang_out_street@male_c@base", "base", 1],
                                ["Arme verschränkt 2", "anim@heists@heist_corona@single_team", "single_team_loop_boss", 1],
                                ["Arme verschränkt 3", "switch@franklin@lamar_tagging_wall", "lamar_tagging_wall_loop_franklin", 1],
                                ["Arme verschränkt 4", "random@street_race", "_car_b_lookout", 1],
                                ["Arme verschränkt 5", "anim@amb@nightclub@peds@", "rcmme_amanda1_stand_loop_cop", 1],
                                ["Wartend im Kreis drehen", "missbigscore2aig_3", "wait_for_van_a", 1],
                                ["Türsteher 1", "missbigscore2aig_3", "wait_for_van_base", 1],
                                ["Türsteher 2", "missbigscore2aig_6", "wait_loop", 1],
                                ["Weiblich Warten", "mini@strip_club@lap_dance_2g@ld_2g_wait", "ld_2g_wait_s2", 1],
                                ["Hände hintern Rücken", "anim@miss@low@fin@vagos@", "idle_ped06", 1],
                                ["Hände hintern Rücken (Beweglich)", "anim@amb@casino@valet_scenario@pose_c@", "base_a_m_y_vinewood_01", 1],
                                ["Nachdenken", "anim@amb@casino@hangout@ped_male@stand@02b@idles", "idle_a", 1]
                            ]
                        },
                        {
                            name: "Testen",
                            anims: [
                                ["Handschellen festziehen", "mp_arresting", "arrested_spin_l_0", 1],
                                ["Fesseln am Rücken", "mp_arresting", "sprint", 1],
                                ["Ungeduldig warten", "missheistdockssetup1ig_3@base", "welding_base_dockworker", 1],
                                ["Herzdruckmassage", "mini@cpr@char_a@cpr_str", "cpr_pumpchest", 1],
                                ["Computer tippen im stehen", "anim@amb@prop_human_seat_computer@male@idle_a","idle_a", 2],
                                ["Heist Loot nehmen", "anim@heists@fleeca_bank@drilling","outro", 1],
                                ["Thermalpaste platzieren", "anim@heists@ornate_bank@thermal_charge", "thermal_charge", 1],
                                ["Heist Bohren", "anim@heists@fleeca_bank@drilling", "drill_right_end", 1], //Heist Bohren
                                ["Etwas Aufheben", "anim@move_m@trash", "pickup", 1], //Etwas Aufheben
                                ["HEISTCASH INTRO", "anim@heists@ornate_bank@grab_cash", "intro", 2], //HEISTCASH INTRO
                                ["HEISTCASH GRAB", "anim@heists@ornate_bank@grab_cash", "grab", 1], //HEISTCASH GRAB
                                ["Wegwerfen", "cover@weapon@grenade", "hi_r_throw_90", 1], //Wegwerfen
                                ["Müll aufheben", "missfbi4prepp1", "_bag_pickup_garbage_man", 1], //Müll aufheben
                                ["Müll in der Hand", "missfbi4prepp1", "_idle_action_garbage_man", 1], //Müll in der Hand
                                ["Müll wegwerfen", "missfbi4prepp1", "_bag_throw_garbage_man", 1], //Müll wegwerfen
                                ["Packet abladen", "rcmepsilonism8", "bag_handler_grab_walk_left", 1], //Packet abladen
                                ["Verletzt am Boden liegen", "missarmenian2", "corpse_search_exit_ped", 1], //17 Verletzt am Boden liegen
                                ["Dietrich", "mp_arresting", "a_uncuff", 1], //Dietrich
                                ["Transportbereit machen", "amb@medic@standing@tendtodead@idle_a", "idle_a", 1], //Transportbereit machen
                                ["Handschellen abnehmen", "mp_uncuff_paired", "crook_01_p2_fwd", 1] //Handschellen abnehmen
                            ]
                         }, {
                            name: "Erotik",
                            anims: [
                                ["Gefickt werden Tisch", "rcmpaparazzo_2", "shag_loop_poppy", 1],
                                ["Jemanden ficken Tisch", "rcmpaparazzo_2", "shag_action_a", 1],
                                ["Selbstbefriedigen gebückt", "switch@trevor@jerking_off", "trev_jerking_off_loop", 1],
                                ["Blowjob geben", "misscarsteal2pimpsex", "pimpsex_hooker", 1],
                                ["Blowjob bekommen", "misscarsteal2pimpsex", "pimpsex_punter", 1],
                                ["Jemanden begutachten", "anim@heists@humane_labs@finale@strip_club", "ped_b_celebrate_intro", 1],
                                ["Striptanz - Wiggledance", "switch@trevor@mocks_lapdance", "001443_01_trvs_28_exit_stripper", 1],
                                ["Striptanz - Wiggle", "switch@trevor@mocks_lapdance", "001443_01_trvs_28_idle_stripper", 1],
                                ["Strip", "mini@strip_club@lap_dance@ld_girl_a_song_a_p1", "ld_girl_a_song_a_p1_f", 1],
                                ["Look at me ", "mini@strip_club@private_dance@part1", "priv_dance_p1", 1],
                                ["Shake your booty", "mini@strip_club@private_dance@part2", "priv_dance_p2", 1],
                                ["Get on the Floor ", "mini@strip_club@private_dance@part3", "priv_dance_p3", 1],
                                ["Partnerstrip 1 rechts", "mini@strip_club@lap_dance_2g@ld_2g_p1", "ld_2g_p1_s1", 1],
                                ["Partnerstrip 1 links", "mini@strip_club@lap_dance_2g@ld_2g_p1", "ld_2g_p1_s2", 1],
                                ["Partnerstrip 2 rechts", "mini@strip_club@lap_dance_2g@ld_2g_p2", "ld_2g_p2_s1", 1],
                                ["Partnerstrip 2 links", "mini@strip_club@lap_dance_2g@ld_2g_p2", "ld_2g_p2_s2", 1],
                                ["Partnerstrip 3 rechts", "mini@strip_club@lap_dance_2g@ld_2g_p3", "ld_2g_p3_s1", 1],
                                ["Partnerstrip 3 links", "mini@strip_club@lap_dance_2g@ld_2g_p3", "ld_2g_p3_s2", 1],
                                ["Körper präsentieren", "mini@hookers_sp", "ilde_b", 1],
                                ["Hintern präsentieren", "mini@hookers_sp", "ilde_c", 1]
                            ]
                        }],
                        clipsets: [
                            ["Gangster - Breitgebaut", "anim_group_move_ballistic"],
                            ["Feminin - Eingeschnappt", "move_f@arrogant@a"],
                            ["Gangster - Huckebein", "move_m@brave"],
                            ["Gangster - Slowmo", "move_m@casual@a"],
                            ["Beschäftig", "move_m@casual@b"],
                            ["Schnell gehen", "move_m@casual@c"],
                            ["Gangster - Smooth", "move_m@casual@d"],
                            ["Entspannt", "move_m@casual@e"],
                            ["Hektisch", "move_m@casual@f"],
                            ["Feminin - Eingebildet", "move_f@chichi"],
                            ["Feminin - Schulterkreisen", "move_m@confident"],
                            ["Stiernacken", "move_m@business@a"],
                            ["Breit gebaut - Hinken", "move_m@business@b"],
                            ["Ängstlich", "move_m@business@c"],
                            ["Weiblich", "move_f@multiplayer"],
                            ["Männlich", "move_m@multiplayer"],
                            ["Betrunken", "move_m@drunk@a"],
                            ["Betrunken 2", "move_m@drunk@slightlydrunk"],
                            ["Betrunken 3", "move_m@buzzed"],
                            ["Betrunken 4", "move_m@drunk@verydrunk"],
                            ["Feminin - Elegant", "move_f@femme@"],
                            ["Breit gehen", "move_characters@franklin@fire"],
                            ["Breit gehen 2", "move_characters@michael@fire"],
                            ["Breit gehen 3", "move_m@fire"],
                            ["Feminin - Catwalk", "move_f@flee@a"],
                            ["Gangster - Schnell gehen", "move_p_m_one"],
                            ["Gangster - Chillig", "move_m@gangster@generic"],
                            ["Gangster - Brust raus", "move_m@gangster@ng"],
                            ["Gangster - OG", "move_m@gangster@var_e"],
                            ["Traurig", "move_m@gangster@var_f"],
                            ["Eilig", "move_m@gangster@var_i"],
                            ["Zum Beat", "anim@move_m@grooving@"],
                            ["Beamter", "move_m@prison_gaurd"],
                            ["Weiblich - Highheels", "move_f@heels@c"],
                            ["Weiblich - Highheels 2", "move_f@heels@d"],
                            ["Hinken", "move_m@hiking"],
                            ["Hipster", "move_m@hipster@a"],
                            ["Verplant", "move_m@hobo@a"],
                            ["Männlich - Sehr Feminin", "move_f@hurry@a"],
                            ["Aggressiv", "move_p_m_zero_janitor"],
                            ["Aggressiv 2", "move_p_m_zero_slow"],
                            ["Hektisch 2", "anim_group_move_lemar_alley"],
                            ["Humpeln", "move_heist_lester"],
                            ["Humpeln 2", "move_lester_caneup"],
                            ["Zuhälter - Classic", "move_f@maneater"],
                            ["Buckel", "move_ped_bucket"],
                            ["Zuhälter - Modern", "move_m@money"],
                            ["Muskeln", "move_m@muscle@a"],
                            ["Vornehm", "move_m@posh@"],
                            ["Vornehm 2", "move_f@posh@"],
                            ["Oma - Rennen", "move_m@quick"],
                            ["Weiblich - Laufen", "female_fast_runner"],
                            ["Niedergeschlagen", "move_m@sad@a"],
                            ["Frech ", "move_m@sassy"],
                            ["Trotzig", "move_f@sassy"],
                            ["Erschrocken", "move_f@scared"],
                            ["Weiblich  - Sexy", "move_f@sexy@a"],
                            ["Zwielichtig", "move_m@shadyped@a"],
                            ["Langsam", "move_characters@jimmy@slow@"],
                            ["Gangster - Real shit", "move_m@swagger"],
                            ["Hartnäckig", "move_m@tough_guy@"],
                            ["Hartnäckig - Stabil", "move_f@tough_guy@"],
                            ["Psycho", "move_p_m_two"],
                            ["Breit", "move_m@bag"]
                        ]
                    }
                },
                methods: {
                    selectCat: function(e) {
                        this.selectedAnims = e.anims, this.selectedCat = e
                    },
                    selecAnim: function(e) {
                        this.emitServer("PlayAnim", e[1], e[2], e[3])
                    },
                    playSet: function(e) {
                        fuckThis("PlaySet", e)
                    },
                    saveAnim: function(e) {
                        this.prompt = !0, this.selectedAnim = e
                    },
                    confirmAnim: function(e) {
                        this.prompt = !1, void 0 != e && (e = parseInt(e), isNaN(e) || e < 1 || e > 18 || this.emitServer("SaveAnim", e, this.selectedAnim[0]))
                    }
                },
                computed: {
                    filteredCategories: function() {
                        var e = this.categories;
                        return e.sort((function(e, t) {
                            var a = e.name.toLowerCase(),
                                i = t.name.toLowerCase();
                            return a < i ? -1 : a > i ? 1 : 0
                        })), e
                    },
                    anims: function() {
                        var e, t = [],
                            a = Object(i["a"])(this.categories);
                        try {
                            for (a.s(); !(e = a.n()).done;) {
                                var s, n = e.value,
                                    r = Object(i["a"])(n.anims);
                                try {
                                    for (r.s(); !(s = r.n()).done;) {
                                        var o = s.value;
                                        o[0].toLowerCase().includes(this.searchAnim.toLowerCase()) && t.push(o)
                                    }
                                } catch (c) {
                                    r.e(c)
                                } finally {
                                    r.f()
                                }
                            }
                        } catch (c) {
                            a.e(c)
                        } finally {
                            a.f()
                        }
                        return this.searchAnim ? t : this.selectedAnims
                    },
                    sets: function() {
                        var e = this;
                        return this.clipsets.filter((function(t) {
                            return t[0].toLowerCase().includes(e.searchAnim.toLowerCase())
                        }))
                    }
                }
            },
            cr = or,
            lr = (a("1cd9"), Object(d["a"])(cr, nr, rr, !1, null, null, null)),
            ur = lr.exports,
            mr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "LifeInvader",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "lifeinvader"
                }, [t("div", {
                    staticClass: "lifeinvader-left"
                }, [t("div", {
                    staticClass: "lifeinvader-left-logo"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/lifeinvader/lifeinvader.png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "lifeinvader-left-textbox"
                }, [t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.message,
                        expression: "message"
                    }],
                    attrs: {
                        maxlength: "300"
                    },
                    domProps: {
                        value: e.message
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.message = t.target.value)
                        }
                    }
                })])]), t("div", {
                    staticClass: "lifeinvader-right"
                }, [t("div", {
                    staticClass: "lifeinvader-right-timer-box"
                }, [t("div", {
                    staticClass: "lifeinvader-right-timer-box-next-ad"
                }, [e._v("Nächste Werbung")]), t("div", {
                    staticClass: "lifeinvader-right-timer-box-ready-in"
                }, [e._v("Verfügbar in")]), t("div", {
                    staticClass: "lifeinvader-right-timer-box-time-message"
                }, [e._v(e._s(e.timeMessage))])]), t("div", {
                    staticClass: "lifeinvader-right-info-box"
                }, [t("div", {
                    staticClass: "lifeinvader-right-info-box-info"
                }, [e._v("Hinweis")]), t("div", {
                    staticClass: "lifeinvader-right-info-box-per-digit"
                }, [e._v("Pro Zeichen 3 $")]), t("div", {
                    staticClass: "lifeinvader-right-info-box-total-box"
                }, [t("div", {
                    staticClass: "lifeinvader-right-info-box-total-box-cost"
                }, [e._v("Kosten")]), t("div", {
                    staticClass: "lifeinvader-right-info-box-total-box-cost-amount"
                }, [e._v(e._s(e.messageCosts))])])]), t("div", {
                    staticClass: "lifeinvader-right-phone-box"
                }, [t("div", {
                    staticClass: "lifeinvader-right-phone-box-title"
                }, [e._v(" Telefon"), t("span", {
                    staticClass: "text-light"
                }, [e._v("nummer")])]), t("div", {
                    staticClass: "lifeinvader-right-phone-box-input"
                }, [t("CoreInput", {
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.send.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.number,
                        callback: function(t) {
                            e.number = t
                        },
                        expression: "number"
                    }
                })], 1)]), t("div", {
                    staticClass: "lifeinvader-right-confirmation-box"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: 0 != this.time
                    },
                    on: {
                        click: function(t) {
                            return e.sendLifeInvaderMessage()
                        }
                    }
                }, [e._v("Bestätigen")])], 1)])])])
            },
            dr = [],
            hr = {
                name: "LifeInvader",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        message: "",
                        number: "",
                        time: 0
                    }
                },
                methods: {
                    sendLifeInvaderMessage: function() {
                        var e = this.number.trim();
                        e && (isNaN(e) || 0 != this.message.length && (this.emitServer("SendLifeInvaderMessage", this.message, parseInt(e)), this.hide()))
                    },
                    timeChange: function() {
                        0 != this.time && this.time--
                    },
                    LifeInvaderTime: function(e) {
                       
                        this.time = e, setInterval(this.timeChange, 1e3)
                    }
                },
                mounted: function() {
                },
                created: function() {
                    this.addEvent("LifeInvaderTime", this.LifeInvaderTime)
                },
                computed: {
                    timeMessage: function() {
                        return 0 == this.time ? "Verfügbar" : this.time + " sekunden"
                    },
                    messageCosts: function() {
                        return this.message.length <= 0 ? "0 $" : 3 * this.message.length + " $"
                    }
                }
            },
            _r = hr,
            pr = (a("5560"), Object(d["a"])(_r, mr, dr, !1, null, "68ca814f", null)),
            vr = pr.exports,
            fr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: void 0 == e.selldata.n ? "Hehler" : e.selldata.n,
                        "additional-button-text": e.selldata.n ? "ALLES VERKAUFEN" : void 0,
                        "additional-button-args": e.selldata.n ? ["SellAllItems", e.selldata.s] : void 0,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "seller-interface"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Gegenstand")]), t("th", [e._v("Preis")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Verkauf")])])]), t("tbody", e._l(this.selldata.d, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [t("img", {
                        staticClass: "image",
                        attrs: {
                            src: "images/inventoy/items/" + a.png,
                            alt: ""
                        }
                    }), t("br"), e._v(" " + e._s(a.name) + " ")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p) + " $")]), t("td", [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.sellItem(a.i)
                            }
                        }
                    }, [e._v(" Verkaufen ")])], 1)])
                })), 0)])], 1)])
            },
            br = [],
            gr = {
                name: "Seller",
                components: {
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        selldata: JSON.parse(this.data),
                        itemData: []
                    }
                },
                methods: {
                    sellItem: function(e) {
                        this.selldata.n ? this.emitServer("SellItems", this.selldata.s, e) : this.emitServer("SellLoot", this.selldata.s, e), this.hide()
                    }
                },
                created: function() {
                    var e = this;
                  
                }
            },
            yr = gr,
            Cr = (a("f847"), Object(d["a"])(yr, fr, br, !1, null, null, null)),
            kr = Cr.exports,
            wr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Ehevertrag",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.cancel()
                        }
                    }
                }, [t("div", {
                    staticClass: "marriage-contract"
                }, [t("div", {
                    staticClass: "marriage-contract-icon"
                }, [t("svg", {
                    attrs: {
                        xmlns: "http://www.w3.org/2000/svg",
                        "xmlns:xlink": "http://www.w3.org/1999/xlink",
                        version: "1.1",
                        width: "24",
                        height: "24",
                        viewBox: "0 0 24 24"
                    }
                }, [t("path", {
                    attrs: {
                        d: "M12,10L8,4.4L9.6,2H14.4L16,4.4L12,10M15.5,6.8L14.3,8.5C16.5,9.4 18,11.5 18,14A6,6 0 0,1 12,20A6,6 0 0,1 6,14C6,11.5 7.5,9.4 9.7,8.5L8.5,6.8C5.8,8.1 4,10.8 4,14A8,8 0 0,0 12,22A8,8 0 0,0 20,14C20,10.8 18.2,8.1 15.5,6.8Z"
                    }
                })])]), t("div", {
                    staticClass: "marriage-contract-details"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Partner 1 ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.p1 : "",
                        disabled: void 0 !== this.data
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.send.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.marriagePartner1,
                        callback: function(t) {
                            e.marriagePartner1 = t
                        },
                        expression: "marriagePartner1"
                    }
                })], 1)]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Partner 2 ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.p2 : "",
                        disabled: void 0 !== this.data
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.send.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.marriagePartner2,
                        callback: function(t) {
                            e.marriagePartner2 = t
                        },
                        expression: "marriagePartner2"
                    }
                })], 1)])]), t("div", {
                    staticClass: "marriage-contract-details-name"
                }, [void 0 !== this.data ? t("span", [t("span", [e._v(" Ehevertragersteller: "), t("span", {
                    staticClass: "font-weight-bold text-sibaui"
                }, [e._v(" " + e._s(this.data.c) + " ")])]), t("br"), t("br")]) : e._e(), t("span", [e._v("Nachname wird übernommen von:")]), void 0 === this.data ? t("div", [t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(0)
                        }
                    }
                }, [e._v(" Beibehalten "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.lastNameFrom,
                        expression: "lastNameFrom"
                    }],
                    attrs: {
                        type: "radio",
                        id: "partner0",
                        name: "partner",
                        value: "0"
                    },
                    domProps: {
                        checked: e._q(e.lastNameFrom, "0")
                    },
                    on: {
                        change: function(t) {
                            e.lastNameFrom = "0"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })]), t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(1)
                        }
                    }
                }, [e._v(" Partner 1 "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.lastNameFrom,
                        expression: "lastNameFrom"
                    }],
                    attrs: {
                        type: "radio",
                        id: "partner1",
                        name: "partner",
                        value: "1"
                    },
                    domProps: {
                        checked: e._q(e.lastNameFrom, "1")
                    },
                    on: {
                        change: function(t) {
                            e.lastNameFrom = "1"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })]), t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(2)
                        }
                    }
                }, [e._v(" Partner 2 "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.lastNameFrom,
                        expression: "lastNameFrom"
                    }],
                    attrs: {
                        type: "radio",
                        id: "partner2",
                        name: "partner",
                        value: "2"
                    },
                    domProps: {
                        checked: e._q(e.lastNameFrom, "2")
                    },
                    on: {
                        change: function(t) {
                            e.lastNameFrom = "2"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })])]) : t("div", [0 == this.lastNameFrom ? t("div", [e._v("Beibehalten")]) : 1 == this.lastNameFrom ? t("div", [e._v(e._s(this.data.p1))]) : t("div", [e._v(e._s(this.data.p2))])])])]), t("div", {
                    staticClass: "marriage-contract-confirmation"
                }, [void 0 === this.data ? t("CoreButton", {
                    on: {
                        click: e.signContract
                    }
                }, [e._v("Unterschreiben")]) : t("CoreButton", {
                    on: {
                        click: e.finalSignContract
                    }
                }, [e._v("Unterschreiben")])], 1)])])
            },
            Sr = [],
            Mr = {
                name: "MarriageContract",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        marriagePartner1: "",
                        marriagePartner2: "",
                        lastNameFrom: 0
                    }
                },
                methods: {
                    signContract: function() {
                        this.emitServer("CreateMarriageContract", this.marriagePartner1, this.marriagePartner2, parseInt(this.lastNameFrom)), this.hide()
                    },
                    finalSignContract: function() {
                        this.emitServer("FinalCreateMarriageContract", this.data.i), this.hide()
                    },
                    cancel: function() {
                        void 0 !== this.data && this.emitServer("CancelMarriageContract", this.data.i), this.hide()
                    },
                    changePartner: function(e) {
                        this.lastNameFrom = e
                    }
                },
                created: function() {
                    void 0 != this.data && (this.lastNameFrom = parseInt(this.data.l))
                }
            },
            xr = Mr,
            Pr = (a("16d2"), Object(d["a"])(xr, wr, Sr, !1, null, "523480ae", null)),
            Tr = Pr.exports,
            Fr = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("div", {
                    staticClass: "wrapper"
                }, [t("BaseInterface", {
                    staticClass: "goldfarming-interface",
                    attrs: {
                        title: "Goldschürfen"
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("BaseButton", {
                    staticClass: "goldfarming-button",
                    attrs: {
                        text: "Beenden"
                    },
                    on: {
                        click: function(t) {
                            return e.close()
                        }
                    }
                })], 1)], 1), 1 == e.isActive ? t("div", {
                    style: "position: absolute; top: " + e.top + "rem;left: " + e.left + "rem"
                }, [t("img", {
                    attrs: {
                        src: "images/goldreward.png"
                    },
                    on: {
                        click: function(t) {
                            return e.getReward()
                        }
                    }
                })]) : e._e()])
            },
            Br = [],
            Ir = {
                name: "GoldFarming",
                components: {
                    BaseButton: dt,
                    BaseInterface: ya
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        top: 1,
                        left: 1,
                        isActive: !1,
                        lastClick: 0
                    }
                },
                methods: {
                    close: function() {
                        this.emitServer("StopGoldFarming"), this.hide()
                    },
                    getReward: function() {
                        this.isActive = !1;
                        var e = (new Date).getTime();
                        if (0 == this.lastClick) this.lastClick = e;
                        else {
                            var t = e - this.lastClick;
                            if (t < 22e3) return void this.close()
                        }
                        this.emitServer("RewardGoldFarming")
                    },
                    changePosition: function() {
                        var e = this;
                        setTimeout((function() {
                            e.isActive = !0, e.top = 50 * Math.random(), e.left = 80 * Math.random() + 10, setTimeout((function() {
                                e.isActive = !1
                            }), 8e3), e.changePosition()
                        }), 3e4 * Math.random() + 3e4)
                    },
                    StopGoldFarming: function() {
                        this.hide()
                    }
                },
                mounted: function() {
                    this.changePosition()
                },
                created: function() {
                    this.addEvent("StopGoldFarmingClient", this.StopGoldFarming)
                }
            },
            Ar = Ir,
            Dr = (a("f77d"), a("a3e2"), Object(d["a"])(Ar, Fr, Br, !1, null, "603a4bdc", null)),
            Nr = Dr.exports,
            Or = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: e.getStorageroomTitle(),
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "storageroom"
                }, [t("CoreBox", {
                    staticClass: "house-info-door",
                    attrs: {
                        title: "Lagerhalle"
                    }
                }, [t("div", {
                    attrs: {
                        slot: "content-title"
                    },
                    slot: "content-title"
                }, [e._v("aktueller status")]), t("div", {
                    attrs: {
                        slot: "content"
                    },
                    slot: "content"
                }, [this.storagedata.l ? t("div", {
                    staticClass: "text-custom-danger"
                }, [e._v("Lagerraum geschlossen")]) : t("div", {
                    staticClass: "text-custom-success"
                }, [e._v("Lagerhalle offen")]), this.storagedata.cl ? t("div", {
                    staticClass: "text-custom-danger"
                }, [e._v("Kisten verriegelt")]) : t("div", {
                    staticClass: "text-custom-success"
                }, [e._v("Kisten entriegelt")])]), t("div", {
                    attrs: {
                        slot: "footer"
                    },
                    slot: "footer"
                }, [e.hasStorageroomAccess() ? t("div", [this.storagedata.l ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeLockStatus(!1)
                        }
                    }
                }, [e._v("Aufschließen")]) : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeLockStatus(!0)
                        }
                    }
                }, [e._v("Abschließen")]), this.storagedata.cl ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeChestLockStatus(!1)
                        }
                    }
                }, [e._v("Kisten entriegeln")]) : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.changeChestLockStatus(!0)
                        }
                    }
                }, [e._v("Kisten verriegeln")])], 1) : e._e(), this.storagedata.l || this.storagedata.s ? e._e() : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.enterStorageroom()
                        }
                    }
                }, [e._v("Betreten")]), !this.storagedata.l && this.storagedata.s ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.leaveStorageroom()
                        }
                    }
                }, [e._v("Verlassen")]) : e._e(), e.isStorageroomOwner() && this.storagedata.s ? t("div", [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.upgradeStorageroom()
                        }
                    }
                }, [e._v("Kisten ausbauen")])], 1) : e._e(), e.isStorageroomOwner() && void 0 != this.storagedata.ll && this.storagedata.s ? t("div", [0 == this.storagedata.ll ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.upgradeStorageroomLaptop()
                        }
                    }
                }, [e._v("Laptop ausbauen")]) : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.upgradeStorageroomLaptop()
                        }
                    }
                }, [e._v("LED verbauen")])], 1) : e._e()], 1)])], 1)])
            },
            Lr = [],
            Hr = {
                name: "Storageroom",
                components: {
                    CoreButton: x,
                    CoreBox: ca,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        storagedata: JSON.parse(this.data),
                        page: 1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    isStorageroomOwner: function() {
                        return 2 == this.storagedata.o
                    },
                    hasStorageroomAccess: function() {
                        return this.storagedata.o > 0
                    },
                    getStorageroomTitle: function() {
                        return "ID: " + this.storagedata.i + " - Lagerhaus"
                    },
                    changeLockStatus: function(e) {
                        this.hasStorageroomAccess() && (this.storagedata.l = e, this.emitServer("UpdateStorageroomLock", this.storagedata.i, e))
                    },
                    changeChestLockStatus: function(e) {
                        this.hasStorageroomAccess() && (this.storagedata.cl = e, this.emitServer("UpdateStorageroomChestLock", this.storagedata.i, e))
                    },
                    enterStorageroom: function() {
                        this.emitServer("EnterStorageroom", this.storagedata.i), this.close()
                    },
                    upgradeStorageroom: function() {
                        this.emitServer("UpgradeStorageroom", this.storagedata.i), this.close()
                    },
                    upgradeStorageroomLaptop: function() {
                        this.emitServer("UpgradeStorageroomLaptop", this.storagedata.i), this.close()
                    },
                    leaveStorageroom: function() {
                        this.emitServer("LeaveStorageroom", this.storagedata.i), this.close()
                    }
                }
            },
            zr = Hr,
            jr = (a("948d"), Object(d["a"])(zr, Or, Lr, !1, null, "3a627f04", null)),
            Rr = jr.exports,
            Vr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: e.data.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "hintshop"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v(" ")]), t("th", [e._v("Name")]), t("th", [e._v("Preis")]), t("th", {
                    attrs: {
                        width: "20%"
                    }
                }, [e._v("Kaufen")])])]), t("tbody", e._l(e.data.data, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [void 0 == a.t ? t("img", {
                        staticClass: "clickable hintshop-item",
                        attrs: {
                            src: "images/gps.png",
                            alt: ""
                        },
                        on: {
                            click: function(t) {
                                return e.buy(a)
                            }
                        }
                    }) : t("img", {
                        staticClass: "clickable hintshop-item",
                        attrs: {
                            src: "images/information.png",
                            alt: ""
                        },
                        on: {
                            click: function(t) {
                                return e.buy(a)
                            }
                        }
                    })]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p) + " $")]), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.buy(a)
                            }
                        }
                    }, [e._v("Kaufen")])], 1)])
                })), 0)])], 1)])
            },
            Er = [],
            Gr = {
                name: "HintShop",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    buy: function(e) {
                        this.emitServer("HintShopBuy", this.data.i, e.i), this.hide()
                    }
                }
            },
            Wr = Gr,
            Kr = (a("5a99"), Object(d["a"])(Wr, Vr, Er, !1, null, "cc93e5c8", null)),
            Ur = Kr.exports,
            $r = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: true == e.isTeam ? "Teamübersicht" : "Spielerübersicht",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "playeroverview core-interface-md"
                }, [t("div", {
                    staticClass: "playeroverview-header"
                }, [t("div", {
                    staticClass: "playeroverview-header-search"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Name"
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1)]), t("div", {
                    staticClass: "playeroverview-body"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "10%"
                    }
                }, [e._v("#")]), t("th", {
                    staticClass: "text-left"
                }, [e._v("Spieler")]), t("th", {
                    staticClass: "text-center"
                }, [e._v("Funk")]), t("th", {
                    staticClass: "text-center",
                    attrs: {
                        width: "32%"
                    }
                }, [e._v("VoiceHash")]), false == e.isTeam ? t("th", [e._v(" ")]) : e._e()])]), t("tbody", e._l(e.searchPlayers, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.f))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.vh))]), false == e.isTeam ? t("td", {
                        staticClass: "text-center"
                    }, [t("span", {
                        staticClass: "mdi mdi-eye",
                        on: {
                            click: function(t) {
                                return e.spectatePlayer(a)
                            }
                        }
                    }), t("span", {
                        staticClass: "mdi mdi-account-arrow-right",
                        on: {
                            click: function(t) {
                                return e.goToPlayer(a)
                            }
                        }
                    })]) : e._e()])
                })), 0)])], 1)])])
            },
            qr = [],
            Jr = {
                name: "PlayerOverview",
                components: {
                    CoreTable: ge,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        players: JSON.parse(this.data).d,
                        isTeam: JSON.parse(this.data).t,
                        search: ""
                    }
                },
                methods: {
                    goToPlayer: function(e) {
                        this.emitServer("GoToPlayer", e.n)
                    },
                    spectatePlayer: function(e) {
                        this.emitServer("SpectatePlayer", e.n)
                    }
                },
                computed: {
                    searchPlayers: function() {
                        var e = this,
                            t = this.players.filter((function(t) {
                                return t.n.toLowerCase().includes(e.search.toLowerCase()) || t.i.toString().includes(e.search.toLowerCase()) || t.f.toString().includes(e.search.toLowerCase()) || t.vh.toString().includes(e.search.toLowerCase())
                            }));
                        return t.sort((function(e, t) {
                            return e.vh - t.vh
                        }))
                    }
                }
            },
            Zr = Jr,
            Xr = (a("a820"), Object(d["a"])(Zr, $r, qr, !1, null, null, null)),
            Yr = Xr.exports,
            Qr = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: this.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "processor-select"
                }, [t("div", {
                    staticClass: "processor-select-header"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Suche..."
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "processor-select-body"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Aktion")])])]), t("tbody", e._l(e.searchValues, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.select(a)
                            }
                        }
                    }, [e._v(e._s(e.data.ft))])], 1)])
                })), 0)])], 1)])])
            },
            eo = [],
            to = {
                name: "Select",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        values: this.data.values,
                        search: ""
                    }
                },
                methods: {
                    select: function(e) {
                        void 0 != this.data.d ? this.emitServer(this.data.fe, parseInt(this.data.d), parseInt(e.i)) : this.emitServer(this.data.fe, parseInt(e.i)), this.hide()
                    }
                },
                computed: {
                    searchValues: function() {
                        var e = this;
                        return this.values.filter((function(t) {
                            return t.n.toLowerCase().includes(e.search) || t.i.toString().includes(e.search)
                        }))
                    }
                }
            },
            ao = to,
            io = (a("e06c"), Object(d["a"])(ao, Qr, eo, !1, null, "0ab9b646", null)),
            so = io.exports,
            no = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: this.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "processor-image",
                    style: {
                        backgroundImage: "url(images/interface/selectimage/" + this.data.p + this.selectedValue.i + ".jpg)"
                    }
                }, [t("div", {
                    staticClass: "processor-selector"
                }, [t("div", {
                    staticClass: "processor-selector-left"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })])], 1), t("div", {
                    staticClass: "processor-selector-middle"
                }, [t("div", {
                    staticClass: "processor-selector-middle-title"
                }, [e._v(" " + e._s(e.selectedValue.n) + " ")]), t("div", {
                    staticClass: "processor-selector-middle-start"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.start()
                        }
                    }
                }, [e._v(" " + e._s(this.data.ft) + " ")])], 1)]), t("div", {
                    staticClass: "processor-selector-right"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })])], 1)])])])
            },
            ro = [],
            oo = {
                name: "SelectImage",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        values: this.data.values,
                        selectedIndex: 0,
                        selectedValue: this.data.values[0]
                    }
                },
                methods: {
                    decreaseType: function() {
                        0 == this.selectedIndex ? this.selectedIndex = this.values.length - 1 : this.selectedIndex = this.selectedIndex - 1, this.selectedValue = this.values[this.selectedIndex]
                    },
                    increaseType: function() {
                        this.selectedIndex == this.values.length - 1 ? this.selectedIndex = 0 : this.selectedIndex = this.selectedIndex + 1, this.selectedValue = this.values[this.selectedIndex]
                    },
                    getImagePath: function() {
                        return "./images/interface/selectimage/" + this.data.p + this.selectedValue.i + ".jpg"
                    },
                    start: function() {
                        void 0 != this.data.d ? this.emitServer(this.data.fe, parseInt(this.data.d), parseInt(this.selectedValue.i)) : this.emitServer(this.data.fe, parseInt(this.selectedValue.i)), this.hide()
                    }
                }
            },
            co = oo,
            lo = (a("4e31"), Object(d["a"])(co, no, ro, !1, null, "6fa48c03", null)),
            uo = lo.exports,
            mo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "tattoo"
                }, [t("div", {
                    staticClass: "tattoo-box-left"
                }, [t("div", {
                    staticClass: "tattoo-title"
                }, [e._v("Tattoostudio")]), t("div", {
                    staticClass: "tattoo-body"
                }, [t("div", {
                    staticClass: "tattoo-body-components"
                }, e._l(e.categories, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "tattoo-body-component",
                        class: {
                            active: a.i == e.selectedCategory
                        },
                        on: {
                            click: function(t) {
                                return e.selectCategory(a.i)
                            }
                        }
                    }, [t("div", {
                        staticClass: "component-image"
                    }, [t("img", {
                        attrs: {
                            src: "images/icons/" + e.trim(a.n) + ".png",
                            alt: ""
                        }
                    })]), t("div", {
                        staticClass: "component-title"
                    }, [e._v(e._s(a.n))])])
                })), 0)])]), -1 != e.selectedCategory ? t("div", {
                    staticClass: "tattoo-box-right"
                }, [t("div", {
                    staticClass: "tattoo-box-right-header"
                }, [e._v("Auswahl")]), t("div", {
                    staticClass: "tattoo-box-right-items"
                }, e._l(e.tattoos, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "tattoo-box-right-item clickable",
                        class: {
                            active: a == e.selectedTattoo
                        },
                        on: {
                            click: function(t) {
                                return e.previewTattoo(a)
                            }
                        }
                    }, [e._v(" " + e._s(a.name) + " ")])
                })), 0)]) : e._e(), t("div", {
                    staticClass: "tattoo-confirmation"
                }, [t("div", {
                    staticClass: "tattoo-confirmation-price"
                }, [t("span", {
                    staticClass: "tattoo-confirmation-price-title"
                }, [e._v("Preis:")]), null != e.selectedTattoo ? t("span", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(e.selectedTattoo.price) + " $")]) : e._e()]), t("div", {
                    staticClass: "tattoo-confirmation-buttons"
                }, [t("BaseButton", {
                    attrs: {
                        text: "Fertig"
                    },
                    on: {
                        click: e.buyTattoo
                    }
                }), t("BaseButton", {
                    attrs: {
                        text: "Schließen"
                    },
                    on: {
                        click: e.close
                    }
                })], 1)]), t("BaseSlider", {
                    staticClass: "rotation-slider",
                    attrs: {
                        min: "-360",
                        max: "360"
                    },
                    on: {
                        input: e.setRotation
                    },
                    model: {
                        value: e.rotation,
                        callback: function(t) {
                            e.rotation = t
                        },
                        expression: "rotation"
                    }
                })], 1)
            },
            ho = [],
            _o = {
                name: "Tattoo",
                components: {
                    BaseSlider: rt,
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        categories: [{
                            i: 1,
                            n: "Brust"
                        }, {
                            i: 2,
                            n: "Kopf"
                        }, {
                            i: 3,
                            n: "Linkes Bein"
                        }, {
                            i: 4,
                            n: "Rechtes Bein"
                        }, {
                            i: 5,
                            n: "Linker Arm"
                        }, {
                            i: 6,
                            n: "Rechter Arm"
                        }, {
                            i: 7,
                            n: "Rücken"
                        }, {
                            i: 8,
                            n: "Haar"
                        }],
                        selectedCategory: -1,
                        rotation: 0,
                        shopId: this.data.i,
                        tattoos: [],
                        tattooData: [],
                        gender: this.data.g,
                        selectedTattoo: null,
                        selectedId: 0
                    }
                },
                methods: {
                    selectCategory: function(e) {
                        var t = this;
                        this.selectedTattoo = null, this.selectedId = 0, this.selectedCategory = e, this.rotation = 0, this.setRotation(), this.emit("CreateTattoCamera", e), this.tattoos = this.tattooData[this.selectedCategory], this.tattoos = Object.values(this.tattoos).filter((function(e) {
                            return 0 == t.data.g ? e.male.length > 1 : e.female.length > 1
                        }))
                    },
                    close: function() {
                        this.emit("DestroyCamera"), this.emit("ActualizeTattoos"), this.hide()
                    },
                    setRotation: function() {
                        this.emit("SetRotation", this.rotation)
                    },
                    previewTattoo: function(e) {
                        this.selectedId = e.id, this.selectedTattoo = e, 0 == this.gender ? this.emit("SetTattoo", e.overlay, e.male) : this.emit("SetTattoo", e.overlay, e.female)
                    },
                    buyTattoo: function() {
                        this.emitServer("BuyTattoo", this.data.i, this.selectedId)
                    },
                    trim: function(e) {
                        var t = e.replace(/ /g, "");
                        return t.replace(/\u00fc/g, "ue")
                    }
                },
                computed: {},
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        var a;
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (e.emit("CreateTattoCamera", -1), !e.dev) {
                                        t.next = 5;
                                        break
                                    }
                                    a = {
                                        1: {
                                            2: {
                                                107: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Cash is King",
                                                    male: "MP_Buis_M_Neck_000",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                108: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Bold Dollar Sign",
                                                    male: "MP_Buis_M_Neck_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                109: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Script Dollar Sign",
                                                    male: "MP_Buis_M_Neck_002",
                                                    female: "",
                                                    price: 16200
                                                },
                                                110: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "$100",
                                                    male: "MP_Buis_M_Neck_003",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                127: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Val-de-Grace Logo",
                                                    male: "",
                                                    female: "MP_Buis_F_Neck_000",
                                                    price: 16200
                                                },
                                                128: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Money Rose",
                                                    male: "",
                                                    female: "MP_Buis_F_Neck_001",
                                                    price: 16200
                                                },
                                                225: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Five Stars",
                                                    male: "mpHeist3_Tat_000_M",
                                                    female: "mpHeist3_Tat_000_F",
                                                    price: 27e3
                                                },
                                                226: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Ace of Spades",
                                                    male: "mpHeist3_Tat_001_M",
                                                    female: "mpHeist3_Tat_001_F",
                                                    price: 19800
                                                },
                                                227: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Animal",
                                                    male: "mpHeist3_Tat_002_M",
                                                    female: "mpHeist3_Tat_002_F",
                                                    price: 27e3
                                                },
                                                228: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Assault Rifle",
                                                    male: "mpHeist3_Tat_003_M",
                                                    female: "mpHeist3_Tat_003_F",
                                                    price: 27e3
                                                },
                                                229: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Bandage",
                                                    male: "mpHeist3_Tat_004_M",
                                                    female: "mpHeist3_Tat_004_F",
                                                    price: 16200
                                                },
                                                230: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Spades",
                                                    male: "mpHeist3_Tat_005_M",
                                                    female: "mpHeist3_Tat_005_F",
                                                    price: 7200
                                                },
                                                231: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Crowned",
                                                    male: "mpHeist3_Tat_006_M",
                                                    female: "mpHeist3_Tat_006_F",
                                                    price: 16200
                                                },
                                                232: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Two Horns",
                                                    male: "mpHeist3_Tat_007_M",
                                                    female: "mpHeist3_Tat_007_F",
                                                    price: 19800
                                                },
                                                233: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Ice Cream",
                                                    male: "mpHeist3_Tat_008_M",
                                                    female: "mpHeist3_Tat_008_F",
                                                    price: 16200
                                                },
                                                234: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Knifed",
                                                    male: "mpHeist3_Tat_009_M",
                                                    female: "mpHeist3_Tat_009_F",
                                                    price: 7200
                                                },
                                                235: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Green Leaf",
                                                    male: "mpHeist3_Tat_010_M",
                                                    female: "mpHeist3_Tat_010_F",
                                                    price: 10800
                                                },
                                                236: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Lipstick Kiss",
                                                    male: "mpHeist3_Tat_011_M",
                                                    female: "mpHeist3_Tat_011_F",
                                                    price: 10800
                                                },
                                                237: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Razor Pop",
                                                    male: "mpHeist3_Tat_012_M",
                                                    female: "mpHeist3_Tat_012_F",
                                                    price: 19800
                                                },
                                                238: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS Star",
                                                    male: "mpHeist3_Tat_013_M",
                                                    female: "mpHeist3_Tat_013_F",
                                                    price: 7200
                                                },
                                                239: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS Wings",
                                                    male: "mpHeist3_Tat_014_M",
                                                    female: "mpHeist3_Tat_014_F",
                                                    price: 16200
                                                },
                                                240: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "On/Off",
                                                    male: "mpHeist3_Tat_015_M",
                                                    female: "mpHeist3_Tat_015_F",
                                                    price: 7200
                                                },
                                                241: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Sleepy",
                                                    male: "mpHeist3_Tat_016_M",
                                                    female: "mpHeist3_Tat_016_F",
                                                    price: 16200
                                                },
                                                242: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Space Monkey",
                                                    male: "mpHeist3_Tat_017_M",
                                                    female: "mpHeist3_Tat_017_F",
                                                    price: 7200
                                                },
                                                243: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Stitches",
                                                    male: "mpHeist3_Tat_018_M",
                                                    female: "mpHeist3_Tat_018_F",
                                                    price: 19800
                                                },
                                                244: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Teddy Bear",
                                                    male: "mpHeist3_Tat_019_M",
                                                    female: "mpHeist3_Tat_019_F",
                                                    price: 10800
                                                },
                                                245: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "UFO",
                                                    male: "mpHeist3_Tat_020_M",
                                                    female: "mpHeist3_Tat_020_F",
                                                    price: 16200
                                                },
                                                246: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Wanted",
                                                    male: "mpHeist3_Tat_021_M",
                                                    female: "mpHeist3_Tat_021_F",
                                                    price: 16200
                                                },
                                                247: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Thog's Sword",
                                                    male: "mpHeist3_Tat_022_M",
                                                    female: "mpHeist3_Tat_022_F",
                                                    price: 10800
                                                },
                                                267: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Hearts",
                                                    male: "mpHeist3_Tat_042_M",
                                                    female: "mpHeist3_Tat_042_F",
                                                    price: 10800
                                                },
                                                268: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Diamonds",
                                                    male: "mpHeist3_Tat_043_M",
                                                    female: "mpHeist3_Tat_043_F",
                                                    price: 7200
                                                },
                                                269: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Clubs",
                                                    male: "mpHeist3_Tat_044_M",
                                                    female: "mpHeist3_Tat_044_F",
                                                    price: 7200
                                                },
                                                700: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Bright Diamond",
                                                    male: "MP_Security_Tat_001_M",
                                                    female: "MP_Security_Tat_001_F",
                                                    price: 7200
                                                },
                                                701: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Hustle",
                                                    male: "MP_Security_Tat_002_M",
                                                    female: "MP_Security_Tat_002_F",
                                                    price: 16200
                                                },
                                                726: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Black Widow",
                                                    male: "MP_Security_Tat_027_M",
                                                    female: "MP_Security_Tat_027_F",
                                                    price: 10800
                                                }
                                            },
                                            5: {
                                                111: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "$100 Bill",
                                                    male: "MP_Buis_M_LeftArm_000",
                                                    female: "",
                                                    price: 19800
                                                },
                                                112: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "All-Seeing Eye",
                                                    male: "MP_Buis_M_LeftArm_001",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                130: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Greed is Good",
                                                    male: "",
                                                    female: "MP_Buis_F_LArm_000",
                                                    price: 19800
                                                },
                                                265: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Tiger Heart",
                                                    male: "mpHeist3_Tat_040_M",
                                                    female: "mpHeist3_Tat_040_F",
                                                    price: 19800
                                                },
                                                266: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Mighty Thog",
                                                    male: "mpHeist3_Tat_041_M",
                                                    female: "mpHeist3_Tat_041_F",
                                                    price: 43200
                                                },
                                                474: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Suits",
                                                    male: "MP_Vinewood_Tat_002_M",
                                                    female: "MP_Vinewood_Tat_002_F",
                                                    price: 43200
                                                },
                                                477: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Get Lucky",
                                                    male: "MP_Vinewood_Tat_005_M",
                                                    female: "MP_Vinewood_Tat_005_F",
                                                    price: 43200
                                                },
                                                486: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Vice",
                                                    male: "MP_Vinewood_Tat_014_M",
                                                    female: "MP_Vinewood_Tat_014_F",
                                                    price: 27e3
                                                },
                                                491: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Cant Win Them All",
                                                    male: "MP_Vinewood_Tat_019_M",
                                                    female: "MP_Vinewood_Tat_019_F",
                                                    price: 39600
                                                },
                                                498: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Banknote Rose",
                                                    male: "MP_Vinewood_Tat_026_M",
                                                    female: "MP_Vinewood_Tat_026_F",
                                                    price: 43200
                                                },
                                                705: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Skeleton Shot",
                                                    male: "MP_Security_Tat_006_M",
                                                    female: "MP_Security_Tat_006_F",
                                                    price: 16200
                                                },
                                                709: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Music Is The Remedy",
                                                    male: "MP_Security_Tat_010_M",
                                                    female: "MP_Security_Tat_010_F",
                                                    price: 43200
                                                },
                                                710: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Serpent Mic",
                                                    male: "MP_Security_Tat_011_M",
                                                    female: "MP_Security_Tat_011_F",
                                                    price: 16200
                                                },
                                                718: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Weed Knuckles",
                                                    male: "MP_Security_Tat_019_M",
                                                    female: "MP_Security_Tat_019_F",
                                                    price: 7200
                                                }
                                            },
                                            6: {
                                                113: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Dollar Skull",
                                                    male: "MP_Buis_M_RightArm_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                114: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Green",
                                                    male: "MP_Buis_M_RightArm_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                129: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Dollar Sign",
                                                    male: "",
                                                    female: "MP_Buis_F_RArm_000",
                                                    price: 16200
                                                },
                                                259: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS Monogram",
                                                    male: "mpHeist3_Tat_034_M",
                                                    female: "mpHeist3_Tat_034_F",
                                                    price: 10800
                                                },
                                                476: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Lady Luck",
                                                    male: "MP_Vinewood_Tat_004_M",
                                                    female: "MP_Vinewood_Tat_004_F",
                                                    price: 43200
                                                },
                                                490: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "The Gamblers Life",
                                                    male: "MP_Vinewood_Tat_018_M",
                                                    female: "MP_Vinewood_Tat_018_F",
                                                    price: 39600
                                                },
                                                497: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Queen of Roses",
                                                    male: "MP_Vinewood_Tat_025_M",
                                                    female: "MP_Vinewood_Tat_025_F",
                                                    price: 30600
                                                },
                                                500: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Skull & Aces",
                                                    male: "MP_Vinewood_Tat_028_M",
                                                    female: "MP_Vinewood_Tat_028_F",
                                                    price: 27e3
                                                },
                                                699: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Hood Skeleton",
                                                    male: "MP_Security_Tat_000_M",
                                                    female: "MP_Security_Tat_000_F",
                                                    price: 27e3
                                                },
                                                704: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Peacock",
                                                    male: "MP_Security_Tat_005_M",
                                                    female: "MP_Security_Tat_005_F",
                                                    price: 39600
                                                },
                                                706: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Ballas 4 Life",
                                                    male: "MP_Security_Tat_007_M",
                                                    female: "MP_Security_Tat_007_F",
                                                    price: 19800
                                                },
                                                708: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Ascension",
                                                    male: "MP_Security_Tat_009_M",
                                                    female: "MP_Security_Tat_009_F",
                                                    price: 39600
                                                },
                                                711: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Zombie Rhymes",
                                                    male: "MP_Security_Tat_012_M",
                                                    female: "MP_Security_Tat_012_F",
                                                    price: 19800
                                                },
                                                719: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Dog Fist",
                                                    male: "MP_Security_Tat_020_M",
                                                    female: "MP_Security_Tat_020_F",
                                                    price: 7200
                                                }
                                            },
                                            1: {
                                                115: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Refined Hustler",
                                                    male: "MP_Buis_M_Stomach_000",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                116: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Rich",
                                                    male: "MP_Buis_M_Chest_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                117: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "$$$",
                                                    male: "MP_Buis_M_Chest_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                119: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "High Roller",
                                                    male: "",
                                                    female: "MP_Buis_F_Chest_000",
                                                    price: 27e3
                                                },
                                                120: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Makin' Money",
                                                    male: "",
                                                    female: "MP_Buis_F_Chest_001",
                                                    price: 27e3
                                                },
                                                121: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Love Money",
                                                    male: "",
                                                    female: "MP_Buis_F_Chest_002",
                                                    price: 7200
                                                },
                                                122: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Diamond Back",
                                                    male: "",
                                                    female: "MP_Buis_F_Stom_000",
                                                    price: 27e3
                                                },
                                                123: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Santo Capra Logo",
                                                    male: "",
                                                    female: "MP_Buis_F_Stom_001",
                                                    price: 7200
                                                },
                                                124: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Money Bag",
                                                    male: "",
                                                    female: "MP_Buis_F_Stom_002",
                                                    price: 7200
                                                },
                                                250: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Davis",
                                                    male: "mpHeist3_Tat_025_M",
                                                    female: "mpHeist3_Tat_025_F",
                                                    price: 16200
                                                },
                                                251: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Dignity",
                                                    male: "mpHeist3_Tat_026_M",
                                                    female: "mpHeist3_Tat_026_F",
                                                    price: 30600
                                                },
                                                254: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Fatal Incursion",
                                                    male: "mpHeist3_Tat_029_M",
                                                    female: "mpHeist3_Tat_029_F",
                                                    price: 43200
                                                },
                                                258: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS City",
                                                    male: "mpHeist3_Tat_033_M",
                                                    female: "mpHeist3_Tat_033_F",
                                                    price: 16200
                                                },
                                                260: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS Panic",
                                                    male: "mpHeist3_Tat_035_M",
                                                    female: "mpHeist3_Tat_035_F",
                                                    price: 16200
                                                },
                                                262: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Ladybug",
                                                    male: "mpHeist3_Tat_037_M",
                                                    female: "mpHeist3_Tat_037_F",
                                                    price: 30600
                                                },
                                                472: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "In the Pocket",
                                                    male: "MP_Vinewood_Tat_000_M",
                                                    female: "MP_Vinewood_Tat_000_F",
                                                    price: 30600
                                                },
                                                475: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Royal Flush",
                                                    male: "MP_Vinewood_Tat_003_M",
                                                    female: "MP_Vinewood_Tat_003_F",
                                                    price: 19800
                                                },
                                                484: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Skull of Suits",
                                                    male: "MP_Vinewood_Tat_012_M",
                                                    female: "MP_Vinewood_Tat_012_F",
                                                    price: 43200
                                                },
                                                488: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Rose & Aces",
                                                    male: "MP_Vinewood_Tat_016_M",
                                                    female: "MP_Vinewood_Tat_016_F",
                                                    price: 39600
                                                },
                                                494: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Blood Money",
                                                    male: "MP_Vinewood_Tat_022_M",
                                                    female: "MP_Vinewood_Tat_022_F",
                                                    price: 19800
                                                },
                                                495: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Lucky 7s",
                                                    male: "MP_Vinewood_Tat_023_M",
                                                    female: "MP_Vinewood_Tat_023_F",
                                                    price: 43200
                                                },
                                                496: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Cash Mouth",
                                                    male: "MP_Vinewood_Tat_024_M",
                                                    female: "MP_Vinewood_Tat_024_F",
                                                    price: 43200
                                                },
                                                503: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Gambling Royalty",
                                                    male: "MP_Vinewood_Tat_031_M",
                                                    female: "MP_Vinewood_Tat_031_F",
                                                    price: 39600
                                                },
                                                715: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "All From The Same Tree",
                                                    male: "MP_Security_Tat_016_M",
                                                    female: "MP_Security_Tat_016_F",
                                                    price: 27e3
                                                },
                                                716: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "King of the Jungle",
                                                    male: "MP_Security_Tat_017_M",
                                                    female: "MP_Security_Tat_017_F",
                                                    price: 19800
                                                },
                                                717: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Night Owl",
                                                    male: "MP_Security_Tat_018_M",
                                                    female: "MP_Security_Tat_018_F",
                                                    price: 27e3
                                                },
                                                723: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Beatbox Silhouette",
                                                    male: "MP_Security_Tat_024_M",
                                                    female: "MP_Security_Tat_024_F",
                                                    price: 16200
                                                },
                                                724: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Davis Flames",
                                                    male: "MP_Security_Tat_025_M",
                                                    female: "MP_Security_Tat_025_F",
                                                    price: 16200
                                                }
                                            },
                                            7: {
                                                118: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Makin' Paper",
                                                    male: "MP_Buis_M_Back_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                125: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Respect",
                                                    male: "",
                                                    female: "MP_Buis_F_Back_000",
                                                    price: 16200
                                                },
                                                126: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Gold Digger",
                                                    male: "",
                                                    female: "MP_Buis_F_Back_001",
                                                    price: 7200
                                                },
                                                248: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Bigfoot",
                                                    male: "mpHeist3_Tat_023_M",
                                                    female: "mpHeist3_Tat_023_F",
                                                    price: 43200
                                                },
                                                249: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Mount Chiliad",
                                                    male: "mpHeist3_Tat_024_M",
                                                    female: "mpHeist3_Tat_024_F",
                                                    price: 27e3
                                                },
                                                252: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Epsilon",
                                                    male: "mpHeist3_Tat_027_M",
                                                    female: "mpHeist3_Tat_027_F",
                                                    price: 43200
                                                },
                                                253: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Bananas Gone Bad",
                                                    male: "mpHeist3_Tat_028_M",
                                                    female: "mpHeist3_Tat_028_F",
                                                    price: 30600
                                                },
                                                255: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Howitzer",
                                                    male: "mpHeist3_Tat_030_M",
                                                    female: "mpHeist3_Tat_030_F",
                                                    price: 27e3
                                                },
                                                261: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "LS Shield",
                                                    male: "mpHeist3_Tat_036_M",
                                                    female: "mpHeist3_Tat_036_F",
                                                    price: 30600
                                                },
                                                263: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Robot Bubblegum",
                                                    male: "mpHeist3_Tat_038_M",
                                                    female: "mpHeist3_Tat_038_F",
                                                    price: 43200
                                                },
                                                264: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Space Rangers",
                                                    male: "mpHeist3_Tat_039_M",
                                                    female: "mpHeist3_Tat_039_F",
                                                    price: 30600
                                                },
                                                473: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Jackpot",
                                                    male: "MP_Vinewood_Tat_001_M",
                                                    female: "MP_Vinewood_Tat_001_F",
                                                    price: 30600
                                                },
                                                478: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Wheel of Suits",
                                                    male: "MP_Vinewood_Tat_006_M",
                                                    female: "MP_Vinewood_Tat_006_F",
                                                    price: 30600
                                                },
                                                479: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "777",
                                                    male: "MP_Vinewood_Tat_007_M",
                                                    female: "MP_Vinewood_Tat_007_F",
                                                    price: 27e3
                                                },
                                                480: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Snake Eyes",
                                                    male: "MP_Vinewood_Tat_008_M",
                                                    female: "MP_Vinewood_Tat_008_F",
                                                    price: 43200
                                                },
                                                481: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Till Death Do Us Part",
                                                    male: "MP_Vinewood_Tat_009_M",
                                                    female: "MP_Vinewood_Tat_009_F",
                                                    price: 43200
                                                },
                                                482: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Photo Finish",
                                                    male: "MP_Vinewood_Tat_010_M",
                                                    female: "MP_Vinewood_Tat_010_F",
                                                    price: 39600
                                                },
                                                483: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Lifes a Gamble",
                                                    male: "MP_Vinewood_Tat_011_M",
                                                    female: "MP_Vinewood_Tat_011_F",
                                                    price: 43200
                                                },
                                                487: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "The Jolly Joker",
                                                    male: "MP_Vinewood_Tat_015_M",
                                                    female: "MP_Vinewood_Tat_015_F",
                                                    price: 39600
                                                },
                                                489: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Roll the Dice",
                                                    male: "MP_Vinewood_Tat_017_M",
                                                    female: "MP_Vinewood_Tat_017_F",
                                                    price: 43200
                                                },
                                                493: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Show Your Hand",
                                                    male: "MP_Vinewood_Tat_021_M",
                                                    female: "MP_Vinewood_Tat_021_F",
                                                    price: 43200
                                                },
                                                501: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "The Table",
                                                    male: "MP_Vinewood_Tat_029_M",
                                                    female: "MP_Vinewood_Tat_029_F",
                                                    price: 43200
                                                },
                                                502: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "The Royals",
                                                    male: "MP_Vinewood_Tat_030_M",
                                                    female: "MP_Vinewood_Tat_030_F",
                                                    price: 43200
                                                },
                                                504: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Play Your Ace",
                                                    male: "MP_Vinewood_Tat_032_M",
                                                    female: "MP_Vinewood_Tat_032_F",
                                                    price: 39600
                                                },
                                                703: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Hood Heart",
                                                    male: "MP_Security_Tat_004_M",
                                                    female: "MP_Security_Tat_004_F",
                                                    price: 39600
                                                },
                                                707: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Los Santos Tag",
                                                    male: "MP_Security_Tat_008_M",
                                                    female: "MP_Security_Tat_008_F",
                                                    price: 16200
                                                },
                                                712: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Blessed Boombox",
                                                    male: "MP_Security_Tat_013_M",
                                                    female: "MP_Security_Tat_013_F",
                                                    price: 39600
                                                },
                                                713: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Chamberlain Hills",
                                                    male: "MP_Security_Tat_014_M",
                                                    female: "MP_Security_Tat_014_F",
                                                    price: 39600
                                                },
                                                714: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Smoking Barrels",
                                                    male: "MP_Security_Tat_015_M",
                                                    female: "MP_Security_Tat_015_F",
                                                    price: 27e3
                                                },
                                                725: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Dollar Guns Crossed",
                                                    male: "MP_Security_Tat_026_M",
                                                    female: "MP_Security_Tat_026_F",
                                                    price: 27e3
                                                }
                                            },
                                            3: {
                                                131: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Single",
                                                    male: "",
                                                    female: "MP_Buis_F_LLeg_000",
                                                    price: 16200
                                                },
                                                257: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Love Fist",
                                                    male: "mpHeist3_Tat_032_M",
                                                    female: "mpHeist3_Tat_032_F",
                                                    price: 39600
                                                },
                                                485: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "One-armed Bandit",
                                                    male: "MP_Vinewood_Tat_013_M",
                                                    female: "MP_Vinewood_Tat_013_F",
                                                    price: 30600
                                                },
                                                499: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "8-Ball Rose",
                                                    male: "MP_Vinewood_Tat_027_M",
                                                    female: "MP_Vinewood_Tat_027_F",
                                                    price: 16200
                                                },
                                                721: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "LS Smoking Cartridges",
                                                    male: "MP_Security_Tat_022_M",
                                                    female: "MP_Security_Tat_022_F",
                                                    price: 16200
                                                },
                                                722: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Trust",
                                                    male: "MP_Security_Tat_023_M",
                                                    female: "MP_Security_Tat_023_F",
                                                    price: 16200
                                                }
                                            },
                                            4: {
                                                132: {
                                                    overlay: "mpbusiness_overlays",
                                                    name: "Diamond Crown",
                                                    male: "",
                                                    female: "MP_Buis_F_RLeg_000",
                                                    price: 16200
                                                },
                                                256: {
                                                    overlay: "mpheist3_overlays",
                                                    name: "Kifflom",
                                                    male: "mpHeist3_Tat_031_M",
                                                    female: "mpHeist3_Tat_031_F",
                                                    price: 43200
                                                },
                                                492: {
                                                    overlay: "mpvinewood_overlays",
                                                    name: "Cash is King",
                                                    male: "MP_Vinewood_Tat_020_M",
                                                    female: "MP_Vinewood_Tat_020_F",
                                                    price: 30600
                                                },
                                                702: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Bandana Knife",
                                                    male: "MP_Security_Tat_003_M",
                                                    female: "MP_Security_Tat_003_F",
                                                    price: 27e3
                                                },
                                                720: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Graffiti Skull",
                                                    male: "MP_Security_Tat_021_M",
                                                    female: "MP_Security_Tat_021_F",
                                                    price: 43200
                                                }
                                            },
                                            8: {
                                                727: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Top Knot",
                                                    male: "MP_Security_Hair_001_M",
                                                    female: "",
                                                    price: 200
                                                },
                                                728: {
                                                    overlay: "mpsecurity_overlays",
                                                    name: "Pixie Hair",
                                                    male: "",
                                                    female: "MP_Security_Hair_000_F",
                                                    price: 200
                                                }
                                            }
                                        },
                                        2: {
                                            7: {
                                                13: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Ship Arms",
                                                    male: "MP_Bea_M_Back_000",
                                                    female: "",
                                                    price: 39600
                                                },
                                                29: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Rock Solid",
                                                    male: "",
                                                    female: "MP_Bea_F_Back_000",
                                                    price: 30600
                                                },
                                                30: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Hibiscus Flower Duo",
                                                    male: "",
                                                    female: "MP_Bea_F_Back_001",
                                                    price: 19800
                                                },
                                                31: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Shrimp",
                                                    male: "",
                                                    female: "MP_Bea_F_Back_002",
                                                    price: 10800
                                                },
                                                39: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Sea Horses",
                                                    male: "",
                                                    female: "MP_Bea_F_Should_000",
                                                    price: 30600
                                                },
                                                40: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Catfish",
                                                    male: "",
                                                    female: "MP_Bea_F_Should_001",
                                                    price: 10800
                                                },
                                                270: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Crossed Arrows",
                                                    male: "FM_Hip_M_Tat_000",
                                                    female: "FM_Hip_F_Tat_000",
                                                    price: 16200
                                                },
                                                281: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Infinity",
                                                    male: "FM_Hip_M_Tat_011",
                                                    female: "FM_Hip_F_Tat_011",
                                                    price: 7200
                                                },
                                                282: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Antlers",
                                                    male: "FM_Hip_M_Tat_012",
                                                    female: "FM_Hip_F_Tat_012",
                                                    price: 16200
                                                },
                                                294: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Pyramid",
                                                    male: "FM_Hip_M_Tat_024",
                                                    female: "FM_Hip_F_Tat_024",
                                                    price: 16200
                                                },
                                                295: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Watch Your Step",
                                                    male: "FM_Hip_M_Tat_025",
                                                    female: "FM_Hip_F_Tat_025",
                                                    price: 16200
                                                },
                                                300: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Shark Fin",
                                                    male: "FM_Hip_M_Tat_030",
                                                    female: "FM_Hip_F_Tat_030",
                                                    price: 7200
                                                },
                                                301: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Skateboard",
                                                    male: "FM_Hip_M_Tat_031",
                                                    female: "FM_Hip_F_Tat_031",
                                                    price: 16200
                                                },
                                                302: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Paper Plane",
                                                    male: "FM_Hip_M_Tat_032",
                                                    female: "FM_Hip_F_Tat_032",
                                                    price: 16200
                                                },
                                                311: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Tooth",
                                                    male: "FM_Hip_M_Tat_041",
                                                    female: "FM_Hip_F_Tat_041",
                                                    price: 16200
                                                },
                                                316: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Triangles",
                                                    male: "FM_Hip_M_Tat_046",
                                                    female: "FM_Hip_F_Tat_046",
                                                    price: 16200
                                                },
                                                399: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Give Nothing Back",
                                                    male: "MP_Smuggler_Tattoo_003_M",
                                                    female: "MP_Smuggler_Tattoo_003_F",
                                                    price: 16200
                                                },
                                                402: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Never Surrender",
                                                    male: "MP_Smuggler_Tattoo_006_M",
                                                    female: "MP_Smuggler_Tattoo_006_F",
                                                    price: 16200
                                                },
                                                405: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Tall Ship Conflict",
                                                    male: "MP_Smuggler_Tattoo_009_M",
                                                    female: "MP_Smuggler_Tattoo_009_F",
                                                    price: 27e3
                                                },
                                                409: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Torn Wings",
                                                    male: "MP_Smuggler_Tattoo_013_M",
                                                    female: "MP_Smuggler_Tattoo_013_F",
                                                    price: 27e3
                                                },
                                                412: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Skull Compass",
                                                    male: "MP_Smuggler_Tattoo_016_M",
                                                    female: "MP_Smuggler_Tattoo_016_F",
                                                    price: 30600
                                                },
                                                413: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Framed Tall Ship",
                                                    male: "MP_Smuggler_Tattoo_017_M",
                                                    female: "MP_Smuggler_Tattoo_017_F",
                                                    price: 39600
                                                },
                                                414: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Finders Keepers",
                                                    male: "MP_Smuggler_Tattoo_018_M",
                                                    female: "MP_Smuggler_Tattoo_018_F",
                                                    price: 39600
                                                },
                                                418: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "X Marks The Spot",
                                                    male: "MP_Smuggler_Tattoo_022_M",
                                                    female: "MP_Smuggler_Tattoo_022_F",
                                                    price: 19800
                                                },
                                                420: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Pirate Captain",
                                                    male: "MP_Smuggler_Tattoo_024_M",
                                                    female: "MP_Smuggler_Tattoo_024_F",
                                                    price: 39600
                                                },
                                                421: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Claimed By The Beast",
                                                    male: "MP_Smuggler_Tattoo_025_M",
                                                    female: "MP_Smuggler_Tattoo_025_F",
                                                    price: 43200
                                                }
                                            },
                                            1: {
                                                14: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Hammerhead",
                                                    male: "MP_Bea_M_Chest_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                15: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Shark",
                                                    male: "MP_Bea_M_Chest_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                27: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Swordfish",
                                                    male: "MP_Bea_M_Stom_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                28: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Wheel",
                                                    male: "MP_Bea_M_Stom_001",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                32: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Anchor",
                                                    male: "",
                                                    female: "MP_Bea_F_Chest_000",
                                                    price: 10800
                                                },
                                                33: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Anchor 2",
                                                    male: "",
                                                    female: "MP_Bea_F_Chest_001",
                                                    price: 19800
                                                },
                                                34: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Los Santos Wreath",
                                                    male: "",
                                                    female: "MP_Bea_F_Chest_002",
                                                    price: 19800
                                                },
                                                35: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Love Dagger",
                                                    male: "",
                                                    female: "MP_Bea_F_RSide_000",
                                                    price: 16200
                                                },
                                                41: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Swallow",
                                                    male: "",
                                                    female: "MP_Bea_F_Stom_000",
                                                    price: 10800
                                                },
                                                42: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Hibiscus Flower",
                                                    male: "",
                                                    female: "MP_Bea_F_Stom_001",
                                                    price: 10800
                                                },
                                                43: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Dolphin",
                                                    male: "",
                                                    female: "MP_Bea_F_Stom_002",
                                                    price: 7200
                                                },
                                                272: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Chemistry",
                                                    male: "FM_Hip_M_Tat_002",
                                                    female: "FM_Hip_F_Tat_002",
                                                    price: 16200
                                                },
                                                276: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Feather Birds",
                                                    male: "FM_Hip_M_Tat_006",
                                                    female: "FM_Hip_F_Tat_006",
                                                    price: 16200
                                                },
                                                283: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Boombox",
                                                    male: "FM_Hip_M_Tat_013",
                                                    female: "FM_Hip_F_Tat_013",
                                                    price: 16200
                                                },
                                                299: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Sad",
                                                    male: "FM_Hip_M_Tat_029",
                                                    female: "FM_Hip_F_Tat_029",
                                                    price: 7200
                                                },
                                                303: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Stag",
                                                    male: "FM_Hip_M_Tat_033",
                                                    female: "FM_Hip_F_Tat_033",
                                                    price: 16200
                                                },
                                                305: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Sewn Heart",
                                                    male: "FM_Hip_M_Tat_035",
                                                    female: "FM_Hip_F_Tat_035",
                                                    price: 7200
                                                },
                                                317: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Cassette",
                                                    male: "FM_Hip_M_Tat_047",
                                                    female: "FM_Hip_F_Tat_047",
                                                    price: 16200
                                                },
                                                396: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Bless The Dead",
                                                    male: "MP_Smuggler_Tattoo_000_M",
                                                    female: "MP_Smuggler_Tattoo_000_F",
                                                    price: 16200
                                                },
                                                398: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Dead Lies",
                                                    male: "MP_Smuggler_Tattoo_002_M",
                                                    female: "MP_Smuggler_Tattoo_002_F",
                                                    price: 27e3
                                                },
                                                403: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "No Honor",
                                                    male: "MP_Smuggler_Tattoo_007_M",
                                                    female: "MP_Smuggler_Tattoo_007_F",
                                                    price: 27e3
                                                },
                                                406: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "See You In Hell",
                                                    male: "MP_Smuggler_Tattoo_010_M",
                                                    female: "MP_Smuggler_Tattoo_010_F",
                                                    price: 27e3
                                                },
                                                411: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Jolly Roger",
                                                    male: "MP_Smuggler_Tattoo_015_M",
                                                    female: "MP_Smuggler_Tattoo_015_F",
                                                    price: 27e3
                                                },
                                                415: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Lost At Sea",
                                                    male: "MP_Smuggler_Tattoo_019_M",
                                                    female: "MP_Smuggler_Tattoo_019_F",
                                                    price: 16200
                                                },
                                                417: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Dead Tales",
                                                    male: "MP_Smuggler_Tattoo_021_M",
                                                    female: "MP_Smuggler_Tattoo_021_F",
                                                    price: 16200
                                                }
                                            },
                                            2: {
                                                16: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Pirate Skull",
                                                    male: "MP_Bea_M_Head_000",
                                                    female: "",
                                                    price: 39600
                                                },
                                                17: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Surf LS",
                                                    male: "MP_Bea_M_Head_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                18: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Shark",
                                                    male: "MP_Bea_M_Head_002",
                                                    female: "",
                                                    price: 16200
                                                },
                                                24: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Little Fish",
                                                    male: "MP_Bea_M_Neck_000",
                                                    female: "",
                                                    price: 16200
                                                },
                                                25: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Surfs Up",
                                                    male: "MP_Bea_M_Neck_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                38: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Butterfly",
                                                    male: "",
                                                    female: "MP_Bea_F_Neck_000",
                                                    price: 19800
                                                },
                                                275: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Beautiful Eye",
                                                    male: "FM_Hip_M_Tat_005",
                                                    female: "FM_Hip_F_Tat_005",
                                                    price: 16200
                                                },
                                                291: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Geo Fox",
                                                    male: "FM_Hip_M_Tat_021",
                                                    female: "FM_Hip_F_Tat_021",
                                                    price: 7200
                                                },
                                                407: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Sinner",
                                                    male: "MP_Smuggler_Tattoo_011_M",
                                                    female: "MP_Smuggler_Tattoo_011_F",
                                                    price: 16200
                                                },
                                                408: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Thief",
                                                    male: "MP_Smuggler_Tattoo_012_M",
                                                    female: "MP_Smuggler_Tattoo_012_F",
                                                    price: 16200
                                                }
                                            },
                                            3: {
                                                19: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Star",
                                                    male: "MP_Bea_M_Lleg_000",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                279: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Squares",
                                                    male: "FM_Hip_M_Tat_009",
                                                    female: "FM_Hip_F_Tat_009",
                                                    price: 16200
                                                },
                                                289: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Charm",
                                                    male: "FM_Hip_M_Tat_019",
                                                    female: "FM_Hip_F_Tat_019",
                                                    price: 27e3
                                                },
                                                310: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Black Anchor",
                                                    male: "FM_Hip_M_Tat_040",
                                                    female: "FM_Hip_F_Tat_040",
                                                    price: 16200
                                                }
                                            },
                                            4: {
                                                20: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Tiki Tower",
                                                    male: "MP_Bea_M_Rleg_000",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                36: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "School of Fish",
                                                    male: "",
                                                    female: "MP_Bea_F_RLeg_000",
                                                    price: 16200
                                                },
                                                308: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Grub",
                                                    male: "FM_Hip_M_Tat_038",
                                                    female: "FM_Hip_F_Tat_038",
                                                    price: 16200
                                                },
                                                312: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Sparkplug",
                                                    male: "FM_Hip_M_Tat_042",
                                                    female: "FM_Hip_F_Tat_042",
                                                    price: 16200
                                                },
                                                416: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Homeward Bound",
                                                    male: "MP_Smuggler_Tattoo_020_M",
                                                    female: "MP_Smuggler_Tattoo_020_F",
                                                    price: 39600
                                                }
                                            },
                                            6: {
                                                21: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Sun",
                                                    male: "MP_Bea_M_RArm_000",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                26: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Vespucci Beauty",
                                                    male: "MP_Bea_M_RArm_001",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                37: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Fish",
                                                    male: "",
                                                    female: "MP_Bea_F_RArm_001",
                                                    price: 16200
                                                },
                                                271: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Single Arrow",
                                                    male: "FM_Hip_M_Tat_001",
                                                    female: "FM_Hip_F_Tat_001",
                                                    price: 16200
                                                },
                                                274: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Bone",
                                                    male: "FM_Hip_M_Tat_004",
                                                    female: "FM_Hip_F_Tat_004",
                                                    price: 16200
                                                },
                                                278: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Cube",
                                                    male: "FM_Hip_M_Tat_008",
                                                    female: "FM_Hip_F_Tat_008",
                                                    price: 16200
                                                },
                                                280: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Horseshoe",
                                                    male: "FM_Hip_M_Tat_010",
                                                    female: "FM_Hip_F_Tat_010",
                                                    price: 16200
                                                },
                                                284: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Spray Can",
                                                    male: "FM_Hip_M_Tat_014",
                                                    female: "FM_Hip_F_Tat_014",
                                                    price: 16200
                                                },
                                                287: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Eye Triangle",
                                                    male: "FM_Hip_M_Tat_017",
                                                    female: "FM_Hip_F_Tat_017",
                                                    price: 16200
                                                },
                                                288: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Origami",
                                                    male: "FM_Hip_M_Tat_018",
                                                    female: "FM_Hip_F_Tat_018",
                                                    price: 7200
                                                },
                                                290: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Geo Pattern",
                                                    male: "FM_Hip_M_Tat_020",
                                                    female: "FM_Hip_F_Tat_020",
                                                    price: 16200
                                                },
                                                292: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Pencil",
                                                    male: "FM_Hip_M_Tat_022",
                                                    female: "FM_Hip_F_Tat_022",
                                                    price: 16200
                                                },
                                                293: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Smiley",
                                                    male: "FM_Hip_M_Tat_023",
                                                    female: "FM_Hip_F_Tat_023",
                                                    price: 16200
                                                },
                                                306: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Shapes",
                                                    male: "FM_Hip_M_Tat_036",
                                                    female: "FM_Hip_F_Tat_036",
                                                    price: 27e3
                                                },
                                                314: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Triangle Black",
                                                    male: "FM_Hip_M_Tat_044",
                                                    female: "FM_Hip_F_Tat_044",
                                                    price: 16200
                                                },
                                                315: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Mesh Band",
                                                    male: "FM_Hip_M_Tat_045",
                                                    female: "FM_Hip_F_Tat_045",
                                                    price: 16200
                                                },
                                                397: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Crackshot",
                                                    male: "MP_Smuggler_Tattoo_001_M",
                                                    female: "MP_Smuggler_Tattoo_001_F",
                                                    price: 27e3
                                                },
                                                401: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Mutiny",
                                                    male: "MP_Smuggler_Tattoo_005_M",
                                                    female: "MP_Smuggler_Tattoo_005_F",
                                                    price: 16200
                                                },
                                                419: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Stylized Kraken",
                                                    male: "MP_Smuggler_Tattoo_023_M",
                                                    female: "MP_Smuggler_Tattoo_023_F",
                                                    price: 39600
                                                }
                                            },
                                            5: {
                                                22: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tiki Tower",
                                                    male: "MP_Bea_M_LArm_000",
                                                    female: "",
                                                    price: 19800
                                                },
                                                23: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Mermaid LS",
                                                    male: "MP_Bea_M_LArm_001",
                                                    female: "",
                                                    price: 16200
                                                },
                                                44: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Tribal Flower",
                                                    male: "",
                                                    female: "MP_Bea_F_LArm_000",
                                                    price: 7200
                                                },
                                                45: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "Parrot",
                                                    male: "",
                                                    female: "MP_Bea_F_LArm_001",
                                                    price: 19800
                                                },
                                                273: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Diamond Sparkle",
                                                    male: "FM_Hip_M_Tat_003",
                                                    female: "FM_Hip_F_Tat_003",
                                                    price: 16200
                                                },
                                                277: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Bricks",
                                                    male: "FM_Hip_M_Tat_007",
                                                    female: "FM_Hip_F_Tat_007",
                                                    price: 16200
                                                },
                                                285: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Mustache",
                                                    male: "FM_Hip_M_Tat_015",
                                                    female: "FM_Hip_F_Tat_015",
                                                    price: 16200
                                                },
                                                286: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Lightning Bolt",
                                                    male: "FM_Hip_M_Tat_016",
                                                    female: "FM_Hip_F_Tat_016",
                                                    price: 16200
                                                },
                                                296: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Pizza",
                                                    male: "FM_Hip_M_Tat_026",
                                                    female: "FM_Hip_F_Tat_026",
                                                    price: 16200
                                                },
                                                297: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Padlock",
                                                    male: "FM_Hip_M_Tat_027",
                                                    female: "FM_Hip_F_Tat_027",
                                                    price: 16200
                                                },
                                                298: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Thorny Rose",
                                                    male: "FM_Hip_M_Tat_028",
                                                    female: "FM_Hip_F_Tat_028",
                                                    price: 27e3
                                                },
                                                304: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Stop",
                                                    male: "FM_Hip_M_Tat_034",
                                                    female: "FM_Hip_F_Tat_034",
                                                    price: 16200
                                                },
                                                307: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Sunrise",
                                                    male: "FM_Hip_M_Tat_037",
                                                    female: "FM_Hip_F_Tat_037",
                                                    price: 16200
                                                },
                                                309: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Sleeve",
                                                    male: "FM_Hip_M_Tat_039",
                                                    female: "FM_Hip_F_Tat_039",
                                                    price: 39600
                                                },
                                                313: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Triangle White",
                                                    male: "FM_Hip_M_Tat_043",
                                                    female: "FM_Hip_F_Tat_043",
                                                    price: 16200
                                                },
                                                318: {
                                                    overlay: "mphipster_overlays",
                                                    name: "Peace",
                                                    male: "FM_Hip_M_Tat_048",
                                                    female: "FM_Hip_F_Tat_048",
                                                    price: 16200
                                                },
                                                400: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Honor",
                                                    male: "MP_Smuggler_Tattoo_004_M",
                                                    female: "MP_Smuggler_Tattoo_004_F",
                                                    price: 27e3
                                                },
                                                404: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Horrors Of The Deep",
                                                    male: "MP_Smuggler_Tattoo_008_M",
                                                    female: "MP_Smuggler_Tattoo_008_F",
                                                    price: 27e3
                                                },
                                                410: {
                                                    overlay: "mpsmuggler_overlays",
                                                    name: "Mermaids Curse",
                                                    male: "MP_Smuggler_Tattoo_014_M",
                                                    female: "MP_Smuggler_Tattoo_014_F",
                                                    price: 39600
                                                }
                                            },
                                            8: {
                                                660: {
                                                    overlay: "mpbeach_overlays",
                                                    name: "FM_Hair_Fuzz",
                                                    male: "FM_Hair_Fuzz",
                                                    female: "FM_Hair_Fuzz",
                                                    price: 200
                                                },
                                                729: {
                                                    overlay: "mpTuner_overlays",
                                                    name: "Afro Hair",
                                                    male: "MP_Tuner_Hair_001_M",
                                                    female: "MP_Tuner_Hair_001_F",
                                                    price: 200
                                                }
                                            }
                                        },
                                        3: {
                                            1: {
                                                133: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Thor & Goblin",
                                                    male: "MP_Christmas2017_Tattoo_000_M",
                                                    female: "MP_Christmas2017_Tattoo_000_F",
                                                    price: 16200
                                                },
                                                136: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Native Warrior",
                                                    male: "MP_Christmas2017_Tattoo_003_M",
                                                    female: "MP_Christmas2017_Tattoo_003_F",
                                                    price: 16200
                                                },
                                                141: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan Warrior",
                                                    male: "MP_Christmas2017_Tattoo_008_M",
                                                    female: "MP_Christmas2017_Tattoo_008_F",
                                                    price: 27e3
                                                },
                                                152: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Strike Force",
                                                    male: "MP_Christmas2017_Tattoo_019_M",
                                                    female: "MP_Christmas2017_Tattoo_019_F",
                                                    price: 19800
                                                },
                                                153: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Medusa's Gaze",
                                                    male: "MP_Christmas2017_Tattoo_020_M",
                                                    female: "MP_Christmas2017_Tattoo_020_F",
                                                    price: 43200
                                                },
                                                159: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan Skull",
                                                    male: "MP_Christmas2017_Tattoo_026_M",
                                                    female: "MP_Christmas2017_Tattoo_026_F",
                                                    price: 19800
                                                },
                                                364: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "The Howler",
                                                    male: "MP_LUXE_TAT_002_M",
                                                    female: "MP_LUXE_TAT_002_F",
                                                    price: 16200
                                                },
                                                368: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Geometric Galaxy",
                                                    male: "MP_LUXE_TAT_012_M",
                                                    female: "MP_LUXE_TAT_012_F",
                                                    price: 39600
                                                },
                                                374: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Reaper Sway",
                                                    male: "MP_LUXE_TAT_025_M",
                                                    female: "MP_LUXE_TAT_025_F",
                                                    price: 16200
                                                },
                                                376: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Cobra Dawn",
                                                    male: "MP_LUXE_TAT_027_M",
                                                    female: "MP_LUXE_TAT_027_F",
                                                    price: 16200
                                                },
                                                383: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Abstract Skull",
                                                    male: "MP_LUXE_TAT_003_M",
                                                    female: "MP_LUXE_TAT_003_F",
                                                    price: 27e3
                                                },
                                                386: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Eye of the Griffin",
                                                    male: "MP_LUXE_TAT_007_M",
                                                    female: "MP_LUXE_TAT_007_F",
                                                    price: 16200
                                                },
                                                387: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Flying Eye",
                                                    male: "MP_LUXE_TAT_008_M",
                                                    female: "MP_LUXE_TAT_008_F",
                                                    price: 16200
                                                },
                                                390: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Ancient Queen",
                                                    male: "MP_LUXE_TAT_014_M",
                                                    female: "MP_LUXE_TAT_014_F",
                                                    price: 16200
                                                },
                                                391: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Smoking Sisters",
                                                    male: "MP_LUXE_TAT_015_M",
                                                    female: "MP_LUXE_TAT_015_F",
                                                    price: 16200
                                                },
                                                576: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Skeleton Breeze",
                                                    male: "MP_Heist4_Tat_004_M",
                                                    female: "MP_Heist4_Tat_004_F",
                                                    price: 16200
                                                },
                                                594: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Paradise Sirens",
                                                    male: "MP_Heist4_Tat_022_M",
                                                    female: "MP_Heist4_Tat_022_F",
                                                    price: 30600
                                                },
                                                595: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Techno Glitch",
                                                    male: "MP_Heist4_Tat_023_M",
                                                    female: "MP_Heist4_Tat_023_F",
                                                    price: 30600
                                                },
                                                602: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Radio Tape",
                                                    male: "MP_Heist4_Tat_030_M",
                                                    female: "MP_Heist4_Tat_030_F",
                                                    price: 30600
                                                },
                                                735: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Patronenmund",
                                                    male: "mp_sum2_tat_003_m",
                                                    female: "mp_sum2_tat_003_f",
                                                    price: 10800
                                                },
                                                736: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Rauchender Lauf",
                                                    male: "mp_sum2_tat_004_m",
                                                    female: "mp_sum2_tat_004_f",
                                                    price: 19800
                                                },
                                                737: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Verhüllte Waffe",
                                                    male: "mp_sum2_tat_005_m",
                                                    female: "mp_sum2_tat_005_f",
                                                    price: 19800
                                                },
                                                772: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Geschnitzter Kürbis",
                                                    male: "mp_sum2_tat_040_m",
                                                    female: "mp_sum2_tat_040_f",
                                                    price: 16200
                                                },
                                                773: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Verzweigter Werwolf",
                                                    male: "mp_sum2_tat_041_m",
                                                    female: "mp_sum2_tat_041_f",
                                                    price: 30600
                                                },
                                                774: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Geflügelter schädel",
                                                    male: "mp_sum2_tat_042_m",
                                                    female: "mp_sum2_tat_042_f",
                                                    price: 30600
                                                },
                                                775: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Verfluchter Saki",
                                                    male: "mp_sum2_tat_043_m",
                                                    female: "mp_sum2_tat_043_f",
                                                    price: 16200
                                                },
                                                776: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Rauch, Fledermaus & Schädel",
                                                    male: "mp_sum2_tat_044_m",
                                                    female: "mp_sum2_tat_044_f",
                                                    price: 43200
                                                },
                                                790: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Kreischender Drache",
                                                    male: "mp_sum2_tat_058_m",
                                                    female: "mp_sum2_tat_058_f",
                                                    price: 19800
                                                },
                                                791: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Schwerter & Stadt",
                                                    male: "mp_sum2_tat_059_m",
                                                    female: "mp_sum2_tat_059_f",
                                                    price: 16200
                                                },
                                                792: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Blaine County",
                                                    male: "mp_sum2_tat_060_m",
                                                    female: "mp_sum2_tat_060_f",
                                                    price: 30600
                                                },
                                                793: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Wütendes Opossum",
                                                    male: "mp_sum2_tat_061_m",
                                                    female: "mp_sum2_tat_061_f",
                                                    price: 19800
                                                },
                                                794: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Blumen-Dämon",
                                                    male: "mp_sum2_tat_062_m",
                                                    female: "mp_sum2_tat_062_f",
                                                    price: 30600
                                                }
                                            },
                                            5: {
                                                134: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Viking Warrior",
                                                    male: "MP_Christmas2017_Tattoo_001_M",
                                                    female: "MP_Christmas2017_Tattoo_001_F",
                                                    price: 16200
                                                },
                                                137: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Tiger & Mask",
                                                    male: "MP_Christmas2017_Tattoo_004_M",
                                                    female: "MP_Christmas2017_Tattoo_004_F",
                                                    price: 43200
                                                },
                                                140: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan Combat",
                                                    male: "MP_Christmas2017_Tattoo_007_M",
                                                    female: "MP_Christmas2017_Tattoo_007_F",
                                                    price: 43200
                                                },
                                                146: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Katana",
                                                    male: "MP_Christmas2017_Tattoo_013_M",
                                                    female: "MP_Christmas2017_Tattoo_013_F",
                                                    price: 39600
                                                },
                                                158: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Winged Serpent",
                                                    male: "MP_Christmas2017_Tattoo_025_M",
                                                    female: "MP_Christmas2017_Tattoo_025_F",
                                                    price: 43200
                                                },
                                                162: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Cerberus",
                                                    male: "MP_Christmas2017_Tattoo_029_M",
                                                    female: "MP_Christmas2017_Tattoo_029_F",
                                                    price: 39600
                                                },
                                                365: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Fatal Dagger",
                                                    male: "MP_LUXE_TAT_005_M",
                                                    female: "MP_LUXE_TAT_005_F",
                                                    price: 27e3
                                                },
                                                369: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Egyptian Mural",
                                                    male: "MP_LUXE_TAT_016_M",
                                                    female: "MP_LUXE_TAT_016_F",
                                                    price: 27e3
                                                },
                                                371: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Divine Goddess",
                                                    male: "MP_LUXE_TAT_018_M",
                                                    female: "MP_LUXE_TAT_018_F",
                                                    price: 27e3
                                                },
                                                377: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Python Skull",
                                                    male: "MP_LUXE_TAT_028_M",
                                                    female: "MP_LUXE_TAT_028_F",
                                                    price: 27e3
                                                },
                                                380: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Geometric Design 3",
                                                    male: "MP_LUXE_TAT_031_M",
                                                    female: "MP_LUXE_TAT_031_F",
                                                    price: 39600
                                                },
                                                388: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Floral Symmetry",
                                                    male: "MP_LUXE_TAT_009_M",
                                                    female: "MP_LUXE_TAT_009_F",
                                                    price: 39600
                                                },
                                                393: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Archangel & Mary",
                                                    male: "MP_LUXE_TAT_020_M",
                                                    female: "MP_LUXE_TAT_020_F",
                                                    price: 27e3
                                                },
                                                394: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Gabriel",
                                                    male: "MP_LUXE_TAT_021_M",
                                                    female: "MP_LUXE_TAT_021_F",
                                                    price: 27e3
                                                },
                                                581: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Scratch Panther",
                                                    male: "MP_Heist4_Tat_009_M",
                                                    female: "MP_Heist4_Tat_009_F",
                                                    price: 19800
                                                },
                                                740: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Bigness-Schimpanse",
                                                    male: "mp_sum2_tat_008_m",
                                                    female: "mp_sum2_tat_008_f",
                                                    price: 16200
                                                },
                                                741: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Up-n-Atomisierer-Design",
                                                    male: "mp_sum2_tat_009_m",
                                                    female: "mp_sum2_tat_009_f",
                                                    price: 16200
                                                },
                                                742: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Raketenwerfer-Braut",
                                                    male: "mp_sum2_tat_010_m",
                                                    female: "mp_sum2_tat_010_F",
                                                    price: 19800
                                                },
                                                760: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Schädel mit Laseraugen",
                                                    male: "mp_sum2_tat_028_m",
                                                    female: "mp_sum2_tat_028_f",
                                                    price: 27e3
                                                },
                                                761: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Klassischer Vampir",
                                                    male: "mp_sum2_tat_029_m",
                                                    female: "mp_sum2_tat_029_f",
                                                    price: 27e3
                                                },
                                                781: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Dämonen-Drummer",
                                                    male: "mp_sum2_tat_049_m",
                                                    female: "mp_sum2_tat_049_f",
                                                    price: 43200
                                                }
                                            },
                                            7: {
                                                135: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Kabuto",
                                                    male: "MP_Christmas2017_Tattoo_002_M",
                                                    female: "MP_Christmas2017_Tattoo_002_F",
                                                    price: 16200
                                                },
                                                138: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Ghost Dragon",
                                                    male: "MP_Christmas2017_Tattoo_005_M",
                                                    female: "MP_Christmas2017_Tattoo_005_F",
                                                    price: 39600
                                                },
                                                142: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Norse Rune",
                                                    male: "MP_Christmas2017_Tattoo_009_M",
                                                    female: "MP_Christmas2017_Tattoo_009_F",
                                                    price: 27e3
                                                },
                                                143: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan Shield",
                                                    male: "MP_Christmas2017_Tattoo_010_M",
                                                    female: "MP_Christmas2017_Tattoo_010_F",
                                                    price: 27e3
                                                },
                                                144: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Weathered Skull",
                                                    male: "MP_Christmas2017_Tattoo_011_M",
                                                    female: "MP_Christmas2017_Tattoo_011_F",
                                                    price: 39600
                                                },
                                                148: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Samurai Combat",
                                                    male: "MP_Christmas2017_Tattoo_015_M",
                                                    female: "MP_Christmas2017_Tattoo_015_F",
                                                    price: 39600
                                                },
                                                149: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Odin & Raven",
                                                    male: "MP_Christmas2017_Tattoo_016_M",
                                                    female: "MP_Christmas2017_Tattoo_016_F",
                                                    price: 39600
                                                },
                                                154: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan & Lion",
                                                    male: "MP_Christmas2017_Tattoo_021_M",
                                                    female: "MP_Christmas2017_Tattoo_021_F",
                                                    price: 30600
                                                },
                                                155: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan & Horse",
                                                    male: "MP_Christmas2017_Tattoo_022_M",
                                                    female: "MP_Christmas2017_Tattoo_022_F",
                                                    price: 43200
                                                },
                                                157: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Dragon Slayer",
                                                    male: "MP_Christmas2017_Tattoo_024_M",
                                                    female: "MP_Christmas2017_Tattoo_024_F",
                                                    price: 30600
                                                },
                                                160: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Molon Labe",
                                                    male: "MP_Christmas2017_Tattoo_027_M",
                                                    female: "MP_Christmas2017_Tattoo_027_F",
                                                    price: 27e3
                                                },
                                                163: {
                                                    overlay: "mpchristmas2018_overlays",
                                                    name: "Samael's Eye",
                                                    male: "MP_Christmas2018_Tat_000_M",
                                                    female: "MP_Christmas2018_Tat_000_F",
                                                    price: 43200
                                                },
                                                372: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Cloaked Angel",
                                                    male: "MP_LUXE_TAT_022_M",
                                                    female: "MP_LUXE_TAT_022_F",
                                                    price: 39600
                                                },
                                                378: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Geometric Design",
                                                    male: "MP_LUXE_TAT_029_M",
                                                    female: "MP_LUXE_TAT_029_F",
                                                    price: 39600
                                                },
                                                385: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Adorned Wolf",
                                                    male: "MP_LUXE_TAT_006_M",
                                                    female: "MP_LUXE_TAT_006_F",
                                                    price: 39600
                                                },
                                                395: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Feather Mural",
                                                    male: "MP_LUXE_TAT_024_M",
                                                    female: "MP_LUXE_TAT_024_F",
                                                    price: 39600
                                                },
                                                585: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Wild Dancers",
                                                    male: "MP_Heist4_Tat_013_M",
                                                    female: "MP_Heist4_Tat_013_F",
                                                    price: 30600
                                                },
                                                586: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Paradise Nap",
                                                    male: "MP_Heist4_Tat_014_M",
                                                    female: "MP_Heist4_Tat_014_F",
                                                    price: 30600
                                                },
                                                587: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Paradise Ukulele",
                                                    male: "MP_Heist4_Tat_015_M",
                                                    female: "MP_Heist4_Tat_015_F",
                                                    price: 43200
                                                },
                                                588: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Rose Panther",
                                                    male: "MP_Heist4_Tat_016_M",
                                                    female: "MP_Heist4_Tat_016_F",
                                                    price: 43200
                                                },
                                                589: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Tropical Sorcerer",
                                                    male: "MP_Heist4_Tat_017_M",
                                                    female: "MP_Heist4_Tat_017_F",
                                                    price: 43200
                                                },
                                                590: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Record Head",
                                                    male: "MP_Heist4_Tat_018_M",
                                                    female: "MP_Heist4_Tat_018_F",
                                                    price: 39600
                                                },
                                                591: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Record Shot",
                                                    male: "MP_Heist4_Tat_019_M",
                                                    female: "MP_Heist4_Tat_019_F",
                                                    price: 27e3
                                                },
                                                592: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Speaker Tower",
                                                    male: "MP_Heist4_Tat_020_M",
                                                    female: "MP_Heist4_Tat_020_F",
                                                    price: 27e3
                                                },
                                                593: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Skull Surfer",
                                                    male: "MP_Heist4_Tat_021_M",
                                                    female: "MP_Heist4_Tat_021_F",
                                                    price: 43200
                                                },
                                                738: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Gemalte Mikro-MP",
                                                    male: "mp_sum2_tat_006_m",
                                                    female: "mp_sum2_tat_006_f",
                                                    price: 27e3
                                                },
                                                739: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Waffenkönig",
                                                    male: "mp_sum2_tat_007_m",
                                                    female: "mp_sum2_tat_007_f",
                                                    price: 27e3
                                                },
                                                767: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Sniff Sniff",
                                                    male: "mp_sum2_tat_035_m",
                                                    female: "mp_sum2_tat_035_f",
                                                    price: 43200
                                                },
                                                768: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Glücksbringermuster",
                                                    male: "mp_sum2_tat_036_m",
                                                    female: "mp_sum2_tat_036_f",
                                                    price: 27e3
                                                },
                                                769: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Hexe und Schädel",
                                                    male: "mp_sum2_tat_037_m",
                                                    female: "mp_sum2_tat_037_f",
                                                    price: 43200
                                                },
                                                770: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Kürbiskäfer",
                                                    male: "mp_sum2_tat_038_m",
                                                    female: "mp_sum2_tat_038_f",
                                                    price: 30600
                                                },
                                                771: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Sinner",
                                                    male: "mp_sum2_tat_039_m",
                                                    female: "mp_sum2_tat_039_F",
                                                    price: 27e3
                                                },
                                                789: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Grauer Dämon",
                                                    male: "mp_sum2_tat_057_m",
                                                    female: "mp_sum2_tat_057_f",
                                                    price: 30600
                                                }
                                            },
                                            6: {
                                                139: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Medusa",
                                                    male: "MP_Christmas2017_Tattoo_006_M",
                                                    female: "MP_Christmas2017_Tattoo_006_F",
                                                    price: 43200
                                                },
                                                145: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Tiger Headdress",
                                                    male: "MP_Christmas2017_Tattoo_012_M",
                                                    female: "MP_Christmas2017_Tattoo_012_F",
                                                    price: 19800
                                                },
                                                147: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Celtic Band",
                                                    male: "MP_Christmas2017_Tattoo_014_M",
                                                    female: "MP_Christmas2017_Tattoo_014_F",
                                                    price: 16200
                                                },
                                                150: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Feather Sleeve",
                                                    male: "MP_Christmas2017_Tattoo_017_M",
                                                    female: "MP_Christmas2017_Tattoo_017_F",
                                                    price: 43200
                                                },
                                                151: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Muscle Tear",
                                                    male: "MP_Christmas2017_Tattoo_018_M",
                                                    female: "MP_Christmas2017_Tattoo_018_F",
                                                    price: 27e3
                                                },
                                                156: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Samurai Tallship",
                                                    male: "MP_Christmas2017_Tattoo_023_M",
                                                    female: "MP_Christmas2017_Tattoo_023_F",
                                                    price: 43200
                                                },
                                                161: {
                                                    overlay: "mpchristmas2017_overlays",
                                                    name: "Spartan Mural",
                                                    male: "MP_Christmas2017_Tattoo_028_M",
                                                    female: "MP_Christmas2017_Tattoo_028_F",
                                                    price: 30600
                                                },
                                                366: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Intrometric",
                                                    male: "MP_LUXE_TAT_010_M",
                                                    female: "MP_LUXE_TAT_010_F",
                                                    price: 27e3
                                                },
                                                370: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Heavenly Deity",
                                                    male: "MP_LUXE_TAT_017_M",
                                                    female: "MP_LUXE_TAT_017_F",
                                                    price: 27e3
                                                },
                                                375: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Floral Print",
                                                    male: "MP_LUXE_TAT_026_M",
                                                    female: "MP_LUXE_TAT_026_F",
                                                    price: 16200
                                                },
                                                379: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Geometric Design 2",
                                                    male: "MP_LUXE_TAT_030_M",
                                                    female: "MP_LUXE_TAT_030_F",
                                                    price: 39600
                                                },
                                                384: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Floral Raven",
                                                    male: "MP_LUXE_TAT_004_M",
                                                    female: "MP_LUXE_TAT_004_F",
                                                    price: 27e3
                                                },
                                                389: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Mermaid Harpist",
                                                    male: "MP_LUXE_TAT_013_M",
                                                    female: "MP_LUXE_TAT_013_F",
                                                    price: 39600
                                                },
                                                392: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Geisha Bloom",
                                                    male: "MP_LUXE_TAT_019_M",
                                                    female: "MP_LUXE_TAT_019_F",
                                                    price: 27e3
                                                },
                                                572: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Headphone Splat",
                                                    male: "MP_Heist4_Tat_000_M",
                                                    female: "MP_Heist4_Tat_000_F",
                                                    price: 43200
                                                },
                                                573: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Tropical Dude",
                                                    male: "MP_Heist4_Tat_001_M",
                                                    female: "MP_Heist4_Tat_001_F",
                                                    price: 30600
                                                },
                                                574: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Jellyfish Shades",
                                                    male: "MP_Heist4_Tat_002_M",
                                                    female: "MP_Heist4_Tat_002_F",
                                                    price: 30600
                                                },
                                                575: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Lighthouse",
                                                    male: "MP_Heist4_Tat_003_M",
                                                    female: "MP_Heist4_Tat_003_F",
                                                    price: 19800
                                                },
                                                577: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "LSUR",
                                                    male: "MP_Heist4_Tat_005_M",
                                                    female: "MP_Heist4_Tat_005_F",
                                                    price: 27e3
                                                },
                                                578: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Music Locker",
                                                    male: "MP_Heist4_Tat_006_M",
                                                    female: "MP_Heist4_Tat_006_F",
                                                    price: 27e3
                                                },
                                                579: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Skeleton DJ",
                                                    male: "MP_Heist4_Tat_007_M",
                                                    female: "MP_Heist4_Tat_007_F",
                                                    price: 19800
                                                },
                                                580: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Smiley Glitch",
                                                    male: "MP_Heist4_Tat_008_M",
                                                    female: "MP_Heist4_Tat_008_F",
                                                    price: 19800
                                                },
                                                583: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Soulwax",
                                                    male: "MP_Heist4_Tat_011_M",
                                                    female: "MP_Heist4_Tat_011_F",
                                                    price: 16200
                                                },
                                                584: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Still Slipping",
                                                    male: "MP_Heist4_Tat_012_M",
                                                    female: "MP_Heist4_Tat_012_F",
                                                    price: 19800
                                                },
                                                598: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Shark Water",
                                                    male: "MP_Heist4_Tat_026_M",
                                                    female: "MP_Heist4_Tat_026_F",
                                                    price: 30600
                                                },
                                                603: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Octopus Shades",
                                                    male: "MP_Heist4_Tat_031_M",
                                                    female: "MP_Heist4_Tat_031_F",
                                                    price: 27e3
                                                },
                                                604: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "K.U.L.T. 99.1 FM",
                                                    male: "MP_Heist4_Tat_032_M",
                                                    female: "MP_Heist4_Tat_032_F",
                                                    price: 16200
                                                },
                                                743: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Alles anderes als klein",
                                                    male: "mp_sum2_tat_011_m",
                                                    female: "mp_sum2_tat_011_f",
                                                    price: 30600
                                                },
                                                744: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Schlangenrevolver",
                                                    male: "mp_sum2_tat_012_m",
                                                    female: "mp_sum2_tat_012_f",
                                                    price: 27e3
                                                },
                                                745: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Waffen-Ärmel",
                                                    male: "mp_sum2_tat_013_m",
                                                    female: "mp_sum2_tat_013_f",
                                                    price: 39600
                                                },
                                                762: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Tausendfüßler",
                                                    male: "mp_sum2_tat_030_m",
                                                    female: "mp_sum2_tat_030_f",
                                                    price: 27e3
                                                },
                                                763: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Fleischiges Auge",
                                                    male: "mp_sum2_tat_031_m",
                                                    female: "mp_sum2_tat_031_f",
                                                    price: 19800
                                                },
                                                777: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Gepanzerter Arm",
                                                    male: "mp_sum2_tat_045_m",
                                                    female: "mp_sum2_tat_045_f",
                                                    price: 39600
                                                },
                                                778: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Lächelnder Dämon",
                                                    male: "mp_sum2_tat_046_m",
                                                    female: "mp_sum2_tat_046_f",
                                                    price: 19800
                                                },
                                                779: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Engel und teufel",
                                                    male: "mp_sum2_tat_047_m",
                                                    female: "mp_sum2_tat_047_f",
                                                    price: 27e3
                                                },
                                                780: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Death is certain",
                                                    male: "mp_sum2_tat_048_m",
                                                    female: "mp_sum2_tat_048_f",
                                                    price: 19800
                                                }
                                            },
                                            3: {
                                                367: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Cross of Roses",
                                                    male: "MP_LUXE_TAT_011_M",
                                                    female: "MP_LUXE_TAT_011_F",
                                                    price: 27e3
                                                },
                                                381: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Serpent of Death",
                                                    male: "MP_LUXE_TAT_000_M",
                                                    female: "MP_LUXE_TAT_000_F",
                                                    price: 16200
                                                },
                                                582: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Tropical Serpent",
                                                    male: "MP_Heist4_Tat_010_M",
                                                    female: "MP_Heist4_Tat_010_F",
                                                    price: 16200
                                                },
                                                596: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Pineapple Skull",
                                                    male: "MP_Heist4_Tat_024_M",
                                                    female: "MP_Heist4_Tat_024_F",
                                                    price: 19800
                                                },
                                                597: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Glow Princess",
                                                    male: "MP_Heist4_Tat_025_M",
                                                    female: "MP_Heist4_Tat_025_F",
                                                    price: 30600
                                                },
                                                600: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Skull Waters",
                                                    male: "MP_Heist4_Tat_028_M",
                                                    female: "MP_Heist4_Tat_028_F",
                                                    price: 16200
                                                },
                                                601: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Soundwaves",
                                                    male: "MP_Heist4_Tat_029_M",
                                                    female: "MP_Heist4_Tat_029_F",
                                                    price: 16200
                                                },
                                                734: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Cobra-Biker",
                                                    male: "mp_sum2_tat_002_m",
                                                    female: "mp_sum2_tat_002_f",
                                                    price: 30600
                                                },
                                                746: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Minimal-MP",
                                                    male: "mp_sum2_tat_014_m",
                                                    female: "mp_sum2_tat_014_f",
                                                    price: 16200
                                                },
                                                747: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Minimal-Advanced",
                                                    male: "mp_sum2_tat_015_m",
                                                    female: "mp_sum2_tat_015_f",
                                                    price: 16200
                                                },
                                                748: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Minimal-Sniper",
                                                    male: "mp_sum2_tat_016_m",
                                                    female: "mp_sum2_tat_016_f",
                                                    price: 16200
                                                },
                                                764: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Vieläugige Ziege",
                                                    male: "mp_sum2_tat_032_m",
                                                    female: "mp_sum2_tat_032_f",
                                                    price: 27e3
                                                },
                                                785: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Mafioso-totenkopf",
                                                    male: "mp_sum2_tat_053_m",
                                                    female: "mp_sum2_tat_053_f",
                                                    price: 27e3
                                                },
                                                786: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Verwundeter Kopf",
                                                    male: "mp_sum2_tat_054_m",
                                                    female: "mp_sum2_tat_054_f",
                                                    price: 19800
                                                },
                                                787: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Erdolchter Totenkopf",
                                                    male: "mp_sum2_tat_055_m",
                                                    female: "mp_sum2_tat_055_f",
                                                    price: 16200
                                                },
                                                788: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Tigerklinge",
                                                    male: "mp_sum2_tat_056_m",
                                                    female: "mp_sum2_tat_056_f",
                                                    price: 30600
                                                }
                                            },
                                            4: {
                                                373: {
                                                    overlay: "mpluxe2_overlays",
                                                    name: "Starmetric",
                                                    male: "MP_LUXE_TAT_023_M",
                                                    female: "MP_LUXE_TAT_023_F",
                                                    price: 16200
                                                },
                                                382: {
                                                    overlay: "mpluxe_overlays",
                                                    name: "Elaborate Los Muertos",
                                                    male: "MP_LUXE_TAT_001_M",
                                                    female: "MP_LUXE_TAT_001_F",
                                                    price: 16200
                                                },
                                                599: {
                                                    overlay: "mpheist4_overlays",
                                                    name: "Skullphones",
                                                    male: "MP_Heist4_Tat_027_M",
                                                    female: "MP_Heist4_Tat_027_F",
                                                    price: 19800
                                                },
                                                749: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Schädelgranate",
                                                    male: "mp_sum2_tat_017_m",
                                                    female: "mp_sum2_tat_017_f",
                                                    price: 30600
                                                },
                                                765: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Dreiäugiger Dämon",
                                                    male: "mp_sum2_tat_033_m",
                                                    female: "mp_sum2_tat_033_f",
                                                    price: 30600
                                                },
                                                766: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Rauchender Sensenmann",
                                                    male: "mp_sum2_tat_034_m",
                                                    female: "mp_sum2_tat_034_F",
                                                    price: 43200
                                                },
                                                782: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Goldene Waffe",
                                                    male: "mp_sum2_tat_050_m",
                                                    female: "mp_sum2_tat_050_f",
                                                    price: 30600
                                                },
                                                783: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Blaue Schlange",
                                                    male: "mp_sum2_tat_051_m",
                                                    female: "mp_sum2_tat_051_f",
                                                    price: 43200
                                                },
                                                784: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Nachtdämon",
                                                    male: "mp_sum2_tat_052_m",
                                                    female: "mp_sum2_tat_052_f",
                                                    price: 30600
                                                }
                                            },
                                            2: {
                                                732: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Live Fast, einfarbig",
                                                    male: "mp_sum2_tat_000_m",
                                                    female: "mp_sum2_tat_000_f",
                                                    price: 16200
                                                },
                                                733: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Live Fast, mehrfarbig",
                                                    male: "mp_sum2_tat_001_m",
                                                    female: "mp_sum2_tat_001_f",
                                                    price: 19800
                                                },
                                                750: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Verzweigter Schädel",
                                                    male: "mp_sum2_tat_018_m",
                                                    female: "mp_sum2_tat_018_f",
                                                    price: 19800
                                                },
                                                751: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Ungemähte Leiche",
                                                    male: "mp_sum2_tat_019_m",
                                                    female: "mp_sum2_tat_019_f",
                                                    price: 30600
                                                },
                                                752: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Leiche und Sensenmann",
                                                    male: "mp_sum2_tat_020_m",
                                                    female: "mp_sum2_tat_020_f",
                                                    price: 43200
                                                },
                                                753: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Drittes Auge",
                                                    male: "mp_sum2_tat_021_m",
                                                    female: "mp_sum2_tat_021_f",
                                                    price: 7200
                                                },
                                                754: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Erdolchtes drittes Auge",
                                                    male: "mp_sum2_tat_022_m",
                                                    female: "mp_sum2_tat_022_f",
                                                    price: 7200
                                                },
                                                755: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Lippentropfen",
                                                    male: "mp_sum2_tat_023_m",
                                                    female: "mp_sum2_tat_023_f",
                                                    price: 10800
                                                },
                                                756: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Hautmaske",
                                                    male: "mp_sum2_tat_024_m",
                                                    female: "mp_sum2_tat_024_f",
                                                    price: 27e3
                                                },
                                                757: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Spinnenwebensense",
                                                    male: "mp_sum2_tat_025_m",
                                                    female: "mp_sum2_tat_025_f",
                                                    price: 7200
                                                },
                                                758: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Oni-Dämon",
                                                    male: "mp_sum2_tat_026_m",
                                                    female: "mp_sum2_tat_026_f",
                                                    price: 19800
                                                },
                                                759: {
                                                    overlay: "mpSum2_overlays",
                                                    name: "Fledermausflügel",
                                                    male: "mp_sum2_tat_027_m",
                                                    female: "mp_sum2_tat_027_f",
                                                    price: 7200
                                                }
                                            }
                                        },
                                        4: {
                                            1: {
                                                6: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Turbulence",
                                                    male: "MP_Airraces_Tattoo_000_M",
                                                    female: "MP_Airraces_Tattoo_000_F",
                                                    price: 16200
                                                },
                                                11: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Bombs Away",
                                                    male: "MP_Airraces_Tattoo_006_M",
                                                    female: "MP_Airraces_Tattoo_006_F",
                                                    price: 30600
                                                },
                                                46: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Demon Rider",
                                                    male: "MP_MP_Biker_Tat_000_M",
                                                    female: "MP_MP_Biker_Tat_000_F",
                                                    price: 30600
                                                },
                                                47: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Both Barrels",
                                                    male: "MP_MP_Biker_Tat_001_M",
                                                    female: "MP_MP_Biker_Tat_001_F",
                                                    price: 27e3
                                                },
                                                49: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Web Rider",
                                                    male: "MP_MP_Biker_Tat_003_M",
                                                    female: "MP_MP_Biker_Tat_003_F",
                                                    price: 30600
                                                },
                                                51: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Made In America",
                                                    male: "MP_MP_Biker_Tat_005_M",
                                                    female: "MP_MP_Biker_Tat_005_F",
                                                    price: 27e3
                                                },
                                                56: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Skull Of Taurus",
                                                    male: "MP_MP_Biker_Tat_010_M",
                                                    female: "MP_MP_Biker_Tat_010_F",
                                                    price: 27e3
                                                },
                                                59: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Demon Crossbones",
                                                    male: "MP_MP_Biker_Tat_013_M",
                                                    female: "MP_MP_Biker_Tat_013_F",
                                                    price: 27e3
                                                },
                                                64: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Skeletal Chopper",
                                                    male: "MP_MP_Biker_Tat_018_M",
                                                    female: "MP_MP_Biker_Tat_018_F",
                                                    price: 16200
                                                },
                                                65: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Gruesome Talons",
                                                    male: "MP_MP_Biker_Tat_019_M",
                                                    female: "MP_MP_Biker_Tat_019_F",
                                                    price: 27e3
                                                },
                                                69: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Western MC",
                                                    male: "MP_MP_Biker_Tat_023_M",
                                                    female: "MP_MP_Biker_Tat_023_F",
                                                    price: 27e3
                                                },
                                                72: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "American Dream",
                                                    male: "MP_MP_Biker_Tat_026_M",
                                                    female: "MP_MP_Biker_Tat_026_F",
                                                    price: 27e3
                                                },
                                                75: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Bone Wrench",
                                                    male: "MP_MP_Biker_Tat_029_M",
                                                    female: "MP_MP_Biker_Tat_029_F",
                                                    price: 19800
                                                },
                                                77: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Gear Head",
                                                    male: "MP_MP_Biker_Tat_031_M",
                                                    female: "MP_MP_Biker_Tat_031_F",
                                                    price: 27e3
                                                },
                                                78: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Western Eagle",
                                                    male: "MP_MP_Biker_Tat_032_M",
                                                    female: "MP_MP_Biker_Tat_032_F",
                                                    price: 16200
                                                },
                                                80: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Brotherhood of Bikes",
                                                    male: "MP_MP_Biker_Tat_034_M",
                                                    female: "MP_MP_Biker_Tat_034_F",
                                                    price: 16200
                                                },
                                                85: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Gas Guzzler",
                                                    male: "MP_MP_Biker_Tat_039_M",
                                                    female: "MP_MP_Biker_Tat_039_F",
                                                    price: 27e3
                                                },
                                                87: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "No Regrets",
                                                    male: "MP_MP_Biker_Tat_041_M",
                                                    female: "MP_MP_Biker_Tat_041_F",
                                                    price: 27e3
                                                },
                                                96: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Unforgiven",
                                                    male: "MP_MP_Biker_Tat_050_M",
                                                    female: "MP_MP_Biker_Tat_050_F",
                                                    price: 30600
                                                },
                                                98: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Mount",
                                                    male: "MP_MP_Biker_Tat_052_M",
                                                    female: "MP_MP_Biker_Tat_052_F",
                                                    price: 27e3
                                                },
                                                104: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Reaper Vulture",
                                                    male: "MP_MP_Biker_Tat_058_M",
                                                    female: "MP_MP_Biker_Tat_058_F",
                                                    price: 16200
                                                },
                                                105: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Faggio",
                                                    male: "MP_MP_Biker_Tat_059_M",
                                                    female: "MP_MP_Biker_Tat_059_F",
                                                    price: 19800
                                                },
                                                106: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "We Are The Mods!",
                                                    male: "MP_MP_Biker_Tat_060_M",
                                                    female: "MP_MP_Biker_Tat_060_F",
                                                    price: 16200
                                                },
                                                433: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Wheels of Death",
                                                    male: "MP_MP_Stunt_Tat_011_M",
                                                    female: "MP_MP_Stunt_Tat_011_F",
                                                    price: 30600
                                                },
                                                434: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Punk Biker",
                                                    male: "MP_MP_Stunt_Tat_012_M",
                                                    female: "MP_MP_Stunt_Tat_012_F",
                                                    price: 19800
                                                },
                                                436: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Bat Cat of Spades",
                                                    male: "MP_MP_Stunt_Tat_014_M",
                                                    female: "MP_MP_Stunt_Tat_014_F",
                                                    price: 30600
                                                },
                                                440: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Vintage Bully",
                                                    male: "MP_MP_Stunt_Tat_018_M",
                                                    female: "MP_MP_Stunt_Tat_018_F",
                                                    price: 16200
                                                },
                                                441: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Engine Heart",
                                                    male: "MP_MP_Stunt_Tat_019_M",
                                                    female: "MP_MP_Stunt_Tat_019_F",
                                                    price: 19800
                                                },
                                                449: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Punk Road Hog",
                                                    male: "MP_MP_Stunt_Tat_027_M",
                                                    female: "MP_MP_Stunt_Tat_027_F",
                                                    price: 19800
                                                },
                                                455: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Sugar Skull Trucker",
                                                    male: "MP_MP_Stunt_Tat_033_M",
                                                    female: "MP_MP_Stunt_Tat_033_F",
                                                    price: 16200
                                                },
                                                466: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Ram Skull",
                                                    male: "MP_MP_Stunt_Tat_044_M",
                                                    female: "MP_MP_Stunt_Tat_044_F",
                                                    price: 43200
                                                },
                                                802: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Herbal Bouquet",
                                                    male: "mp_christmas3_tat_004_m",
                                                    female: "mp_christmas3_tat_004_f",
                                                    price: 18e3
                                                },
                                                803: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Cash Krampus",
                                                    male: "mp_christmas3_tat_005_m",
                                                    female: "mp_christmas3_tat_005_f",
                                                    price: 2e4
                                                },
                                                804: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "All In One Night",
                                                    male: "mp_christmas3_tat_006_m",
                                                    female: "mp_christmas3_tat_006_f",
                                                    price: 2e4
                                                },
                                                805: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "A Little Present For You",
                                                    male: "mp_christmas3_tat_007_m",
                                                    female: "mp_christmas3_tat_007_f",
                                                    price: 2e4
                                                },
                                                812: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Masked Machete Killer",
                                                    male: "mp_christmas3_tat_014_m",
                                                    female: "mp_christmas3_tat_014_f",
                                                    price: 45e3
                                                },
                                                813: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Killer",
                                                    male: "mp_christmas3_tat_015_m",
                                                    female: "mp_christmas3_tat_015_f",
                                                    price: 16500
                                                },
                                                814: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Powwer",
                                                    male: "mp_christmas3_tat_016_m",
                                                    female: "mp_christmas3_tat_016_f",
                                                    price: 17500
                                                },
                                                815: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Two Headed Beast",
                                                    male: "mp_christmas3_tat_017_m",
                                                    female: "mp_christmas3_tat_018_m",
                                                    price: 35e3
                                                },
                                                816: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dudes",
                                                    male: "mp_christmas3_tat_018_m",
                                                    female: "mp_christmas3_tat_018_f",
                                                    price: 22e3
                                                },
                                                817: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fooligan Jester",
                                                    male: "mp_christmas3_tat_019_m",
                                                    female: "mp_christmas3_tat_019_f",
                                                    price: 21e3
                                                },
                                                818: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Vile Smile",
                                                    male: "mp_christmas3_tat_020_m",
                                                    female: "mp_christmas3_tat_020_f",
                                                    price: 23e3
                                                },
                                                819: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Demon Skull Jester",
                                                    male: "mp_christmas3_tat_021_m",
                                                    female: "mp_christmas3_tat_021_f",
                                                    price: 22500
                                                },
                                                820: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fatal Incursion Outline",
                                                    male: "mp_christmas3_tat_022_m",
                                                    female: "mp_christmas3_tat_022_f",
                                                    price: 18500
                                                },
                                                821: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Many-Headed Beast",
                                                    male: "mp_christmas3_tat_023_m",
                                                    female: "mp_christmas3_tat_023_f",
                                                    price: 27500
                                                },
                                                822: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Demon Stitches",
                                                    male: "mp_christmas3_tat_024_m",
                                                    female: "mp_christmas3_tat_024_f",
                                                    price: 17e3
                                                },
                                                823: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Collector",
                                                    male: "mp_christmas3_tat_025_m",
                                                    female: "mp_christmas3_tat_025_f",
                                                    price: 36e3
                                                },
                                                838: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Monkey",
                                                    male: "mp_christmas3_tat_040_m",
                                                    female: "mp_christmas3_tat_040_f",
                                                    price: 25e3
                                                },
                                                839: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dragon",
                                                    male: "mp_christmas3_tat_041_m",
                                                    female: "mp_christmas3_tat_041_f",
                                                    price: 25500
                                                },
                                                840: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Snake",
                                                    male: "mp_christmas3_tat_042_m",
                                                    female: "mp_christmas3_tat_042_f",
                                                    price: 24250
                                                },
                                                841: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Goat",
                                                    male: "mp_christmas3_tat_043_m",
                                                    female: "mp_christmas3_tat_043_f",
                                                    price: 25250
                                                },
                                                842: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Rat",
                                                    male: "mp_christmas3_tat_044_m",
                                                    female: "mp_christmas3_tat_044_f",
                                                    price: 23900
                                                },
                                                843: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Rabbit",
                                                    male: "mp_christmas3_tat_045_m",
                                                    female: "mp_christmas3_tat_045_f",
                                                    price: 23500
                                                },
                                                844: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Ox",
                                                    male: "mp_christmas3_tat_046_m",
                                                    female: "mp_christmas3_tat_046_f",
                                                    price: 25e3
                                                },
                                                845: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Pig",
                                                    male: "mp_christmas3_tat_047_m",
                                                    female: "mp_christmas3_tat_047_f",
                                                    price: 22500
                                                },
                                                846: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Rooster",
                                                    male: "mp_christmas3_tat_048_m",
                                                    female: "mp_christmas3_tat_048_f",
                                                    price: 23500
                                                },
                                                847: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dog",
                                                    male: "mp_christmas3_tat_049_m",
                                                    female: "mp_christmas3_tat_049_f",
                                                    price: 24e3
                                                },
                                                848: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Horse",
                                                    male: "mp_christmas3_tat_050_m",
                                                    female: "mp_christmas3_tat_050_f",
                                                    price: 23e3
                                                },
                                                849: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Tiger",
                                                    male: "mp_christmas3_tat_051_m",
                                                    female: "mp_christmas3_tat_051_f",
                                                    price: 22500
                                                }
                                            },
                                            7: {
                                                7: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Pilot Skull",
                                                    male: "MP_Airraces_Tattoo_001_M",
                                                    female: "MP_Airraces_Tattoo_001_F",
                                                    price: 30600
                                                },
                                                8: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Winged Bombshell",
                                                    male: "MP_Airraces_Tattoo_002_M",
                                                    female: "MP_Airraces_Tattoo_002_F",
                                                    price: 30600
                                                },
                                                9: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Balloon Pioneer",
                                                    male: "MP_Airraces_Tattoo_004_M",
                                                    female: "MP_Airraces_Tattoo_004_F",
                                                    price: 43200
                                                },
                                                10: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Parachute Belle",
                                                    male: "MP_Airraces_Tattoo_005_M",
                                                    female: "MP_Airraces_Tattoo_005_F",
                                                    price: 30600
                                                },
                                                12: {
                                                    overlay: "mpairraces_overlays",
                                                    name: "Eagle Eyes",
                                                    male: "MP_Airraces_Tattoo_007_M",
                                                    female: "MP_Airraces_Tattoo_007_F",
                                                    price: 30600
                                                },
                                                52: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Chopper Freedom",
                                                    male: "MP_MP_Biker_Tat_006_M",
                                                    female: "MP_MP_Biker_Tat_006_F",
                                                    price: 16200
                                                },
                                                54: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Freedom Wheels",
                                                    male: "MP_MP_Biker_Tat_008_M",
                                                    female: "MP_MP_Biker_Tat_008_F",
                                                    price: 27e3
                                                },
                                                57: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "R.I.P. My Brothers",
                                                    male: "MP_MP_Biker_Tat_011_M",
                                                    female: "MP_MP_Biker_Tat_011_F",
                                                    price: 27e3
                                                },
                                                63: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Clawed Beast",
                                                    male: "MP_MP_Biker_Tat_017_M",
                                                    female: "MP_MP_Biker_Tat_017_F",
                                                    price: 27e3
                                                },
                                                67: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Flaming Reaper",
                                                    male: "MP_MP_Biker_Tat_021_M",
                                                    female: "MP_MP_Biker_Tat_021_F",
                                                    price: 27e3
                                                },
                                                76: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Brothers For Life",
                                                    male: "MP_MP_Biker_Tat_030_M",
                                                    female: "MP_MP_Biker_Tat_030_F",
                                                    price: 27e3
                                                },
                                                89: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Ride Forever",
                                                    male: "MP_MP_Biker_Tat_043_M",
                                                    female: "MP_MP_Biker_Tat_043_F",
                                                    price: 27e3
                                                },
                                                446: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Road Kill",
                                                    male: "MP_MP_Stunt_Tat_024_M",
                                                    female: "MP_MP_Stunt_Tat_024_F",
                                                    price: 39600
                                                },
                                                448: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Winged Wheel",
                                                    male: "MP_MP_Stunt_Tat_026_M",
                                                    female: "MP_MP_Stunt_Tat_026_F",
                                                    price: 27e3
                                                },
                                                451: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Majestic Finish",
                                                    male: "MP_MP_Stunt_Tat_029_M",
                                                    female: "MP_MP_Stunt_Tat_029_F",
                                                    price: 27e3
                                                },
                                                452: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Man's Ruin",
                                                    male: "MP_MP_Stunt_Tat_030_M",
                                                    female: "MP_MP_Stunt_Tat_030_F",
                                                    price: 19800
                                                },
                                                456: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Feather Road Kill",
                                                    male: "MP_MP_Stunt_Tat_034_M",
                                                    female: "MP_MP_Stunt_Tat_034_F",
                                                    price: 39600
                                                },
                                                459: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Big Grills",
                                                    male: "MP_MP_Stunt_Tat_037_M",
                                                    female: "MP_MP_Stunt_Tat_037_F",
                                                    price: 19800
                                                },
                                                462: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Monkey Chopper",
                                                    male: "MP_MP_Stunt_Tat_040_M",
                                                    female: "MP_MP_Stunt_Tat_040_F",
                                                    price: 30600
                                                },
                                                463: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Brapp",
                                                    male: "MP_MP_Stunt_Tat_041_M",
                                                    female: "MP_MP_Stunt_Tat_041_F",
                                                    price: 30600
                                                },
                                                468: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Full Throttle",
                                                    male: "MP_MP_Stunt_Tat_046_M",
                                                    female: "MP_MP_Stunt_Tat_046_F",
                                                    price: 30600
                                                },
                                                470: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Racing Doll",
                                                    male: "MP_MP_Stunt_Tat_048_M",
                                                    female: "MP_MP_Stunt_Tat_048_F",
                                                    price: 30600
                                                }
                                            },
                                            3: {
                                                48: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Rose Tribute",
                                                    male: "MP_MP_Biker_Tat_002_M",
                                                    female: "MP_MP_Biker_Tat_002_F",
                                                    price: 27e3
                                                },
                                                61: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Ride or Die",
                                                    male: "MP_MP_Biker_Tat_015_M",
                                                    female: "MP_MP_Biker_Tat_015_F",
                                                    price: 16200
                                                },
                                                73: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Bad Luck",
                                                    male: "MP_MP_Biker_Tat_027_M",
                                                    female: "MP_MP_Biker_Tat_027_F",
                                                    price: 27e3
                                                },
                                                82: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Engulfed Skull",
                                                    male: "MP_MP_Biker_Tat_036_M",
                                                    female: "MP_MP_Biker_Tat_036_F",
                                                    price: 27e3
                                                },
                                                83: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Scorched Soul",
                                                    male: "MP_MP_Biker_Tat_037_M",
                                                    female: "MP_MP_Biker_Tat_037_F",
                                                    price: 30600
                                                },
                                                90: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Ride Free",
                                                    male: "MP_MP_Biker_Tat_044_M",
                                                    female: "MP_MP_Biker_Tat_044_F",
                                                    price: 27e3
                                                },
                                                102: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Bone Cruiser",
                                                    male: "MP_MP_Biker_Tat_056_M",
                                                    female: "MP_MP_Biker_Tat_056_F",
                                                    price: 27e3
                                                },
                                                103: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Laughing Skull",
                                                    male: "MP_MP_Biker_Tat_057_M",
                                                    female: "MP_MP_Biker_Tat_057_F",
                                                    price: 39600
                                                },
                                                429: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Dagger Devil",
                                                    male: "MP_MP_Stunt_Tat_007_M",
                                                    female: "MP_MP_Stunt_Tat_007_F",
                                                    price: 30600
                                                },
                                                435: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Dirt Track Hero",
                                                    male: "MP_MP_Stunt_Tat_013_M",
                                                    female: "MP_MP_Stunt_Tat_013_F",
                                                    price: 16200
                                                },
                                                443: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Golden Cobra",
                                                    male: "MP_MP_Stunt_Tat_021_M",
                                                    female: "MP_MP_Stunt_Tat_021_F",
                                                    price: 43200
                                                },
                                                450: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Quad Goblin",
                                                    male: "MP_MP_Stunt_Tat_028_M",
                                                    female: "MP_MP_Stunt_Tat_028_F",
                                                    price: 30600
                                                },
                                                453: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Stunt Jesus",
                                                    male: "MP_MP_Stunt_Tat_031_M",
                                                    female: "MP_MP_Stunt_Tat_031_F",
                                                    price: 19800
                                                },
                                                807: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Naughty Snow Globe",
                                                    male: "mp_christmas3_tat_009_m",
                                                    female: "mp_christmas3_tat_009_f",
                                                    price: 19500
                                                },
                                                832: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Zombie Head",
                                                    male: "mp_christmas3_tat_034_m",
                                                    female: "mp_christmas3_tat_034_f",
                                                    price: 21500
                                                },
                                                835: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Orang-O-Tang Grenade",
                                                    male: "mp_christmas3_tat_037_m",
                                                    female: "mp_christmas3_tat_037_f",
                                                    price: 19500
                                                },
                                                836: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fool",
                                                    male: "mp_christmas3_tat_038_m",
                                                    female: "mp_christmas3_tat_038_f",
                                                    price: 19e3
                                                }
                                            },
                                            4: {
                                                50: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Dragon's Fury",
                                                    male: "MP_MP_Biker_Tat_004_M",
                                                    female: "MP_MP_Biker_Tat_004_F",
                                                    price: 43200
                                                },
                                                68: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Western Insignia",
                                                    male: "MP_MP_Biker_Tat_022_M",
                                                    female: "MP_MP_Biker_Tat_022_F",
                                                    price: 19800
                                                },
                                                74: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Dusk Rider",
                                                    male: "MP_MP_Biker_Tat_028_M",
                                                    female: "MP_MP_Biker_Tat_028_F",
                                                    price: 27e3
                                                },
                                                86: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "American Made",
                                                    male: "MP_MP_Biker_Tat_040_M",
                                                    female: "MP_MP_Biker_Tat_040_F",
                                                    price: 30600
                                                },
                                                94: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "STFU",
                                                    male: "MP_MP_Biker_Tat_048_M",
                                                    female: "MP_MP_Biker_Tat_048_F",
                                                    price: 30600
                                                },
                                                427: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Demon Spark Plug",
                                                    male: "MP_MP_Stunt_Tat_005_M",
                                                    female: "MP_MP_Stunt_Tat_005_F",
                                                    price: 16200
                                                },
                                                437: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Praying Gloves",
                                                    male: "MP_MP_Stunt_Tat_015_M",
                                                    female: "MP_MP_Stunt_Tat_015_F",
                                                    price: 19800
                                                },
                                                442: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Piston Angel",
                                                    male: "MP_MP_Stunt_Tat_020_M",
                                                    female: "MP_MP_Stunt_Tat_020_F",
                                                    price: 30600
                                                },
                                                447: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Speed Freak",
                                                    male: "MP_MP_Stunt_Tat_025_M",
                                                    female: "MP_MP_Stunt_Tat_025_F",
                                                    price: 19800
                                                },
                                                454: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Wheelie Mouse",
                                                    male: "MP_MP_Stunt_Tat_032_M",
                                                    female: "MP_MP_Stunt_Tat_032_F",
                                                    price: 30600
                                                },
                                                467: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Severed Hand",
                                                    male: "MP_MP_Stunt_Tat_045_M",
                                                    female: "MP_MP_Stunt_Tat_045_F",
                                                    price: 43200
                                                },
                                                469: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Brake Knife",
                                                    male: "MP_MP_Stunt_Tat_047_M",
                                                    female: "MP_MP_Stunt_Tat_047_F",
                                                    price: 30600
                                                },
                                                806: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Gingerbread Steed",
                                                    male: "mp_christmas3_tat_008_m",
                                                    female: "mp_christmas3_tat_008_f",
                                                    price: 19e3
                                                },
                                                833: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Erupting Skeleton",
                                                    male: "mp_christmas3_tat_035_m",
                                                    female: "mp_christmas3_tat_035_f",
                                                    price: 20500
                                                },
                                                834: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "B'Donk Now Crank It Later",
                                                    male: "mp_christmas3_tat_036_m",
                                                    female: "mp_christmas3_tat_036_f",
                                                    price: 21500
                                                },
                                                837: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Jack Me",
                                                    male: "mp_christmas3_tat_039_m",
                                                    female: "mp_christmas3_tat_039_f",
                                                    price: 18e3
                                                }
                                            },
                                            6: {
                                                53: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Swooping Eagle",
                                                    male: "MP_MP_Biker_Tat_007_M",
                                                    female: "MP_MP_Biker_Tat_007_F",
                                                    price: 16200
                                                },
                                                60: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Lady Mortality",
                                                    male: "MP_MP_Biker_Tat_014_M",
                                                    female: "MP_MP_Biker_Tat_014_F",
                                                    price: 27e3
                                                },
                                                79: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Eagle Emblem",
                                                    male: "MP_MP_Biker_Tat_033_M",
                                                    female: "MP_MP_Biker_Tat_033_F",
                                                    price: 16200
                                                },
                                                88: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Grim Rider",
                                                    male: "MP_MP_Biker_Tat_042_M",
                                                    female: "MP_MP_Biker_Tat_042_F",
                                                    price: 27e3
                                                },
                                                92: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Skull Chain",
                                                    male: "MP_MP_Biker_Tat_046_M",
                                                    female: "MP_MP_Biker_Tat_046_F",
                                                    price: 16200
                                                },
                                                93: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Snake Bike",
                                                    male: "MP_MP_Biker_Tat_047_M",
                                                    female: "MP_MP_Biker_Tat_047_F",
                                                    price: 43200
                                                },
                                                95: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "These Colors Don't Run",
                                                    male: "MP_MP_Biker_Tat_049_M",
                                                    female: "MP_MP_Biker_Tat_049_F",
                                                    price: 30600
                                                },
                                                100: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Mum",
                                                    male: "MP_MP_Biker_Tat_054_M",
                                                    female: "MP_MP_Biker_Tat_054_F",
                                                    price: 27e3
                                                },
                                                425: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Poison Wrench",
                                                    male: "MP_MP_Stunt_Tat_003_M",
                                                    female: "MP_MP_Stunt_Tat_003_F",
                                                    price: 27e3
                                                },
                                                431: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Arachnid of Death",
                                                    male: "MP_MP_Stunt_Tat_009_M",
                                                    female: "MP_MP_Stunt_Tat_009_F",
                                                    price: 16200
                                                },
                                                432: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Grave Vulture",
                                                    male: "MP_MP_Stunt_Tat_010_M",
                                                    female: "MP_MP_Stunt_Tat_010_F",
                                                    price: 19800
                                                },
                                                438: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Coffin Racer",
                                                    male: "MP_MP_Stunt_Tat_016_M",
                                                    female: "MP_MP_Stunt_Tat_016_F",
                                                    price: 27e3
                                                },
                                                458: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Biker Stallion",
                                                    male: "MP_MP_Stunt_Tat_036_M",
                                                    female: "MP_MP_Stunt_Tat_036_F",
                                                    price: 16200
                                                },
                                                460: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "One Down Five Up",
                                                    male: "MP_MP_Stunt_Tat_038_M",
                                                    female: "MP_MP_Stunt_Tat_038_F",
                                                    price: 16200
                                                },
                                                471: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Seductive Mechanic",
                                                    male: "MP_MP_Stunt_Tat_049_M",
                                                    female: "MP_MP_Stunt_Tat_049_F",
                                                    price: 43200
                                                },
                                                800: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Skull Bauble",
                                                    male: "mp_christmas3_tat_002_m",
                                                    female: "mp_christmas3_tat_002_f",
                                                    price: 17500
                                                },
                                                801: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Bony Snowman",
                                                    male: "mp_christmas3_tat_003_m",
                                                    female: "mp_christmas3_tat_003_f",
                                                    price: 15e3
                                                },
                                                825: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Orang-O-Tang Dude",
                                                    male: "mp_christmas3_tat_027_m",
                                                    female: "mp_christmas3_tat_027_f",
                                                    price: 18e3
                                                },
                                                827: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Orang-O-Tang Gray",
                                                    male: "mp_christmas3_tat_029_m",
                                                    female: "mp_christmas3_tat_029_f",
                                                    price: 17e3
                                                },
                                                829: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Sailor Fuku Killer",
                                                    male: "mp_christmas3_tat_031_m",
                                                    female: "mp_christmas3_tat_031_f",
                                                    price: 18e3
                                                },
                                                830: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fooligan",
                                                    male: "mp_christmas3_tat_032_m",
                                                    female: "mp_christmas3_tat_032_f",
                                                    price: 13500
                                                }
                                            },
                                            2: {
                                                55: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Morbid Arachnid",
                                                    male: "MP_MP_Biker_Tat_009_M",
                                                    female: "MP_MP_Biker_Tat_009_F",
                                                    price: 7200
                                                },
                                                84: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "FTW",
                                                    male: "MP_MP_Biker_Tat_038_M",
                                                    female: "MP_MP_Biker_Tat_038_F",
                                                    price: 16200
                                                },
                                                97: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Western Stylized",
                                                    male: "MP_MP_Biker_Tat_051_M",
                                                    female: "MP_MP_Biker_Tat_051_F",
                                                    price: 16200
                                                },
                                                422: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Stunt Skull",
                                                    male: "MP_MP_Stunt_Tat_000_M",
                                                    female: "MP_MP_Stunt_Tat_000_F",
                                                    price: 16200
                                                },
                                                426: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Scorpion",
                                                    male: "MP_MP_Stunt_Tat_004_M",
                                                    female: "MP_MP_Stunt_Tat_004_F",
                                                    price: 19800
                                                },
                                                428: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Toxic Spider",
                                                    male: "MP_MP_Stunt_Tat_006_M",
                                                    female: "MP_MP_Stunt_Tat_006_F",
                                                    price: 16200
                                                },
                                                439: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Bat Wheel",
                                                    male: "MP_MP_Stunt_Tat_017_M",
                                                    female: "MP_MP_Stunt_Tat_017_F",
                                                    price: 7200
                                                },
                                                464: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Flaming Quad",
                                                    male: "MP_MP_Stunt_Tat_042_M",
                                                    female: "MP_MP_Stunt_Tat_042_F",
                                                    price: 16200
                                                },
                                                808: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dude",
                                                    male: "mp_christmas3_tat_010_m",
                                                    female: "mp_christmas3_tat_010_f",
                                                    price: 17500
                                                },
                                                809: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fooligan Tribal",
                                                    male: "mp_christmas3_tat_011_m",
                                                    female: "mp_christmas3_tat_011_f",
                                                    price: 17500
                                                },
                                                810: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Skull Jester",
                                                    male: "mp_christmas3_tat_012_m",
                                                    female: "mp_christmas3_tat_012_f",
                                                    price: 14e3
                                                },
                                                811: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Budonk-adonk!",
                                                    male: "mp_christmas3_tat_013_m",
                                                    female: "mp_christmas3_tat_013_f",
                                                    price: 15500
                                                }
                                            },
                                            5: {
                                                58: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Urban Stunter",
                                                    male: "MP_MP_Biker_Tat_012_M",
                                                    female: "MP_MP_Biker_Tat_012_F",
                                                    price: 16200
                                                },
                                                62: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Macabre Tree",
                                                    male: "MP_MP_Biker_Tat_016_M",
                                                    female: "MP_MP_Biker_Tat_016_F",
                                                    price: 16200
                                                },
                                                66: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Cranial Rose",
                                                    male: "MP_MP_Biker_Tat_020_M",
                                                    female: "MP_MP_Biker_Tat_020_F",
                                                    price: 19800
                                                },
                                                70: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Live to Ride",
                                                    male: "MP_MP_Biker_Tat_024_M",
                                                    female: "MP_MP_Biker_Tat_024_F",
                                                    price: 39600
                                                },
                                                71: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Good Luck",
                                                    male: "MP_MP_Biker_Tat_025_M",
                                                    female: "MP_MP_Biker_Tat_025_F",
                                                    price: 27e3
                                                },
                                                81: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Chain Fist",
                                                    male: "MP_MP_Biker_Tat_035_M",
                                                    female: "MP_MP_Biker_Tat_035_F",
                                                    price: 7200
                                                },
                                                91: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Ride Hard Die Fast",
                                                    male: "MP_MP_Biker_Tat_045_M",
                                                    female: "MP_MP_Biker_Tat_045_F",
                                                    price: 16200
                                                },
                                                99: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Muffler Helmet",
                                                    male: "MP_MP_Biker_Tat_053_M",
                                                    female: "MP_MP_Biker_Tat_053_F",
                                                    price: 27e3
                                                },
                                                101: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Poison Scorpion",
                                                    male: "MP_MP_Biker_Tat_055_M",
                                                    female: "MP_MP_Biker_Tat_055_F",
                                                    price: 27e3
                                                },
                                                423: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "8 Eyed Skull",
                                                    male: "MP_MP_Stunt_Tat_001_M",
                                                    female: "MP_MP_Stunt_Tat_001_F",
                                                    price: 27e3
                                                },
                                                424: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Big Cat",
                                                    male: "MP_MP_Stunt_Tat_002_M",
                                                    female: "MP_MP_Stunt_Tat_002_F",
                                                    price: 16200
                                                },
                                                430: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Moonlight Ride",
                                                    male: "MP_MP_Stunt_Tat_008_M",
                                                    female: "MP_MP_Stunt_Tat_008_F",
                                                    price: 19800
                                                },
                                                444: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Piston Head",
                                                    male: "MP_MP_Stunt_Tat_022_M",
                                                    female: "MP_MP_Stunt_Tat_022_F",
                                                    price: 30600
                                                },
                                                445: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Tanked",
                                                    male: "MP_MP_Stunt_Tat_023_M",
                                                    female: "MP_MP_Stunt_Tat_023_F",
                                                    price: 39600
                                                },
                                                457: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Stuntmans End",
                                                    male: "MP_MP_Stunt_Tat_035_M",
                                                    female: "MP_MP_Stunt_Tat_035_F",
                                                    price: 16200
                                                },
                                                461: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Kaboom",
                                                    male: "MP_MP_Stunt_Tat_039_M",
                                                    female: "MP_MP_Stunt_Tat_039_F",
                                                    price: 19800
                                                },
                                                465: {
                                                    overlay: "mpstunt_overlays",
                                                    name: "Engine Arm",
                                                    male: "MP_MP_Stunt_Tat_043_M",
                                                    female: "MP_MP_Stunt_Tat_043_F",
                                                    price: 30600
                                                },
                                                798: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "The Christmas Spirit",
                                                    male: "mp_christmas3_tat_000_m",
                                                    female: "mp_christmas3_tat_000_f",
                                                    price: 15e3
                                                },
                                                799: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Festive Reaper",
                                                    male: "mp_christmas3_tat_001_m",
                                                    female: "mp_christmas3_tat_001_f",
                                                    price: 17500
                                                },
                                                824: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fooligan Clown",
                                                    male: "mp_christmas3_tat_026_m",
                                                    female: "mp_christmas3_tat_026_f",
                                                    price: 21e3
                                                },
                                                826: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dude Outline",
                                                    male: "mp_christmas3_tat_028_m",
                                                    female: "mp_christmas3_tat_028_f",
                                                    price: 17e3
                                                },
                                                828: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Dude Jester",
                                                    male: "mp_christmas3_tat_030_m",
                                                    female: "mp_christmas3_tat_030_f",
                                                    price: 19e3
                                                },
                                                831: {
                                                    overlay: "mpchristmas3_overlays",
                                                    name: "Fooligan Impotent Rage",
                                                    male: "mp_christmas3_tat_033_m",
                                                    female: "mp_christmas3_tat_033_f",
                                                    price: 23e3
                                                }
                                            },
                                            8: {
                                                690: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v1",
                                                    male: "MP_Biker_Hair_000_M",
                                                    female: "MP_Biker_Hair_000_F",
                                                    price: 200
                                                },
                                                691: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v2",
                                                    male: "MP_Biker_Hair_001_M",
                                                    female: "MP_Biker_Hair_001_F",
                                                    price: 200
                                                },
                                                692: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v3",
                                                    male: "MP_Biker_Hair_002_M",
                                                    female: "MP_Biker_Hair_002_F",
                                                    price: 200
                                                },
                                                693: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v4",
                                                    male: "MP_Biker_Hair_003_M",
                                                    female: "MP_Biker_Hair_003_F",
                                                    price: 200
                                                },
                                                694: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v5",
                                                    male: "MP_Biker_Hair_004_M",
                                                    female: "MP_Biker_Hair_004_F",
                                                    price: 200
                                                },
                                                695: {
                                                    overlay: "mpbiker_overlays",
                                                    name: "Biker Haare v6",
                                                    male: "MP_Biker_Hair_005_M",
                                                    female: "MP_Biker_Hair_005_F",
                                                    price: 200
                                                }
                                            }
                                        },
                                        5: {
                                            5: {
                                                164: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Skull Rider",
                                                    male: "MP_Xmas2_M_Tat_000",
                                                    female: "MP_Xmas2_F_Tat_000",
                                                    price: 16200
                                                },
                                                174: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Electric Snake",
                                                    male: "MP_Xmas2_M_Tat_010",
                                                    female: "MP_Xmas2_F_Tat_010",
                                                    price: 30600
                                                },
                                                176: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "8 Ball Skull",
                                                    male: "MP_Xmas2_M_Tat_012",
                                                    female: "MP_Xmas2_F_Tat_012",
                                                    price: 19800
                                                },
                                                184: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Time's Up Outline",
                                                    male: "MP_Xmas2_M_Tat_020",
                                                    female: "MP_Xmas2_F_Tat_020",
                                                    price: 10800
                                                },
                                                185: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Time's Up Color",
                                                    male: "MP_Xmas2_M_Tat_021",
                                                    female: "MP_Xmas2_F_Tat_021",
                                                    price: 7200
                                                },
                                                198: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Sidearm",
                                                    male: "MP_Gunrunning_Tattoo_004_M",
                                                    female: "MP_Gunrunning_Tattoo_004_F",
                                                    price: 19800
                                                },
                                                202: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Bandolier",
                                                    male: "MP_Gunrunning_Tattoo_008_M",
                                                    female: "MP_Gunrunning_Tattoo_008_F",
                                                    price: 16200
                                                },
                                                209: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Spiked Skull",
                                                    male: "MP_Gunrunning_Tattoo_015_M",
                                                    female: "MP_Gunrunning_Tattoo_015_F",
                                                    price: 39600
                                                },
                                                210: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Blood Money",
                                                    male: "MP_Gunrunning_Tattoo_016_M",
                                                    female: "MP_Gunrunning_Tattoo_016_F",
                                                    price: 16200
                                                },
                                                219: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Praying Skull",
                                                    male: "MP_Gunrunning_Tattoo_025_M",
                                                    female: "MP_Gunrunning_Tattoo_025_F",
                                                    price: 27e3
                                                },
                                                221: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Serpent Revolver",
                                                    male: "MP_Gunrunning_Tattoo_027_M",
                                                    female: "MP_Gunrunning_Tattoo_027_F",
                                                    price: 30600
                                                },
                                                323: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Piston Sleeve",
                                                    male: "MP_MP_ImportExport_Tat_004_M",
                                                    female: "MP_MP_ImportExport_Tat_004_F",
                                                    price: 39600
                                                },
                                                327: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Scarlett",
                                                    male: "MP_MP_ImportExport_Tat_008_M",
                                                    female: "MP_MP_ImportExport_Tat_008_F",
                                                    price: 43200
                                                },
                                                854: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Blumen v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_06_F",
                                                    price: 23e3
                                                },
                                                856: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Feder v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_08_F",
                                                    price: 21500
                                                },
                                                857: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Feder v2",
                                                    male: "",
                                                    female: "sib_f_cust_tat_09_F",
                                                    price: 21500
                                                },
                                                889: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Bursted Clock",
                                                    male: "sib_m_cust_tat_12_M",
                                                    female: "",
                                                    price: 23e3
                                                },
                                                893: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Dead Sisters",
                                                    male: "sib_m_cust_tat_16_M",
                                                    female: "",
                                                    price: 27e3
                                                }
                                            },
                                            3: {
                                                165: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Spider Outline",
                                                    male: "MP_Xmas2_M_Tat_001",
                                                    female: "MP_Xmas2_F_Tat_001",
                                                    price: 30600
                                                },
                                                166: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Spider Color",
                                                    male: "MP_Xmas2_M_Tat_002",
                                                    female: "MP_Xmas2_F_Tat_002",
                                                    price: 27e3
                                                },
                                                199: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Patriot Skull",
                                                    male: "MP_Gunrunning_Tattoo_005_M",
                                                    female: "MP_Gunrunning_Tattoo_005_F",
                                                    price: 19800
                                                },
                                                201: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Stylized Tiger",
                                                    male: "MP_Gunrunning_Tattoo_007_M",
                                                    female: "MP_Gunrunning_Tattoo_007_F",
                                                    price: 19800
                                                },
                                                205: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Death Skull",
                                                    male: "MP_Gunrunning_Tattoo_011_M",
                                                    female: "MP_Gunrunning_Tattoo_011_F",
                                                    price: 43200
                                                },
                                                217: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Rose Revolver",
                                                    male: "MP_Gunrunning_Tattoo_023_M",
                                                    female: "MP_Gunrunning_Tattoo_023_F",
                                                    price: 27e3
                                                },
                                                862: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Blume",
                                                    male: "",
                                                    female: "sib_f_cust_tat_14_F",
                                                    price: 23e3
                                                },
                                                899: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Guns n Roses v1",
                                                    male: "sib_m_cust_tat_22_M",
                                                    female: "",
                                                    price: 28e3
                                                }
                                            },
                                            6: {
                                                167: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Snake Outline",
                                                    male: "MP_Xmas2_M_Tat_003",
                                                    female: "MP_Xmas2_F_Tat_003",
                                                    price: 27e3
                                                },
                                                168: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Snake Shaded",
                                                    male: "MP_Xmas2_M_Tat_004",
                                                    female: "MP_Xmas2_F_Tat_004",
                                                    price: 39600
                                                },
                                                172: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Death Before Dishonor",
                                                    male: "MP_Xmas2_M_Tat_008",
                                                    female: "MP_Xmas2_F_Tat_008",
                                                    price: 19800
                                                },
                                                186: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "You're Next Outline",
                                                    male: "MP_Xmas2_M_Tat_022",
                                                    female: "MP_Xmas2_F_Tat_022",
                                                    price: 30600
                                                },
                                                187: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "You're Next Color",
                                                    male: "MP_Xmas2_M_Tat_023",
                                                    female: "MP_Xmas2_F_Tat_023",
                                                    price: 27e3
                                                },
                                                190: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Fuck Luck Outline",
                                                    male: "MP_Xmas2_M_Tat_026",
                                                    female: "MP_Xmas2_F_Tat_026",
                                                    price: 19800
                                                },
                                                191: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Fuck Luck Color",
                                                    male: "MP_Xmas2_M_Tat_027",
                                                    female: "MP_Xmas2_F_Tat_027",
                                                    price: 19800
                                                },
                                                196: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Grenade",
                                                    male: "MP_Gunrunning_Tattoo_002_M",
                                                    female: "MP_Gunrunning_Tattoo_002_F",
                                                    price: 16200
                                                },
                                                215: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Have a Nice Day",
                                                    male: "MP_Gunrunning_Tattoo_021_M",
                                                    female: "MP_Gunrunning_Tattoo_021_F",
                                                    price: 16200
                                                },
                                                218: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Combat Reaper",
                                                    male: "MP_Gunrunning_Tattoo_024_M",
                                                    female: "MP_Gunrunning_Tattoo_024_F",
                                                    price: 27e3
                                                },
                                                322: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Mechanical Sleeve",
                                                    male: "MP_MP_ImportExport_Tat_003_M",
                                                    female: "MP_MP_ImportExport_Tat_003_F",
                                                    price: 39600
                                                },
                                                324: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Dialed In",
                                                    male: "MP_MP_ImportExport_Tat_005_M",
                                                    female: "MP_MP_ImportExport_Tat_005_F",
                                                    price: 39600
                                                },
                                                325: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Engulfed Block",
                                                    male: "MP_MP_ImportExport_Tat_006_M",
                                                    female: "MP_MP_ImportExport_Tat_006_F",
                                                    price: 39600
                                                },
                                                326: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Drive Forever",
                                                    male: "MP_MP_ImportExport_Tat_007_M",
                                                    female: "MP_MP_ImportExport_Tat_007_F",
                                                    price: 43200
                                                },
                                                884: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Crowned Skull v1",
                                                    male: "sib_m_cust_tat_07_M",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                885: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Crowned Skull v2",
                                                    male: "sib_m_cust_tat_08_M",
                                                    female: "",
                                                    price: 27e3
                                                },
                                                886: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Ornament Skull v1",
                                                    male: "sib_m_cust_tat_09_M",
                                                    female: "",
                                                    price: 26e3
                                                },
                                                887: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Ornament Skull v2",
                                                    male: "sib_m_cust_tat_10_M",
                                                    female: "",
                                                    price: 26e3
                                                }
                                            },
                                            7: {
                                                169: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Carp Outline",
                                                    male: "MP_Xmas2_M_Tat_005",
                                                    female: "MP_Xmas2_F_Tat_005",
                                                    price: 27e3
                                                },
                                                170: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Carp Shaded",
                                                    male: "MP_Xmas2_M_Tat_006",
                                                    female: "MP_Xmas2_F_Tat_006",
                                                    price: 43200
                                                },
                                                175: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Roaring Tiger",
                                                    male: "MP_Xmas2_M_Tat_011",
                                                    female: "MP_Xmas2_F_Tat_011",
                                                    price: 19800
                                                },
                                                179: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Japanese Warrior",
                                                    male: "MP_Xmas2_M_Tat_015",
                                                    female: "MP_Xmas2_F_Tat_015",
                                                    price: 27e3
                                                },
                                                194: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Bullet Proof",
                                                    male: "MP_Gunrunning_Tattoo_000_M",
                                                    female: "MP_Gunrunning_Tattoo_000_F",
                                                    price: 27e3
                                                },
                                                195: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Crossed Weapons",
                                                    male: "MP_Gunrunning_Tattoo_001_M",
                                                    female: "MP_Gunrunning_Tattoo_001_F",
                                                    price: 16200
                                                },
                                                203: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Butterfly Knife",
                                                    male: "MP_Gunrunning_Tattoo_009_M",
                                                    female: "MP_Gunrunning_Tattoo_009_F",
                                                    price: 30600
                                                },
                                                207: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Wolf Insignia",
                                                    male: "MP_Gunrunning_Tattoo_013_M",
                                                    female: "MP_Gunrunning_Tattoo_013_F",
                                                    price: 30600
                                                },
                                                208: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Backstabber",
                                                    male: "MP_Gunrunning_Tattoo_014_M",
                                                    female: "MP_Gunrunning_Tattoo_014_F",
                                                    price: 27e3
                                                },
                                                212: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Dual Wield Skull",
                                                    male: "MP_Gunrunning_Tattoo_018_M",
                                                    female: "MP_Gunrunning_Tattoo_018_F",
                                                    price: 16200
                                                },
                                                213: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Pistol Wings",
                                                    male: "MP_Gunrunning_Tattoo_019_M",
                                                    female: "MP_Gunrunning_Tattoo_019_F",
                                                    price: 27e3
                                                },
                                                216: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Explosive Heart",
                                                    male: "MP_Gunrunning_Tattoo_022_M",
                                                    female: "MP_Gunrunning_Tattoo_022_F",
                                                    price: 16200
                                                },
                                                319: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Block Back",
                                                    male: "MP_MP_ImportExport_Tat_000_M",
                                                    female: "MP_MP_ImportExport_Tat_000_F",
                                                    price: 27e3
                                                },
                                                320: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Power Plant",
                                                    male: "MP_MP_ImportExport_Tat_001_M",
                                                    female: "MP_MP_ImportExport_Tat_001_F",
                                                    price: 27e3
                                                },
                                                321: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Tuned to Death",
                                                    male: "MP_MP_ImportExport_Tat_002_M",
                                                    female: "MP_MP_ImportExport_Tat_002_F",
                                                    price: 39600
                                                },
                                                328: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Serpents of Destruction",
                                                    male: "MP_MP_ImportExport_Tat_009_M",
                                                    female: "MP_MP_ImportExport_Tat_009_F",
                                                    price: 16200
                                                },
                                                329: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Take the Wheel",
                                                    male: "MP_MP_ImportExport_Tat_010_M",
                                                    female: "MP_MP_ImportExport_Tat_010_F",
                                                    price: 43200
                                                },
                                                330: {
                                                    overlay: "mpimportexport_overlays",
                                                    name: "Talk Shit Get Hit",
                                                    male: "MP_MP_ImportExport_Tat_011_M",
                                                    female: "MP_MP_ImportExport_Tat_011_F",
                                                    price: 27e3
                                                },
                                                852: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Spraying Goth v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_03_F",
                                                    price: 22e3
                                                },
                                                853: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Spraying Goth v2",
                                                    male: "",
                                                    female: "sib_f_cust_tat_04_F",
                                                    price: 22e3
                                                },
                                                858: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Schmetterling v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_10_F",
                                                    price: 34e3
                                                },
                                                859: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Schmetterling v2",
                                                    male: "",
                                                    female: "sib_f_cust_tat_11_F",
                                                    price: 34e3
                                                },
                                                860: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Flügel v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_12_F",
                                                    price: 37e3
                                                },
                                                861: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Flügel v2",
                                                    male: "",
                                                    female: "sib_f_cust_tat_13_F",
                                                    price: 37e3
                                                },
                                                870: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Indecipherable",
                                                    male: "",
                                                    female: "sib_f_cust_tat_22_F",
                                                    price: 25e3
                                                },
                                                880: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Spraying Goth v1",
                                                    male: "sib_m_cust_tat_03_M",
                                                    female: "",
                                                    price: 22e3
                                                },
                                                881: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Spraying Goth v2",
                                                    male: "sib_m_cust_tat_04_M",
                                                    female: "",
                                                    price: 22e3
                                                },
                                                882: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Betrayal Dollar v1",
                                                    male: "sib_m_cust_tat_05_M",
                                                    female: "",
                                                    price: 25e3
                                                },
                                                883: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Betrayal Dollar v2",
                                                    male: "sib_m_cust_tat_06_M",
                                                    female: "",
                                                    price: 25e3
                                                },
                                                897: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Paradise Beauty v1",
                                                    male: "sib_m_cust_tat_20_M",
                                                    female: "",
                                                    price: 29e3
                                                }
                                            },
                                            2: {
                                                171: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Los Muertos",
                                                    male: "MP_Xmas2_M_Tat_007",
                                                    female: "MP_Xmas2_F_Tat_007",
                                                    price: 19800
                                                },
                                                188: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Snake Head Outline",
                                                    male: "MP_Xmas2_M_Tat_024",
                                                    female: "MP_Xmas2_F_Tat_024",
                                                    price: 19800
                                                },
                                                189: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Snake Head Color",
                                                    male: "MP_Xmas2_M_Tat_025",
                                                    female: "MP_Xmas2_F_Tat_025",
                                                    price: 16200
                                                },
                                                193: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Beautiful Death",
                                                    male: "MP_Xmas2_M_Tat_029",
                                                    female: "MP_Xmas2_F_Tat_029",
                                                    price: 16200
                                                },
                                                197: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Lock & Load",
                                                    male: "MP_Gunrunning_Tattoo_003_M",
                                                    female: "MP_Gunrunning_Tattoo_003_F",
                                                    price: 16200
                                                },
                                                864: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Random",
                                                    male: "",
                                                    female: "sib_f_cust_tat_16_F",
                                                    price: 29e3
                                                },
                                                865: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Get Rich or Die Trying",
                                                    male: "",
                                                    female: "sib_f_cust_tat_17_F",
                                                    price: 28e3
                                                },
                                                866: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Winged Skull",
                                                    male: "",
                                                    female: "sib_f_cust_tat_18_F",
                                                    price: 23e3
                                                },
                                                888: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Random",
                                                    male: "sib_m_cust_tat_11_M",
                                                    female: "",
                                                    price: 26e3
                                                },
                                                890: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Winged Skull",
                                                    male: "sib_m_cust_tat_13_M",
                                                    female: "",
                                                    price: 29e3
                                                },
                                                891: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Get Rich or Die Trying",
                                                    male: "sib_m_cust_tat_14_M",
                                                    female: "",
                                                    price: 28e3
                                                },
                                                892: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Angel",
                                                    male: "sib_m_cust_tat_15_M",
                                                    female: "",
                                                    price: 29e3
                                                }
                                            },
                                            1: {
                                                173: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Time To Die",
                                                    male: "MP_Xmas2_M_Tat_009",
                                                    female: "MP_Xmas2_F_Tat_009",
                                                    price: 19800
                                                },
                                                177: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Lizard",
                                                    male: "MP_Xmas2_M_Tat_013",
                                                    female: "MP_Xmas2_F_Tat_013",
                                                    price: 19800
                                                },
                                                180: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Loose Lips Outline",
                                                    male: "MP_Xmas2_M_Tat_016",
                                                    female: "MP_Xmas2_F_Tat_016",
                                                    price: 19800
                                                },
                                                181: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Loose Lips Color",
                                                    male: "MP_Xmas2_M_Tat_017",
                                                    female: "MP_Xmas2_F_Tat_017",
                                                    price: 16200
                                                },
                                                182: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Royal Dagger Outline",
                                                    male: "MP_Xmas2_M_Tat_018",
                                                    female: "MP_Xmas2_F_Tat_018",
                                                    price: 30600
                                                },
                                                183: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Royal Dagger Color",
                                                    male: "MP_Xmas2_M_Tat_019",
                                                    female: "MP_Xmas2_F_Tat_019",
                                                    price: 27e3
                                                },
                                                192: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Executioner",
                                                    male: "MP_Xmas2_M_Tat_028",
                                                    female: "MP_Xmas2_F_Tat_028",
                                                    price: 30600
                                                },
                                                204: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Cash Money",
                                                    male: "MP_Gunrunning_Tattoo_010_M",
                                                    female: "MP_Gunrunning_Tattoo_010_F",
                                                    price: 30600
                                                },
                                                206: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Dollar Daggers",
                                                    male: "MP_Gunrunning_Tattoo_012_M",
                                                    female: "MP_Gunrunning_Tattoo_012_F",
                                                    price: 19800
                                                },
                                                211: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Dog Tags",
                                                    male: "MP_Gunrunning_Tattoo_017_M",
                                                    female: "MP_Gunrunning_Tattoo_017_F",
                                                    price: 16200
                                                },
                                                214: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Crowned Weapons",
                                                    male: "MP_Gunrunning_Tattoo_020_M",
                                                    female: "MP_Gunrunning_Tattoo_020_F",
                                                    price: 30600
                                                },
                                                222: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Micro SMG Chain",
                                                    male: "MP_Gunrunning_Tattoo_028_M",
                                                    female: "MP_Gunrunning_Tattoo_028_F",
                                                    price: 16200
                                                },
                                                223: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Win Some Lose Some",
                                                    male: "MP_Gunrunning_Tattoo_029_M",
                                                    female: "MP_Gunrunning_Tattoo_029_F",
                                                    price: 27e3
                                                },
                                                850: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Stiletto Skull v1",
                                                    male: "",
                                                    female: "sib_f_cust_tat_01_F",
                                                    price: 21e3
                                                },
                                                851: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Stiletto Skull v2",
                                                    male: "",
                                                    female: "sib_f_cust_tat_02_F",
                                                    price: 21e3
                                                },
                                                863: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Mysterious",
                                                    male: "",
                                                    female: "sib_f_cust_tat_15_F",
                                                    price: 31e3
                                                },
                                                867: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Mixed",
                                                    male: "",
                                                    female: "sib_f_cust_tat_19_F",
                                                    price: 29e3
                                                },
                                                876: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Stiletto Skull v1",
                                                    male: "sib_m_cust_tat_01_M",
                                                    female: "",
                                                    price: 21e3
                                                },
                                                877: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Stiletto Skull v2",
                                                    male: "sib_m_cust_tat_02_M",
                                                    female: "",
                                                    price: 21e3
                                                },
                                                894: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Loco",
                                                    male: "sib_m_cust_tat_17_M",
                                                    female: "",
                                                    price: 26e3
                                                },
                                                901: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Burning Winged Heart v1",
                                                    male: "sib_m_cust_tat_24_M",
                                                    female: "",
                                                    price: 31e3
                                                },
                                                902: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Burning Winged Heart v2",
                                                    male: "sib_m_cust_tat_25_M",
                                                    female: "",
                                                    price: 31e3
                                                }
                                            },
                                            4: {
                                                178: {
                                                    overlay: "mpchristmas2_overlays",
                                                    name: "Floral Dagger",
                                                    male: "MP_Xmas2_M_Tat_014",
                                                    female: "MP_Xmas2_F_Tat_014",
                                                    price: 30600
                                                },
                                                200: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Combat Skull",
                                                    male: "MP_Gunrunning_Tattoo_006_M",
                                                    female: "MP_Gunrunning_Tattoo_006_F",
                                                    price: 16200
                                                },
                                                220: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Restless Skull",
                                                    male: "MP_Gunrunning_Tattoo_026_M",
                                                    female: "MP_Gunrunning_Tattoo_026_F",
                                                    price: 27e3
                                                },
                                                224: {
                                                    overlay: "mpgunrunning_overlays",
                                                    name: "Pistol Ace",
                                                    male: "MP_Gunrunning_Tattoo_030_M",
                                                    female: "MP_Gunrunning_Tattoo_030_F",
                                                    price: 27e3
                                                },
                                                868: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Unrecognizable",
                                                    male: "",
                                                    female: "sib_f_cust_tat_20_F",
                                                    price: 29e3
                                                },
                                                895: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Bandana Skull v1",
                                                    male: "sib_m_cust_tat_18_M",
                                                    female: "",
                                                    price: 23e3
                                                },
                                                896: {
                                                    overlay: "sib_cust_tat_overlays",
                                                    name: "Bandana Skull v2",
                                                    male: "sib_m_cust_tat_19_M",
                                                    female: "",
                                                    price: 23e3
                                                }
                                            }
                                        },
                                        6: {
                                            7: {
                                                331: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "SA Assault",
                                                    male: "MP_LR_Tat_000_M",
                                                    female: "MP_LR_Tat_000_F",
                                                    price: 39600
                                                },
                                                334: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Love the Game",
                                                    male: "MP_LR_Tat_008_M",
                                                    female: "MP_LR_Tat_008_F",
                                                    price: 39600
                                                },
                                                344: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Dead Pretty",
                                                    male: "MP_LR_Tat_031_M",
                                                    female: "MP_LR_Tat_031_F",
                                                    price: 39600
                                                },
                                                345: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Reign Over",
                                                    male: "MP_LR_Tat_032_M",
                                                    female: "MP_LR_Tat_032_F",
                                                    price: 39600
                                                },
                                                352: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Amazon",
                                                    male: "MP_LR_Tat_009_M",
                                                    female: "MP_LR_Tat_009_F",
                                                    price: 16200
                                                },
                                                353: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Bad Angel",
                                                    male: "MP_LR_Tat_010_M",
                                                    female: "MP_LR_Tat_010_F",
                                                    price: 39600
                                                },
                                                355: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Love is Blind",
                                                    male: "MP_LR_Tat_014_M",
                                                    female: "MP_LR_Tat_014_F",
                                                    price: 39600
                                                },
                                                359: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Sad Angel",
                                                    male: "MP_LR_Tat_021_M",
                                                    female: "MP_LR_Tat_021_F",
                                                    price: 43200
                                                },
                                                510: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Angel",
                                                    male: "FM_Tat_Award_M_005",
                                                    female: "FM_Tat_Award_F_005",
                                                    price: 39600
                                                },
                                                513: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Los Santos Customs",
                                                    male: "FM_Tat_Award_M_008",
                                                    female: "FM_Tat_Award_F_008",
                                                    price: 27e3
                                                },
                                                519: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Trust No One",
                                                    male: "FM_Tat_Award_M_014",
                                                    female: "FM_Tat_Award_F_014",
                                                    price: 27e3
                                                },
                                                521: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Clown",
                                                    male: "FM_Tat_Award_M_016",
                                                    female: "FM_Tat_Award_F_016",
                                                    price: 7200
                                                },
                                                522: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Clown and Gun",
                                                    male: "FM_Tat_Award_M_017",
                                                    female: "FM_Tat_Award_F_017",
                                                    price: 16200
                                                },
                                                523: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Clown Dual Wield",
                                                    male: "FM_Tat_Award_M_018",
                                                    female: "FM_Tat_Award_F_018",
                                                    price: 27e3
                                                },
                                                524: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Clown Dual Wield Dollars",
                                                    male: "FM_Tat_Award_M_019",
                                                    female: "FM_Tat_Award_F_019",
                                                    price: 39600
                                                },
                                                534: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Skull on the Cross",
                                                    male: "FM_Tat_M_009",
                                                    female: "FM_Tat_F_009",
                                                    price: 39600
                                                },
                                                536: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "LS Script",
                                                    male: "FM_Tat_M_011",
                                                    female: "FM_Tat_F_011",
                                                    price: 16200
                                                },
                                                538: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Eagle and Serpent",
                                                    male: "FM_Tat_M_013",
                                                    female: "FM_Tat_F_013",
                                                    price: 16200
                                                },
                                                541: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Evil Clown",
                                                    male: "FM_Tat_M_016",
                                                    female: "FM_Tat_F_016",
                                                    price: 39600
                                                },
                                                544: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "The Wages of Sin",
                                                    male: "FM_Tat_M_019",
                                                    female: "FM_Tat_F_019",
                                                    price: 39600
                                                },
                                                545: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragon",
                                                    male: "FM_Tat_M_020",
                                                    female: "FM_Tat_F_020",
                                                    price: 39600
                                                },
                                                555: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Lucky Celtic Dogs",
                                                    male: "FM_Tat_M_030",
                                                    female: "FM_Tat_F_030",
                                                    price: 16200
                                                },
                                                570: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Skulls and Rose",
                                                    male: "FM_Tat_M_045",
                                                    female: "FM_Tat_F_045",
                                                    price: 39600
                                                }
                                            },
                                            6: {
                                                332: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Lady Vamp",
                                                    male: "MP_LR_Tat_003_M",
                                                    female: "MP_LR_Tat_003_F",
                                                    price: 16200
                                                },
                                                341: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Loving Los Muertos",
                                                    male: "MP_LR_Tat_028_M",
                                                    female: "MP_LR_Tat_028_F",
                                                    price: 27e3
                                                },
                                                346: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Black Tears",
                                                    male: "MP_LR_Tat_035_M",
                                                    female: "MP_LR_Tat_035_F",
                                                    price: 27e3
                                                },
                                                356: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Seductress",
                                                    male: "MP_LR_Tat_015_M",
                                                    female: "MP_LR_Tat_015_F",
                                                    price: 27e3
                                                },
                                                507: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Grim Reaper Smoking Gun",
                                                    male: "FM_Tat_Award_M_002",
                                                    female: "FM_Tat_Award_F_002",
                                                    price: 27e3
                                                },
                                                515: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Ride or Die",
                                                    male: "FM_Tat_Award_M_010",
                                                    female: "FM_Tat_Award_F_010",
                                                    price: 27e3
                                                },
                                                525: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Brotherhood",
                                                    male: "FM_Tat_M_000",
                                                    female: "FM_Tat_F_000",
                                                    price: 39600
                                                },
                                                526: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragons",
                                                    male: "FM_Tat_M_001",
                                                    female: "FM_Tat_F_001",
                                                    price: 39600
                                                },
                                                528: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragons and Skull",
                                                    male: "FM_Tat_M_003",
                                                    female: "FM_Tat_F_003",
                                                    price: 27e3
                                                },
                                                539: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Flower Mural",
                                                    male: "FM_Tat_M_014",
                                                    female: "FM_Tat_F_014",
                                                    price: 39600
                                                },
                                                543: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Serpent Skull",
                                                    male: "FM_Tat_M_018",
                                                    female: "FM_Tat_F_018",
                                                    price: 27e3
                                                },
                                                552: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Virgin Mary",
                                                    male: "FM_Tat_M_027",
                                                    female: "FM_Tat_F_027",
                                                    price: 27e3
                                                },
                                                553: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Mermaid",
                                                    male: "FM_Tat_M_028",
                                                    female: "FM_Tat_F_028",
                                                    price: 27e3
                                                },
                                                563: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dagger",
                                                    male: "FM_Tat_M_038",
                                                    female: "FM_Tat_F_038",
                                                    price: 27e3
                                                },
                                                571: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Lion",
                                                    male: "FM_Tat_M_047",
                                                    female: "FM_Tat_F_047",
                                                    price: 19800
                                                }
                                            },
                                            5: {
                                                333: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Love Hustle",
                                                    male: "MP_LR_Tat_006_M",
                                                    female: "MP_LR_Tat_006_F",
                                                    price: 27e3
                                                },
                                                338: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Skeleton Party",
                                                    male: "MP_LR_Tat_018_M",
                                                    female: "MP_LR_Tat_018_F",
                                                    price: 39600
                                                },
                                                340: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "My Crazy Life",
                                                    male: "MP_LR_Tat_022_M",
                                                    female: "MP_LR_Tat_022_F",
                                                    price: 27e3
                                                },
                                                350: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "No Evil",
                                                    male: "MP_LR_Tat_005_M",
                                                    female: "MP_LR_Tat_005_F",
                                                    price: 16200
                                                },
                                                362: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Los Santos Life",
                                                    male: "MP_LR_Tat_027_M",
                                                    female: "MP_LR_Tat_027_F",
                                                    price: 27e3
                                                },
                                                363: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "City Sorrow",
                                                    male: "MP_LR_Tat_033_M",
                                                    female: "MP_LR_Tat_033_F",
                                                    price: 39600
                                                },
                                                506: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Burning Heart",
                                                    male: "FM_Tat_Award_M_001",
                                                    female: "FM_Tat_Award_F_001",
                                                    price: 16200
                                                },
                                                512: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Racing Blonde",
                                                    male: "FM_Tat_Award_M_007",
                                                    female: "FM_Tat_Award_F_007",
                                                    price: 27e3
                                                },
                                                520: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Racing Brunette",
                                                    male: "FM_Tat_Award_M_015",
                                                    female: "FM_Tat_Award_F_015",
                                                    price: 27e3
                                                },
                                                530: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Serpents",
                                                    male: "FM_Tat_M_005",
                                                    female: "FM_Tat_F_005",
                                                    price: 27e3
                                                },
                                                531: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Oriental Mural",
                                                    male: "FM_Tat_M_006",
                                                    female: "FM_Tat_F_006",
                                                    price: 27e3
                                                },
                                                540: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Zodiac Skull",
                                                    male: "FM_Tat_M_015",
                                                    female: "FM_Tat_F_015",
                                                    price: 16200
                                                },
                                                556: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Lady M",
                                                    male: "FM_Tat_M_031",
                                                    female: "FM_Tat_F_031",
                                                    price: 27e3
                                                },
                                                566: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dope Skull",
                                                    male: "FM_Tat_M_041",
                                                    female: "FM_Tat_F_041",
                                                    price: 16200
                                                }
                                            },
                                            1: {
                                                335: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Lady Liberty",
                                                    male: "MP_LR_Tat_011_M",
                                                    female: "MP_LR_Tat_011_F",
                                                    price: 19800
                                                },
                                                336: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Royal Kiss",
                                                    male: "MP_LR_Tat_012_M",
                                                    female: "MP_LR_Tat_012_F",
                                                    price: 16200
                                                },
                                                337: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Two Face",
                                                    male: "MP_LR_Tat_016_M",
                                                    female: "MP_LR_Tat_016_F",
                                                    price: 27e3
                                                },
                                                339: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Death Behind",
                                                    male: "MP_LR_Tat_019_M",
                                                    female: "MP_LR_Tat_019_F",
                                                    price: 16200
                                                },
                                                347: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "King Fight",
                                                    male: "MP_LR_Tat_001_M",
                                                    female: "MP_LR_Tat_001_F",
                                                    price: 16200
                                                },
                                                348: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Holy Mary",
                                                    male: "MP_LR_Tat_002_M",
                                                    female: "MP_LR_Tat_002_F",
                                                    price: 27e3
                                                },
                                                349: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Gun Mic",
                                                    male: "MP_LR_Tat_004_M",
                                                    female: "MP_LR_Tat_004_F",
                                                    price: 16200
                                                },
                                                354: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Love Gamble",
                                                    male: "MP_LR_Tat_013_M",
                                                    female: "MP_LR_Tat_013_F",
                                                    price: 16200
                                                },
                                                361: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Royal Takeover",
                                                    male: "MP_LR_Tat_026_M",
                                                    female: "MP_LR_Tat_026_F",
                                                    price: 16200
                                                },
                                                508: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Blackjack",
                                                    male: "FM_Tat_Award_M_003",
                                                    female: "FM_Tat_Award_F_003",
                                                    price: 16200
                                                },
                                                509: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Hustler",
                                                    male: "FM_Tat_Award_M_004",
                                                    female: "FM_Tat_Award_F_004",
                                                    price: 39600
                                                },
                                                516: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Blank Scroll",
                                                    male: "FM_Tat_Award_M_011",
                                                    female: "FM_Tat_Award_F_011",
                                                    price: 7200
                                                },
                                                517: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Embellished Scroll",
                                                    male: "FM_Tat_Award_M_012",
                                                    female: "FM_Tat_Award_F_012",
                                                    price: 16200
                                                },
                                                518: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Seven Deadly Sins",
                                                    male: "FM_Tat_Award_M_013",
                                                    female: "FM_Tat_Award_F_013",
                                                    price: 27e3
                                                },
                                                529: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Faith",
                                                    male: "FM_Tat_M_004",
                                                    female: "FM_Tat_F_004",
                                                    price: 39600
                                                },
                                                535: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "LS Flames",
                                                    male: "FM_Tat_M_010",
                                                    female: "FM_Tat_F_010",
                                                    price: 16200
                                                },
                                                537: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Los Santos Bills",
                                                    male: "FM_Tat_M_012",
                                                    female: "FM_Tat_F_012",
                                                    price: 39600
                                                },
                                                549: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Flaming Cross",
                                                    male: "FM_Tat_M_024",
                                                    female: "FM_Tat_F_024",
                                                    price: 39600
                                                },
                                                550: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "LS Bold",
                                                    male: "FM_Tat_M_025",
                                                    female: "FM_Tat_F_025",
                                                    price: 16200
                                                },
                                                554: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Trinity Knot",
                                                    male: "FM_Tat_M_029",
                                                    female: "FM_Tat_F_029",
                                                    price: 7200
                                                },
                                                559: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Flaming Shamrock",
                                                    male: "FM_Tat_M_034",
                                                    female: "FM_Tat_F_034",
                                                    price: 16200
                                                },
                                                561: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Way of the Gun",
                                                    male: "FM_Tat_M_036",
                                                    female: "FM_Tat_F_036",
                                                    price: 39600
                                                },
                                                569: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Stone Cross",
                                                    male: "FM_Tat_M_044",
                                                    female: "FM_Tat_F_044",
                                                    price: 39600
                                                }
                                            },
                                            3: {
                                                342: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "Death Us Do Part",
                                                    male: "MP_LR_Tat_029_M",
                                                    female: "MP_LR_Tat_029_F",
                                                    price: 27e3
                                                },
                                                351: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "LS Serpent",
                                                    male: "MP_LR_Tat_007_M",
                                                    female: "MP_LR_Tat_007_F",
                                                    price: 27e3
                                                },
                                                358: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Presidents",
                                                    male: "MP_LR_Tat_020_M",
                                                    female: "MP_LR_Tat_020_F",
                                                    price: 27e3
                                                },
                                                514: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragon and Dagger",
                                                    male: "FM_Tat_Award_M_009",
                                                    female: "FM_Tat_Award_F_009",
                                                    price: 27e3
                                                },
                                                527: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Melting Skull",
                                                    male: "FM_Tat_M_002",
                                                    female: "FM_Tat_F_002",
                                                    price: 16200
                                                },
                                                533: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragon Mural",
                                                    male: "FM_Tat_M_008",
                                                    female: "FM_Tat_F_008",
                                                    price: 27e3
                                                },
                                                546: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Serpent Skull",
                                                    male: "FM_Tat_M_021",
                                                    female: "FM_Tat_F_021",
                                                    price: 27e3
                                                },
                                                548: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Hottie",
                                                    male: "FM_Tat_M_023",
                                                    female: "FM_Tat_F_023",
                                                    price: 27e3
                                                },
                                                551: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Smoking Dagger",
                                                    male: "FM_Tat_M_026",
                                                    female: "FM_Tat_F_026",
                                                    price: 27e3
                                                },
                                                557: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Faith",
                                                    male: "FM_Tat_M_032",
                                                    female: "FM_Tat_F_032",
                                                    price: 16200
                                                },
                                                558: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Chinese Dragon",
                                                    male: "FM_Tat_M_033",
                                                    female: "FM_Tat_F_033",
                                                    price: 39600
                                                },
                                                560: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Dragon",
                                                    male: "FM_Tat_M_035",
                                                    female: "FM_Tat_F_035",
                                                    price: 27e3
                                                },
                                                562: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Grim Reaper",
                                                    male: "FM_Tat_M_037",
                                                    female: "FM_Tat_F_037",
                                                    price: 27e3
                                                }
                                            },
                                            4: {
                                                343: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "San Andreas Prayer",
                                                    male: "MP_LR_Tat_030_M",
                                                    female: "MP_LR_Tat_030_F",
                                                    price: 27e3
                                                },
                                                357: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Ink Me",
                                                    male: "MP_LR_Tat_017_M",
                                                    female: "MP_LR_Tat_017_F",
                                                    price: 27e3
                                                },
                                                360: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "Dance of Hearts",
                                                    male: "MP_LR_Tat_023_M",
                                                    female: "MP_LR_Tat_023_F",
                                                    price: 30600
                                                },
                                                511: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Skull and Sword",
                                                    male: "FM_Tat_Award_M_006",
                                                    female: "FM_Tat_Award_F_006",
                                                    price: 27e3
                                                },
                                                532: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "The Warrior",
                                                    male: "FM_Tat_M_007",
                                                    female: "FM_Tat_F_007",
                                                    price: 27e3
                                                },
                                                542: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Tribal",
                                                    male: "FM_Tat_M_017",
                                                    female: "FM_Tat_F_017",
                                                    price: 27e3
                                                },
                                                547: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Fiery Dragon",
                                                    male: "FM_Tat_M_022",
                                                    female: "FM_Tat_F_022",
                                                    price: 16200
                                                },
                                                564: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Broken Skull",
                                                    male: "FM_Tat_M_039",
                                                    female: "FM_Tat_F_039",
                                                    price: 16200
                                                },
                                                565: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Flaming Skull",
                                                    male: "FM_Tat_M_040",
                                                    female: "FM_Tat_F_040",
                                                    price: 39600
                                                },
                                                567: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Flaming Scorpion",
                                                    male: "FM_Tat_M_042",
                                                    female: "FM_Tat_F_042",
                                                    price: 16200
                                                },
                                                568: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Indian Ram",
                                                    male: "FM_Tat_M_043",
                                                    female: "FM_Tat_F_043",
                                                    price: 16200
                                                }
                                            },
                                            8: {
                                                687: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "LR_M_Hair_004",
                                                    male: "LR_M_Hair_004",
                                                    female: "LR_F_Hair_004",
                                                    price: 200
                                                },
                                                688: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "LR_M_Hair_005",
                                                    male: "LR_M_Hair_005",
                                                    female: "LR_F_Hair_005",
                                                    price: 200
                                                },
                                                689: {
                                                    overlay: "mplowrider2_overlays",
                                                    name: "LR_M_Hair_006",
                                                    male: "LR_M_Hair_006",
                                                    female: "LR_F_Hair_006",
                                                    price: 200
                                                },
                                                683: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "LR_M_Hair_000",
                                                    male: "LR_M_Hair_000",
                                                    female: "LR_F_Hair_000",
                                                    price: 200
                                                },
                                                684: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "LR_M_Hair_001",
                                                    male: "LR_M_Hair_001",
                                                    female: "LR_F_Hair_001",
                                                    price: 200
                                                },
                                                685: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "LR_M_Hair_002",
                                                    male: "LR_M_Hair_002",
                                                    female: "LR_F_Hair_002",
                                                    price: 200
                                                },
                                                686: {
                                                    overlay: "mplowrider_overlays",
                                                    name: "LR_M_Hair_003",
                                                    male: "LR_M_Hair_003",
                                                    female: "LR_F_Hair_003",
                                                    price: 200
                                                },
                                                661: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_001",
                                                    male: "NG_M_Hair_001",
                                                    female: "NG_F_Hair_001",
                                                    price: 200
                                                },
                                                662: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_002",
                                                    male: "NG_M_Hair_002",
                                                    female: "NG_F_Hair_002",
                                                    price: 200
                                                },
                                                663: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_003",
                                                    male: "NG_M_Hair_003",
                                                    female: "NG_F_Hair_003",
                                                    price: 200
                                                },
                                                664: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_004",
                                                    male: "NG_M_Hair_004",
                                                    female: "NG_F_Hair_004",
                                                    price: 200
                                                },
                                                665: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_005",
                                                    male: "NG_M_Hair_005",
                                                    female: "NG_F_Hair_005",
                                                    price: 200
                                                },
                                                666: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_006",
                                                    male: "NG_M_Hair_006",
                                                    female: "NG_F_Hair_006",
                                                    price: 200
                                                },
                                                667: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_007",
                                                    male: "NG_M_Hair_007",
                                                    female: "NG_F_Hair_007",
                                                    price: 200
                                                },
                                                668: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_008",
                                                    male: "NG_M_Hair_008",
                                                    female: "NG_F_Hair_008",
                                                    price: 200
                                                },
                                                669: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_009",
                                                    male: "NG_M_Hair_009",
                                                    female: "NG_F_Hair_009",
                                                    price: 200
                                                },
                                                670: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_010",
                                                    male: "NG_M_Hair_010",
                                                    female: "NG_F_Hair_010",
                                                    price: 200
                                                },
                                                671: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_011",
                                                    male: "NG_M_Hair_011",
                                                    female: "NG_F_Hair_011",
                                                    price: 200
                                                },
                                                672: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_012",
                                                    male: "NG_M_Hair_012",
                                                    female: "NG_F_Hair_011",
                                                    price: 200
                                                },
                                                673: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_013",
                                                    male: "NG_M_Hair_013",
                                                    female: "NG_F_Hair_013",
                                                    price: 200
                                                },
                                                674: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_014",
                                                    male: "NG_M_Hair_014",
                                                    female: "NG_F_Hair_014",
                                                    price: 200
                                                },
                                                675: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NG_M_Hair_015",
                                                    male: "NG_M_Hair_015",
                                                    female: "NG_F_Hair_015",
                                                    price: 200
                                                },
                                                676: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGBea_M_Hair_000",
                                                    male: "NGBea_M_Hair_000",
                                                    female: "NGBea_F_Hair_000",
                                                    price: 200
                                                },
                                                677: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGBea_M_Hair_001",
                                                    male: "NGBea_M_Hair_001",
                                                    female: "NGBea_F_Hair_001",
                                                    price: 200
                                                },
                                                678: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGBus_M_Hair_000",
                                                    male: "NGBus_M_Hair_000",
                                                    female: "NGBus_F_Hair_000",
                                                    price: 200
                                                },
                                                679: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGBus_M_Hair_001",
                                                    male: "NGBus_M_Hair_001",
                                                    female: "NGBus_F_Hair_001",
                                                    price: 200
                                                },
                                                680: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGHip_M_Hair_000",
                                                    male: "NGHip_M_Hair_000",
                                                    female: "NGHip_F_Hair_000",
                                                    price: 200
                                                },
                                                681: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGHip_M_Hair_001",
                                                    male: "NGHip_M_Hair_001",
                                                    female: "NGHip_F_Hair_001",
                                                    price: 200
                                                },
                                                682: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "NGInd_M_Hair_000",
                                                    male: "NGInd_M_Hair_000",
                                                    female: "NGInd_F_Hair_000",
                                                    price: 200
                                                }
                                            },
                                            2: {
                                                505: {
                                                    overlay: "multiplayer_overlays",
                                                    name: "Skull",
                                                    male: "FM_Tat_Award_M_000",
                                                    female: "FM_Tat_Award_F_000",
                                                    price: 39600
                                                }
                                            }
                                        },
                                        7: {
                                            1: {
                                                652: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Ballas",
                                                    male: "ballas_01",
                                                    female: "ballas_01_f",
                                                    price: 1e6
                                                },
                                                655: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Los Santos Vagos",
                                                    male: "vagos_01",
                                                    female: "vagos_01_f",
                                                    price: 1e6
                                                },
                                                730: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Kartell",
                                                    male: "kartell_01",
                                                    female: "kartell_01_f",
                                                    price: 1
                                                },
                                                731: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "LSMC Tattoo",
                                                    male: "lsmc_01",
                                                    female: "lsmc_01_f",
                                                    price: 1e6
                                                },
                                                795: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Cayo Rebellen",
                                                    male: "rebellen_01",
                                                    female: "rebellen_01_f",
                                                    price: 1
                                                }
                                            },
                                            5: {
                                                653: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Grove Street Families",
                                                    male: "grove_01",
                                                    female: "grove_01_f",
                                                    price: 1e6
                                                },
                                                658: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "La Cosa Nostra",
                                                    male: "lcn_01",
                                                    female: "lcn_01_f",
                                                    price: 1e6
                                                }
                                            },
                                            7: {
                                                654: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Varrios Los Aztecas",
                                                    male: "Aztecas_01",
                                                    female: "Aztecas_01_f",
                                                    price: 1e6
                                                },
                                                657: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "96 Bloods",
                                                    male: "bloods_01",
                                                    female: "bloods_01_f",
                                                    price: 1e6
                                                },
                                                659: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Triaden",
                                                    male: "triaden_01",
                                                    female: "triaden_01_F",
                                                    price: 1e6
                                                },
                                                696: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Tribe",
                                                    male: "tribe_01",
                                                    female: "tribe_01_f",
                                                    price: 1e6
                                                },
                                                698: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Black Circle",
                                                    male: "blackcircle_01",
                                                    female: "blackcircle_01_f",
                                                    price: 1e6
                                                }
                                            },
                                            2: {
                                                697: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "Hoover Criminals",
                                                    male: "hoover_01",
                                                    female: "hoover_01_f",
                                                    price: 1e6
                                                },
                                                797: {
                                                    overlay: "fraktattoos_overlays",
                                                    name: "ACLS",
                                                    male: "acls_01",
                                                    female: "acls_01_f",
                                                    price: 1e6
                                                }
                                            }
                                        }
                                    }, t.next = 10;
                                    break;
                                case 5:
                                    return t.next = 7, fetch("http://assets/SibauiRP_Assets/data/tattoos.json");
                                case 7:
                                    return t.next = 9, t.sent.json();
                                case 9:
                                    a = t.sent;
                                case 10:
                                    e.tattooData = a[e.invdata.i];
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            },
            po = _o,
            vo = (a("664a"), Object(d["a"])(po, mo, ho, !1, null, "6fd5bec4", null)),
            fo = vo.exports,
            bo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    attrs: {
                        title: "Racing Lobbies"
                    }
                }, [e.createLobbyStatus || null != e.selectedLobby ? e._e() : t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", [e._v("Teilnehmer")]), t("th")])]), t("tbody", e._l(e.lobbies, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        class: {
                            "color-main": a == e.selectedLobby
                        },
                        on: {
                            click: function(t) {
                                return e.selectLobby(a)
                            }
                        }
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p) + " / " + e._s(a.m))]), t("td", {
                        staticClass: "text-center"
                    }, [a.pw ? t("span", {
                        staticClass: "mdi mdi-lock"
                    }) : e._e()])])
                })), 0)]), e.createLobbyStatus && null != e.selectedLobby || !e.createLobbyStatus && null == e.selectedLobby ? t("div", {
                    staticClass: "lobby-create-box"
                }, [t("CoreButton", {
                    staticClass: "lobby-create-button",
                    on: {
                        click: function(t) {
                            return e.toggleCreateLobby()
                        }
                    }
                }, [e._v("Lobby erstellen")])], 1) : e._e()], 1)]), null != e.selectedLobby || null == e.selectedLobby && e.createLobbyStatus ? t("CoreInterfaceMultiple", {
                    attrs: {
                        title: e.createLobbyStatus && null == e.selectedLobby ? "Lobby Erstellen" : "Lobby Beitreten",
                        "with-close": ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [null != e.selectedLobby ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/track/" + e.selectedLobby.tr + ".png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/type/" + e.selectedLobby.t + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.n) + " ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col lobby-password"
                }, [e.selectedLobby.pw ? t("CoreInput", {
                    staticClass: "dark",
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }) : e._e()], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.e) + " $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.p) + " von " + e._s(e.selectedLobby.m) + " ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: e.selectedLobby.p >= e.selectedLobby.m
                    },
                    on: {
                        click: e.joinLobby
                    }
                }, [e._v("Lobby beitreten")])], 1)]) : e.createLobbyStatus ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Lobbyname",
                        maxlength: "40"
                    },
                    model: {
                        value: e.lobbyName,
                        callback: function(t) {
                            e.lobbyName = t
                        },
                        expression: "lobbyName"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Passwort (optional)",
                        maxlength: "4"
                    },
                    model: {
                        value: e.lobbyPassword,
                        callback: function(t) {
                            e.lobbyPassword = t
                        },
                        expression: "lobbyPassword"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Maximale Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        min: "2",
                        max: "12",
                        type: "number"
                    },
                    model: {
                        value: e.lobbyMaxAmount,
                        callback: function(t) {
                            e.lobbyMaxAmount = e._n(t)
                        },
                        expression: "lobbyMaxAmount"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number"
                    },
                    model: {
                        value: e.lobbyEntry,
                        callback: function(t) {
                            e.lobbyEntry = e._n(t)
                        },
                        expression: "lobbyEntry"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: "" == e.lobbyName
                    },
                    on: {
                        click: e.createLobby
                    }
                }, [e._v("Lobby erstellen")])], 1)]) : e._e()])]) : e._e()], 1)
            },
            go = [],
            yo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple-box"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-title"
                }, [e._v(e._s(e.title))]), e._t("core-interface-multiple-box-header-action")], 2), t("div", {
                    staticClass: "core-interface-multiple-box-body"
                }, [e._t("default")], 2)])
            },
            Co = [],
            ko = {
                name: "CoreInterfaceMultiple",
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    back: {
                        type: Boolean,
                        required: !1
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            wo = ko,
            So = (a("7312"), Object(d["a"])(wo, yo, Co, !1, null, "64c53072", null)),
            Mo = So.exports,
            xo = {
                name: "RacingPoint",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        createLobbyStatus: !1,
                        selectedLobby: null,
                        lobbies: this.data.d,
                        password: "",
                        lobbyName: "",
                        lobbyPassword: "",
                        lobbyMaxAmount: 12,
                        lobbyEntry: 0
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    selectLobby: function(e) {
                        this.selectedLobby = e
                    },
                    joinLobby: function() {
                        this.emitServer("JoinRacingLobby", this.selectedLobby.i, this.password), this.hide()
                    },
                    toggleCreateLobby: function() {
                        this.selectedLobby = null, this.createLobbyStatus = !0
                    },
                    createLobby: function() {
                        this.emitServer("CreateRacingLobby", this.lobbyName, this.lobbyPassword, this.lobbyMaxAmount, this.lobbyEntry), this.hide()
                    }
                }
            },
            Po = xo,
            To = (a("af09"), Object(d["a"])(Po, bo, go, !1, null, "370b45b4", null)),
            Fo = To.exports,
            Bo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    staticClass: "main-interface",
                    attrs: {
                        title: this.data.n
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [t("div", {
                    staticClass: "racing-lobby-lobby"
                }, [t("div", {
                    staticClass: "racing-lobby-lobby-box"
                }, [t("div", {
                    staticClass: "racing-lobby-lobby-box-title"
                }, [e._v("Strecke")]), t("div", {
                    staticClass: "racing-lobby-lobby-box-nav"
                }, [e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseTrack()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })]) : e._e(), t("span", {
                    staticClass: "racing-lobby-lobby-box-nav-track mx-auto"
                }, [e._v(e._s(this.selectedTrack.n))]), e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseTrack()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })]) : e._e()], 1), t("div", {
                    staticClass: "racing-lobby-lobby-box-image"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/track/" + e.selectedTrack.i + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "racing-lobby-lobby-box"
                }, [t("div", {
                    staticClass: "racing-lobby-lobby-box-title"
                }, [e._v("Type")]), t("div", {
                    staticClass: "racing-lobby-lobby-box-nav"
                }, [e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })]) : e._e(), t("span", {
                    staticClass: "racing-lobby-lobby-box-nav-track mx-auto"
                }, [e._v(e._s(this.selectedType.n))]), e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })]) : e._e()], 1), t("div", {
                    staticClass: "racing-lobby-lobby-box-image"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/type/" + e.selectedType.i + ".png",
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "saveButton"
                }, [t("CoreButton", {
                    staticClass: "leave",
                    on: {
                        click: e.leaveLobby
                    }
                }, [e._v(e._s(e.data.o ? "Lobby auflösen" : "Lobby verlassen"))]), !e.isOwner() || e.data.rt == e.selectedTrack.i && e.data.t == e.selectedType.i ? e._e() : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.saveRacelobbyConfig()
                        }
                    }
                }, [e._v("Speichern")])], 1)])]), t("CoreInterfaceMultiple", {
                    staticClass: "secondary-interface",
                    attrs: {
                        title: "Teilnehmer (" + this.participants.length + " / " + this.data.m + ")"
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table text-center"
                }, [t("div", {
                    staticClass: "racing-lobby-participants"
                }, [t("CoreTable", {
                    staticClass: "table table-borderless text-white"
                }, [t("tbody", e._l(e.participants, (function(a, i) {
                    return t("tr", {
                        key: i,
                        class: e.data.opi == a.i ? "text-custom-success text-bold" : ""
                    }, [t("td", {
                        attrs: {
                            width: "45%"
                        }
                    }, [e._v(e._s(a.n))]), t("td", [e._v(e._s(e.getVehicleNameById(a.s)))]), t("td", {
                        attrs: {
                            width: "10%"
                        }
                    }, [e.isOwner() && e.data.opi != a.i ? t("span", {
                        staticClass: "mdi mdi-close text-danger clickable",
                        on: {
                            click: function(t) {
                                return e.kickParticipant(a)
                            }
                        }
                    }) : e._e()])])
                })), 0)])], 1), e.isOwner() ? t("CoreButton", {
                    staticClass: "start-race-button",
                    on: {
                        click: e.startLobby
                    }
                }, [e._v("Rennen starten")]) : e._e()], 1)]), t("CoreInterfaceMultiple", {
                    staticClass: "secondary-interface",
                    attrs: {
                        title: "Fahrzeuge"
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table"
                }, [t("div", {
                    staticClass: "racing-lobby-vehicles"
                }, [0 != this.vehicles.length ? t("CoreTable", [t("tbody", e._l(e.vehicles, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        class: {
                            "text-custom-success text-bold": a == e.selectedVehicle
                        },
                        on: {
                            click: function(t) {
                                return e.selectVehicle(a)
                            }
                        }
                    }, [t("td", {
                        staticStyle: {
                            width: "23.5rem"
                        }
                    }, [e._v(e._s(a.n))])])
                })), 0)]) : e._e()], 1), t("div", {
                    staticClass: "racing-lobby-vehicles-buttons"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.chooseVehicle(0)
                        }
                    }
                }, [e._v("Zufallsfahrzeug")]), null != e.selectedVehicle && e.selectedVehicle.i != e.getOwnVehicleSelection() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.chooseVehicle(e.selectedVehicle.i)
                        }
                    }
                }, [e._v("Fahrzeug auswählen")]) : e._e()], 1)])])], 1)
            },
            Io = [],
            Ao = (a("c740"), {
                name: "RacingLobby",
                components: {
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        selectedVehicle: null,
                        participants: this.data.p,
                        selectedTrack: null,
                        selectedType: null,
                        vehicles: null,
                        tracks: [{
                            i: 0,
                            n: "Zufall",
                            t: [0]
                        }, {
                            i: 1,
                            n: "Vinewood Madness",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 2,
                            n: "Sanchez Manchez",
                            t: [4, 7]
                        }, {
                            i: 3,
                            n: "Mount Abfahrt",
                            t: [4, 7]
                        }, {
                            i: 4,
                            n: "Maze Kart Arena",
                            t: [5, 6]
                        }, {
                            i: 5,
                            n: "Airbase Action",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 6,
                            n: "Vinewood Madness 2",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 7,
                            n: "Canal Karambolage",
                            t: [0, 4, 7]
                        }, {
                            i: 8,
                            n: "River Rampage",
                            t: [9]
                        }, {
                            i: 9,
                            n: "Rolling Thunder",
                            t: [0, 4, 7]
                        }, {
                            i: 10,
                            n: "Downtown Drive",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 12,
                            n: "Downtown Drive 2",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 13,
                            n: "Route 68",
                            t: [0, 1, 2, 3, 4, 7, 8]
                        }, {
                            i: 14,
                            n: "Sanchez Manchez 2",
                            t: [4, 7]
                        }, {
                            i: 15,
                            n: "Deluxo Maxo",
                            t: [13]
                        }, {
                            i: 17,
                            n: "Ölfelder",
                            t: [0, 1, 2, 3, 4, 7]
                        }, {
                            i: 18,
                            n: "Vespucci Boat Derby",
                            t: [9, 10]
                        }, {
                            i: 19,
                            n: "Insel Race",
                            t: [0, 1, 2, 3, 4, 5, 7, 8]
                        }, {
                            i: 20,
                            n: "Shopping Mall Sprint",
                            t: [0, 1, 2, 3, 4, 5, 7]
                        }, {
                            i: 21,
                            n: "Humane Labs Bike Derby",
                            t: [4, 7]
                        }, {
                            i: 22,
                            n: "Mount-Gordo Bike Destroyer",
                            t: [4, 7]
                        }, {
                            i: 23,
                            n: "Intercity Highspeed",
                            t: [1, 2, 3]
                        }, {
                            i: 24,
                            n: "Raton Canyon Race",
                            t: [1, 2, 3, 4, 5, 7, 14]
                        }, {
                            i: 25,
                            n: "Highway Patrol",
                            t: [0, 1, 2, 3, 4, 5, 7, 8]
                        }, {
                            i: 26,
                            n: "Jumping Jack Vespucci",
                            t: [0, 1, 2, 3, 4, 5, 7, 8]
                        }],
                        types: [{
                            i: 0,
                            n: "Zufall",
                            v: []
                        }, {
                            i: 1,
                            n: "Supersportler",
                            v: [{
                                i: 1,
                                n: "Zentorno"
                            }, {
                                i: 595,
                                n: "T20"
                            }, {
                                i: 566,
                                n: "Adder"
                            }, {
                                i: 567,
                                n: "Autarch"
                            }, {
                                i: 568,
                                n: "Banshee2"
                            }, {
                                i: 569,
                                n: "Bullet"
                            }, {
                                i: 570,
                                n: "Cheetah"
                            }, {
                                i: 571,
                                n: "Cyclone"
                            }, {
                                i: 572,
                                n: "Entity2"
                            }, {
                                i: 573,
                                n: "Entityxf"
                            }, {
                                i: 574,
                                n: "Emerus"
                            }, {
                                i: 575,
                                n: "Fmj"
                            }, {
                                i: 576,
                                n: "Furia"
                            }, {
                                i: 577,
                                n: "Gp1"
                            }, {
                                i: 578,
                                n: "Infernus"
                            }, {
                                i: 579,
                                n: "Italigtb"
                            }, {
                                i: 580,
                                n: "Italigtb2"
                            }, {
                                i: 581,
                                n: "Krieger"
                            }, {
                                i: 582,
                                n: "Le7b"
                            }, {
                                i: 583,
                                n: "Nero"
                            }, {
                                i: 584,
                                n: "Nero2"
                            }, {
                                i: 585,
                                n: "Osiris"
                            }, {
                                i: 586,
                                n: "Penetrator"
                            }, {
                                i: 587,
                                n: "Pfister811"
                            }, {
                                i: 588,
                                n: "Prototipo"
                            }, {
                                i: 589,
                                n: "Reaper"
                            }, {
                                i: 590,
                                n: "S80"
                            }, {
                                i: 591,
                                n: "Sc1"
                            }, {
                                i: 593,
                                n: "Sheava"
                            }, {
                                i: 594,
                                n: "Sultanrs"
                            }, {
                                i: 596,
                                n: "Taipan"
                            }, {
                                i: 597,
                                n: "Tempesta"
                            }, {
                                i: 598,
                                n: "Tezeract"
                            }, {
                                i: 599,
                                n: "Thrax"
                            }, {
                                i: 701,
                                n: "Tigon"
                            }, {
                                i: 600,
                                n: "Turismor"
                            }, {
                                i: 601,
                                n: "Tyrant"
                            }, {
                                i: 602,
                                n: "Tyrus"
                            }, {
                                i: 603,
                                n: "Vacca"
                            }, {
                                i: 604,
                                n: "Vagner"
                            }, {
                                i: 606,
                                n: "Visione"
                            }, {
                                i: 609,
                                n: "Xa21"
                            }, {
                                i: 611,
                                n: "Zorrusso"
                            }]
                        }, {
                            i: 2,
                            n: "Sportwagen",
                            v: [{
                                i: 448,
                                n: "Banshee"
                            }, {
                                i: 449,
                                n: "Bestiagts"
                            }, {
                                i: 455,
                                n: "Carbonizzare"
                            }, {
                                i: 456,
                                n: "Comet2"
                            }, {
                                i: 457,
                                n: "Comet3"
                            }, {
                                i: 458,
                                n: "Comet4"
                            }, {
                                i: 459,
                                n: "Comet5"
                            }, {
                                i: 460,
                                n: "Coquette"
                            }, {
                                i: 728,
                                n: "Coquette6"
                            }, {
                                i: 461,
                                n: "Drafter"
                            }, {
                                i: 463,
                                n: "Elegy"
                            }, {
                                i: 464,
                                n: "Elegy2"
                            }, {
                                i: 465,
                                n: "feltzer2"
                            }, {
                                i: 466,
                                n: "Flashgt"
                            }, {
                                i: 467,
                                n: "Furoregt"
                            }, {
                                i: 474,
                                n: "Italigto"
                            }, {
                                i: 472,
                                n: "Issi7"
                            }, {
                                i: 476,
                                n: "Jester"
                            }, {
                                i: 477,
                                n: "Jester2"
                            }, {
                                i: 478,
                                n: "Jester3"
                            }, {
                                i: 485,
                                n: "Massacro"
                            }, {
                                i: 491,
                                n: "Paragon"
                            }]
                        }, {
                            i: 3,
                            n: "Klassische Sportwagen",
                            v: [{
                                i: 524,
                                n: "Btype"
                            }, {
                                i: 525,
                                n: "Btype2"
                            }, {
                                i: 526,
                                n: "Btype3"
                            }, {
                                i: 527,
                                n: "Casco"
                            }, {
                                i: 528,
                                n: "Cheetah2"
                            }, {
                                i: 529,
                                n: "Coquette2"
                            }, {
                                i: 533,
                                n: "Feltzer3"
                            }, {
                                i: 534,
                                n: "Gt500"
                            }, {
                                i: 537,
                                n: "Jb7002"
                            }, {
                                i: 538,
                                n: "Mamba"
                            }, {
                                i: 541,
                                n: "Monroe"
                            }, {
                                i: 545,
                                n: "Rapidgt3"
                            }, {
                                i: 549,
                                n: "Stinger"
                            }, {
                                i: 550,
                                n: "Stingergt"
                            }, {
                                i: 553,
                                n: "Torero"
                            }, {
                                i: 552,
                                n: "swinger"
                            }, {
                                i: 562,
                                n: "Z190"
                            }, {
                                i: 563,
                                n: "Ztype"
                            }]
                        }, {
                            i: 4,
                            n: "Motorcross",
                            v: [{
                                i: 198,
                                n: "Sanchez"
                            }, {
                                i: 199,
                                n: "Sanchez2"
                            }, {
                                i: 189,
                                n: "Manchez"
                            }, {
                                i: 778,
                                n: "Manchez2"
                            }, {
                                i: 163,
                                n: "Bf400"
                            }]
                        }, {
                            i: 5,
                            n: "GO KARTS",
                            v: [{
                                i: 784,
                                n: "Veto"
                            }, {
                                i: 785,
                                n: "Veto2"
                            }]
                        }, {
                            i: 6,
                            n: "RC Bandito",
                            v: [{
                                i: 322,
                                n: "RC Bandito"
                            }]
                        }, {
                            i: 7,
                            n: "Sportbikes",
                            v: [{
                                i: 158,
                                n: "Akuma"
                            }, {
                                i: 161,
                                n: "Bati"
                            }, {
                                i: 162,
                                n: "Bati2"
                            }, {
                                i: 164,
                                n: "Carbonrs"
                            }, {
                                i: 173,
                                n: "Diablous"
                            }, {
                                i: 174,
                                n: "Diablous2"
                            }, {
                                i: 175,
                                n: "Double"
                            }, {
                                i: 181,
                                n: "Fcr"
                            }, {
                                i: 182,
                                n: "Fcr2"
                            }, {
                                i: 184,
                                n: "Hakuchou"
                            }, {
                                i: 185,
                                n: "Hakuchou2"
                            }, {
                                i: 188,
                                n: "Lectro"
                            }, {
                                i: 191,
                                n: "Nightblade"
                            }, {
                                i: 194,
                                n: "Pcj"
                            }, {
                                i: 196,
                                n: "Ruffian"
                            }, {
                                i: 204,
                                n: "Thrust"
                            }, {
                                i: 205,
                                n: "Vader"
                            }, {
                                i: 206,
                                n: "Vindicator"
                            }, {
                                i: 207,
                                n: "Vortex"
                            }]
                        }, {
                            i: 8,
                            n: "Vans",
                            v: [{
                                i: 663,
                                n: "Bison"
                            }, {
                                i: 664,
                                n: "Bison2"
                            }, {
                                i: 665,
                                n: "Bison3"
                            }, {
                                i: 666,
                                n: "Bobcatxl"
                            }, {
                                i: 667,
                                n: "boxville"
                            }, {
                                i: 672,
                                n: "Burrito"
                            }, {
                                i: 673,
                                n: "Burrito2"
                            }, {
                                i: 677,
                                n: "Camper"
                            }, {
                                i: 679,
                                n: "Gburrito2"
                            }, {
                                i: 680,
                                n: "Journey"
                            }, {
                                i: 681,
                                n: "Minivan"
                            }, {
                                i: 682,
                                n: "Minivan2"
                            }, {
                                i: 683,
                                n: "Paradise"
                            }, {
                                i: 684,
                                n: "Pony"
                            }, {
                                i: 686,
                                n: "Rumpo"
                            }, {
                                i: 688,
                                n: "Rumpo3"
                            }, {
                                i: 690,
                                n: "Speedo2"
                            }, {
                                i: 692,
                                n: "Surfer"
                            }, {
                                i: 694,
                                n: "Taco"
                            }, {
                                i: 696,
                                n: "Youga2"
                            }, {
                                i: 737,
                                n: "Youga3"
                            }]
                        }, {
                            i: 9,
                            n: "Seashark",
                            v: [{
                                i: 8,
                                n: "Seashark"
                            }, {
                                i: 9,
                                n: "Seashark2"
                            }, {
                                i: 10,
                                n: "Seashark3"
                            }]
                        }, {
                            i: 10,
                            n: "Boote",
                            v: [{
                                i: 2,
                                n: "Dinghy"
                            }, {
                                i: 3,
                                n: "Dinghy2"
                            }, {
                                i: 4,
                                n: "Dinghy3"
                            }, {
                                i: 5,
                                n: "Dinghy4"
                            }, {
                                i: 6,
                                n: "Jetmax"
                            }, {
                                i: 11,
                                n: "Speeder"
                            }, {
                                i: 12,
                                n: "Speeder2"
                            }, {
                                i: 13,
                                n: "Squalo"
                            }, {
                                i: 16,
                                n: "Suntrap"
                            }, {
                                i: 17,
                                n: "Toro"
                            }, {
                                i: 18,
                                n: "Toro2"
                            }, {
                                i: 19,
                                n: "Tropic"
                            }, {
                                i: 20,
                                n: "Tropic2"
                            }]
                        }, {
                            i: 11,
                            n: "Helikopter",
                            v: [{
                                i: 1,
                                n: "Zentorno"
                            }]
                        }, {
                            i: 12,
                            n: "Flugzeuge",
                            v: [{
                                i: 1,
                                n: "Zentorno"
                            }]
                        }, {
                            i: 13,
                            n: "Spezial",
                            v: [{
                                i: 530,
                                n: "Deluxo"
                            }]
                        }, {
                            i: 14,
                            n: "Formula",
                            v: [{
                                i: 697,
                                n: "Formula"
                            }, {
                                i: 698,
                                n: "Formula2"
                            }]
                        }]
                    }
                },
                methods: {
                    isOwner: function() {
                        return this.data.o
                    },
                    close: function() {
                        this.hide()
                    },
                    selectVehicle: function(e) {
                        this.selectedVehicle = e
                    },
                    leaveLobby: function() {
                        this.emitServer("LeaveRacingLobby", this.data.i), this.hide()
                    },
                    getSortedVehiclesByType: function(e) {
                        var t = this.types.find((function(t) {
                            return t.i == e
                        })).v.sort((function(e, t) {
                            var a = e.n.toLowerCase(),
                                i = t.n.toLowerCase();
                            return a < i ? -1 : a > i ? 1 : 0
                        }));
                        return t
                    },
                    increaseTrack: function() {
                        var e = this,
                            t = this.tracks.findIndex((function(t) {
                                return t.i === e.selectedTrack.i
                            }));
                        void 0 == this.tracks[t + 1] ? this.selectedTrack = this.tracks[0] : this.selectedTrack = this.tracks[t + 1], this.selectedType = this.types.find((function(t) {
                            return t.i == e.selectedTrack.t[0]
                        }))
                    },
                    decreaseTrack: function() {
                        var e = this,
                            t = this.tracks.findIndex((function(t) {
                                return t.i === e.selectedTrack.i
                            }));
                        void 0 == this.tracks[t - 1] ? this.selectedTrack = this.tracks[this.tracks.length - 1] : this.selectedTrack = this.tracks[t - 1], this.selectedType = this.types.find((function(t) {
                            return t.i == e.selectedTrack.t[0]
                        }))
                    },
                    increaseType: function() {
                        var e = this,
                            t = this.selectedTrack.t.findIndex((function(t) {
                                return t === e.selectedType.i
                            }));
                        void 0 == this.selectedTrack.t[t + 1] ? this.selectedType = this.types.find((function(t) {
                            return t.i == e.selectedTrack.t[0]
                        })) : this.selectedType = this.types.find((function(a) {
                            return a.i == e.selectedTrack.t[t + 1]
                        }))
                    },
                    decreaseType: function() {
                        var e = this,
                            t = this.selectedTrack.t.findIndex((function(t) {
                                return t === e.selectedType.i
                            }));
                        void 0 == this.selectedTrack.t[t - 1] ? this.selectedType = this.types.find((function(t) {
                            return t.i == e.selectedTrack.t[e.selectedTrack.t.length - 1]
                        })) : this.selectedType = this.types.find((function(a) {
                            return a.i == e.selectedTrack.t[t - 1]
                        }))
                    },
                    getVehicleNameById: function(e) {
                        var t = this.vehicles.find((function(t) {
                            return t.i == e
                        }));
                        return void 0 === t ? "Zufall" : t.n
                    },
                    getOwnVehicleSelection: function() {
                        var e = this;
                        return this.participants.find((function(t) {
                            return t.i == e.data.opi
                        })).s
                    },
                    chooseVehicle: function(e) {
                        var t = this;
                        this.participants.find((function(e) {
                            return e.i == t.data.opi
                        })).s = e, 0 == e && (this.selectedVehicle = null), this.emitServer("SelectRacingVehicle", this.data.i, e)
                    },
                    saveRacelobbyConfig: function() {
                        var e = this;
                        if (this.data.rt = this.selectedTrack.i, this.data.t = this.selectedType.i, this.vehicles = this.getSortedVehiclesByType(this.data.t), this.participants.forEach((function(e) {
                                e.s = 0
                            })), 0 == this.data.rt) {
                            var t = this.tracks.filter((function(e) {
                                return 0 != e.i
                            }));
                            this.data.rt = t[Math.floor(Math.random() * t.length)].i;
                            var a = this.tracks.find((function(t) {
                                return t.i == e.data.rt
                            })).t.filter((function(e) {
                                return 0 != e
                            }));
                            this.data.t = a[Math.floor(Math.random() * a.length)], this.emitServer("ChangeRacingConfig", this.data.i, this.data.rt, this.data.t, !0, !0)
                        } else if (0 == this.data.t) {
                            var i = this.selectedTrack.t.filter((function(e) {
                                return 0 != e
                            }));
                            this.data.t = i[Math.floor(Math.random() * i.length)], this.emitServer("ChangeRacingConfig", this.data.i, this.data.rt, this.data.t, !1, !0)
                        } else this.emitServer("ChangeRacingConfig", this.data.i, this.data.rt, this.data.t, !1, !1);
                        this.data.rt = this.selectedTrack.i, this.data.t = this.selectedType.i
                    },
                    kickParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e.i
                        })), this.emitServer("KickRacingParticipant", this.data.i, e.i)
                    },
                    startLobby: function() {
                        this.emitServer("StartRacingLobby", this.data.i), this.hide()
                    },
                    removeRacingParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e
                        }))
                    },
                    selectRacingVehicle: function(e, t) {
                        this.participants.find((function(t) {
                            return t.i == e
                        })).s = t
                    },
                    joinRacingLobby: function(e, t) {
                        this.participants.push({
                            i: e,
                            n: t,
                            s: 0
                        })
                    },
                    updateRacingConfig: function(e, t) {
                        this.data.rt = e, this.data.t = t, this.selectedTrack = this.tracks.find((function(t) {
                            return t.i == e
                        })), this.selectedType = this.types.find((function(e) {
                            return e.i == t
                        })), this.vehicles = this.getSortedVehiclesByType(this.selectedType.i), this.participants.forEach((function(e) {
                            e.s = 0
                        }))
                    }
                },
                created: function() {
                    var e = this;
                    this.addEvent("RemoveRacingParticipant", this.removeRacingParticipant), this.addEvent("SelectRacingVehicle", this.selectRacingVehicle), this.addEvent("JoinRacingLobby", this.joinRacingLobby), this.addEvent("UpdateRacingConfig", this.updateRacingConfig), this.selectedTrack = this.tracks.find((function(t) {
                        return t.i == e.data.rt
                    })), this.selectedType = this.types.find((function(t) {
                        return t.i == e.data.t
                    })), this.vehicles = this.getSortedVehiclesByType(this.selectedType.i)
                }
            }),
            Do = Ao,
            No = (a("d436"), Object(d["a"])(Do, Bo, Io, !1, null, "608b8ab8", null)),
            Oo = No.exports,
            Lo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "gangwar-weapon-select-interface"
                }, e._l(e.weaponPacks, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "gangwar-weapon-select-box"
                    }, [t("div", {
                        staticClass: "gangwar-weapon-select-box-header"
                    }, [e._v(e._s(a.t))]), t("div", {
                        staticClass: "gangwar-weapon-select-box-body"
                    }, [t("div", {
                        staticClass: "weapon-box"
                    }, [t("div", {
                        staticClass: "weapon-box-name"
                    }, [e._v(e._s(a.w1_name))]), t("div", {
                        staticClass: "weapon-box-image"
                    }, [t("img", {
                        attrs: {
                            src: "images/inventoy/items/" + a.w1_name + ".png",
                            alt: ""
                        }
                    })])]), t("div", {
                        staticClass: "weapon-box"
                    }, [t("div", {
                        staticClass: "weapon-box-name"
                    }, [e._v(e._s(a.w2_name))]), t("div", {
                        staticClass: "weapon-box-image"
                    }, [t("img", {
                        attrs: {
                            src: "images/inventoy/items/" + a.w2_name + ".png",
                            alt: ""
                        }
                    })])]), t("div", {
                        staticClass: "weapon-box"
                    }, [t("div", {
                        staticClass: "weapon-box-name"
                    }, [e._v(e._s(a.w3_name))]), t("div", {
                        staticClass: "weapon-box-image"
                    }, [t("img", {
                        attrs: {
                            src: "images/inventoy/items/" + a.w3_name + ".png",
                            alt: ""
                        }
                    })])])]), t("div", {
                        staticClass: "gangwar-weapon-select-box-footer"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.selectWeaponPack(a)
                            }
                        }
                    }, [e._v("Auswählen")])], 1)])
                })), 0)
            },
            Ho = [],
            zo = {
                name: "GangwarWeaponSelect",
                components: {
                    CoreButton: x
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        selectedWeaponPack: 0,
                        itemData: null,
                        weaponPacks: [{
                            i: 0,
                            t: "Waffenset Gusenberg",
                            w1: 5,
                            w1_name: "Gusenberg",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }, {
                            i: 1,
                            t: "Waffenset Special",
                            w1: 86,
                            w1_name: "SpecialCarbine",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }, {
                            i: 2,
                            t: "Waffenset Advanced",
                            w1: 3,
                            w1_name: "AdvanvcedRifle",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }, {
                            i: 3,
                            t: "Waffenset Assault",
                            w1: 4,
                            w1_name: "Assaultrifle",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }, {
                            i: 4,
                            t: "Waffenset Carbine",
                            w1: 87,
                            w1_name: "CarbineRifle",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }, {
                            i: 5,
                            t: "Waffenset Bullpup",
                            w1: 88,
                            w1_name: "BullpupRifle",
                            w2: 85,
                            w2_name: "HeavyPistol",
                            w3: 89,
                            w3_name: "BattleAxe"
                        }]
                    }
                },
                methods: {
                    selectWeaponPack: function(e) {
                        this.emitServer("SelectGangwarWeaponPack", JSON.stringify(e)), this.hide()
                    }
                },
                created: function() {
                    var e = this;
                    
                },
                computed: {
                    customWeapons: function() {
                        return this.data ? this.weaponPacks : this.weaponPacks.filter((function(e) {
                            return e.i >= 2
                        }))
                    }
                }
            },
            jo = zo,
            Ro = (a("543d"), Object(d["a"])(jo, Lo, Ho, !1, null, "1e4464ea", null)),
            Vo = Ro.exports,
            Eo = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "slotmachine-interface"
                }, [t("div", {
                    staticClass: "slotmachine-left"
                }, [t("div", {
                    staticClass: "slotmachine-body",
                    style: {
                        backgroundImage: "url(./images/interface/casino/" + e.machineType + "/bg_left.png)"
                    }
                }, [e.showWinnings ? t("div", {
                    staticClass: "slotmachine-wintable"
                }, e._l(8, (function(a) {
                    return t("div", {
                        key: a,
                        staticClass: "slotmachine-wintable-box"
                    }, e._l(3, (function(i) {
                        return t("div", {
                            key: i,
                            staticClass: "slotmachine-wintable-box-item"
                        }, [e._l(i, (function(i) {
                            return t("div", {
                                key: i,
                                staticClass: "slotmachine-wintable-box-item-images"
                            }, [t("img", {
                                attrs: {
                                    src: "images/interface/casino/" + e.machineType + "/" + a + ".png",
                                    alt: ""
                                }
                            })])
                        })), t("div", {
                            staticClass: "slotmachine-wintable-box-item-win"
                        }, [e._v("x" + e._s(e.winData[a - 1][i - 1]))])], 2)
                    })), 0)
                })), 0) : t("div", {
                    staticClass: "slotmachine-game"
                }, [t("div", {
                    staticClass: "slotmachine-game-box"
                }, [t("img", {
                    attrs: {
                        src: "images/interface/casino/" + e.machineType + "/logo.png",
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "slotmachine-footer"
                }, [t("CoreButton", {
                    staticClass: "warning",
                    class: {
                        active: e.showWinnings
                    },
                    on: {
                        click: e.showInfo
                    }
                }, [e._v("Gewinntabelle")])], 1)]), t("div", {
                    staticClass: "slotmachine-right"
                }, [t("div", {
                    staticClass: "slotmachine-body",
                    style: {
                        backgroundImage: "url(./images/interface/casino/" + e.machineType + "/bg.png)"
                    }
                }, [e.hasWon ? t("div", {
                    staticClass: "slotmachine-body-winner"
                }, [e._m(0), t("div", {
                    staticClass: "slotmachine-body-winner-amount"
                }, [e._v(" Du hast "), t("span", {
                    staticClass: "text-custom-success"
                }, [e._v(e._s(e.winSum) + " $")]), e._v(" gewonnen! ")]), t("div", {
                    staticClass: "slotmachine-body-winner-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.takeMoney
                    }
                }, [e._v("Gewinn einstreichen")])], 1)]) : e._e(), t("div", {
                    staticClass: "slotmachine-body-wheels"
                }, [t("div", {
                    staticClass: "slotmachine-body-wheels-overlay",
                    style: {
                        backgroundImage: "url(./images/interface/casino/" + e.machineType + "/overlay.png)"
                    }
                }), e._l(3, (function(a) {
                    return t("div", {
                        key: a,
                        staticClass: "slotmachine-body-wheels-wheel"
                    }, [t("div", {
                        staticClass: "slotmachine-body-wheels-wheel-pseudo",
                        class: [e.wheelState[a - 1], "wheel_" + a, {
                            active: e.isActive
                        }],
                        style: {
                            backgroundImage: "url(images/interface/casino/" + e.machineType + "/wheel.png)"
                        }
                    })])
                }))], 2)]), t("div", {
                    staticClass: "slotmachine-footer"
                }, [t("div", {
                    staticClass: "slotmachine-einsatz"
                }, [e._v("Einsatz")]), t("div", [t("CoreButton", {
                    staticClass: "slotmachine-btn-sm",
                    on: {
                        click: function(t) {
                            return e.decreasePrice()
                        }
                    }
                }, [e._v("-")]), t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        disabled: ""
                    },
                    model: {
                        value: e.price,
                        callback: function(t) {
                            e.price = t
                        },
                        expression: "price"
                    }
                }), t("CoreButton", {
                    staticClass: "slotmachine-btn-sm",
                    on: {
                        click: function(t) {
                            return e.increasePrice()
                        }
                    }
                }, [e._v("+")])], 1), t("CoreButton", {
                    staticClass: "success slotmachine-btn",
                    attrs: {
                        disabled: e.hasWon || e.isActive || e.autoMode
                    },
                    on: {
                        click: e.spinWheel
                    }
                }, [e._v("Start")]), t("CoreButton", {
                    staticClass: "slotmachine-btn",
                    class: {
                        success: !0 === e.autoMode
                    },
                    attrs: {
                        disabled: e.hasWon
                    },
                    on: {
                        click: e.startAutoMode
                    }
                }, [e._v("Autospin")]), t("CoreButton", {
                    staticClass: "danger slotmachine-btn last",
                    attrs: {
                        disabled: e.hasWon || e.isActive
                    },
                    on: {
                        click: e.close
                    }
                }, [e._v("Verlassen")])], 1)])])
            },
            Go = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "slotmachine-body-winner-logo"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/casino/jackpot.png",
                        alt: ""
                    }
                })])
            }],
            Wo = {
                name: "SlotMachine",
                components: {
                    CoreInput: A,
                    CoreButton: x
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        game_id: 0,
                        slot_1: 0,
                        slot_2: 0,
                        slot_3: 0,
                        hasWon: !1,
                        isActive: !1,
                        winSum: 0,
                        price: 0,
                        wheelState: ["state1", "state1", "state1"],
                        machineId: this.data.i,
                        machineType: this.data.t,
                        machineData: [],
                        winData: [
                            [1.5, 3, 250],
                            [1, 1.5, 30],
                            [1, 1.5, 15],
                            [0, 1.5, 10],
                            [0, 1, 5],
                            [0, 1, 2],
                            [0, 0, 1],
                            [0, 0, 0]
                        ],
                        autoMode: !1,
                        autoRoll: 0,
                        autoModeInterval: null,
                        rollSound: new Audio("./sounds/casino/slotmachine/roll.mp3"),
                        winSound: new Audio("./sounds/casino/slotmachine/win.mp3"),
                        showWinnings: !1
                    }
                },
                methods: {
                    close: function() {
                        this.emit("LeaveSlotMachineChair"), this.rollSound.pause(), this.winSound.pause(), clearInterval(this.autoModeInterval), this.isActive = !1, this.autoMode = !1, this.emitServer("SlotMachineLeave", this.machineId), this.hide()
                    },
                    spinWheel: function() {
                        this.isActive || (this.dev && this.rollWheels({
                            i: 1,
                            s1: 8,
                            s2: 8,
                            s3: 8,
                            w: 0
                        }), this.emitServer("SlotMachineRoll", this.machineId, this.price))
                    },
                    showInfo: function() {
                        this.showWinnings = !this.showWinnings
                    },
                    rollWheels: function(e) {
                        var t = this;
                        this.game_id = e.i, this.slot_1 = e.s1, this.slot_2 = e.s2, this.slot_3 = e.s3, this.wheelState = ["state" + e.s1, "state" + e.s2, "state" + e.s3], this.winSum = e.w, this.isActive = !0, this.rollSound.play(), this.rollSound.volume = .01, setTimeout((function() {
                            t.rollSound.pause(), t.winSum > 0 ? (t.winSound.play(), t.winSound.volume = .1, t.hasWon = !0, t.autoMode && (setTimeout((function() {
                                t.takeMoney()
                            }), 2500), setTimeout((function() {
                                t.spinWheel()
                            }), 3500))) : (t.hasWon = !1, t.autoMode && setTimeout((function() {
                                t.spinWheel()
                            }), 1e3)), t.isActive = !1, t.autoMode && t.autoRoll++
                        }), 9e3)
                    },
                    takeMoney: function() {
                        this.hasWon = !1, this.emitServer("SlotMachinePayout", this.game_id)
                    },
                    increasePrice: function() {
                        this.price + this.machineData.step > this.machineData.max || (this.price += this.machineData.step)
                    },
                    decreasePrice: function() {
                        this.price - this.machineData.step < this.machineData.min || (this.price -= this.machineData.step)
                    },
                    startAutoMode: function() {
                        0 == this.autoMode ? (this.autoMode = !0, 0 == this.isActive && this.spinWheel()) : (this.autoRoll = 0, this.autoMode = !1)
                    }
                },
                mounted: function() {},
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        var a;
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (!e.dev) {
                                        t.next = 4;
                                        break
                                    }
                                    e.machineData = {
                                        min: 1e3,
                                        max: 1e4,
                                        step: 500,
                                        defaultBet: 1e3
                                    }, t.next = 15;
                                    break;
                                case 4:
                                    return t.next = 6, fetch("http://assets/SibauiRP_Assets/data/slotmachinetype.json");
                                case 6:
                                    return t.next = 8, t.sent.json();
                                case 8:
                                    return a = t.sent, t.next = 11, fetch("http://assets/SibauiRP_Assets/data/slotmachinewin.json");
                                case 11:
                                    return t.next = 13, t.sent.json();
                                case 13:
                                    e.winData = t.sent, e.machineData = a.find((function(t) {
                                        return t.id == e.machineType
                                    }));
                                case 15:
                                    e.price = e.machineData.min, e.addEvent("SendSlotMachineResult", e.rollWheels), e.addEvent("StopSlotMachine", e.close), e.emit("EnterSlotMachineChair", e.data.h, e.data.x, e.data.y, e.data.z);
                                case 19:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                },
                computed: {}
            },
            Ko = Wo,
            Uo = (a("8774"), Object(d["a"])(Ko, Eo, Go, !1, null, "4f4f7141", null)),
            $o = Uo.exports,
            qo = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-gangwar-finish",
                    attrs: {
                        title: "Gangwar Statistik",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "gangwar-finish"
                }, [t("div", {
                    staticClass: "gangwar-finish-header"
                }, [t("div", {
                    staticClass: "gangwar-box team-box"
                }, [t("div", {
                    staticClass: "team-box-team-logo"
                }, [t("img", {
                    attrs: {
                        src: e.firstTeam.image,
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "team-box-points",
                    class: {
                        "text-custom-success": e.points_team_1 > e.points_team_2,
                        "text-custom-danger": e.points_team_2 >= e.points_team_1
                    }
                }, [e._v(e._s(e.points_team_1))])]), t("div", {
                    staticClass: "gangwar-box team-box"
                }, [t("div", {
                    staticClass: "team-box-points",
                    class: {
                        "text-custom-success": e.points_team_2 > e.points_team_1,
                        "text-custom-danger": e.points_team_1 >= e.points_team_2
                    }
                }, [e._v(e._s(e.points_team_2))]), t("div", {
                    staticClass: "team-box-team-logo"
                }, [t("img", {
                    attrs: {
                        src: e.secondTeam.image,
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "gangwar-finish-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Name")]), t("th", [e._v("Kills")]), t("th", [e._v("Tode")])])]), t("tbody", e._l(JSON.parse(this.data).member, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", [e._v(e._s(i + 1) + ".")]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.k))]), t("td", [e._v(e._s(a.d))])])
                })), 0)])], 1)])])
            },
            Jo = [],
            Zo = {
                name: "GangwarFinish",
                components: {
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        teamData: JSON.parse(this.data).d,
                        points_team_1: JSON.parse(this.data).ap,
                        points_team_2: JSON.parse(this.data).dp,
                        ai: JSON.parse(this.data).ai,
                        di: JSON.parse(this.data).di
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {
                    firstTeam: function() {
                        var e = this;
                        return this.teamData[1]
                    },
                    secondTeam: function() {
                        var e = this;
                        return this.teamData[0]
                    }
                },
                created: function() {
                    var e = this;
             
                }
            },
            Xo = Zo,
            Yo = (a("d821"), Object(d["a"])(Xo, qo, Jo, !1, null, "e70b018a", null)),
            Qo = Yo.exports,
            ec = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    attrs: {
                        title: "Paintball Lobbies"
                    }
                }, [e.createLobbyStatus || null != e.selectedLobby ? e._e() : t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", [e._v("Teilnehmer")]), t("th", [e._v("Status")]), t("th")])]), t("tbody", e._l(e.lobbies, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        class: {
                            "color-main": a == e.selectedLobby
                        },
                        on: {
                            click: function(t) {
                                return e.selectLobby(a)
                            }
                        }
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p.length) + " / " + e._s(a.mp))]), t("td", {
                        staticClass: "text-center text-uppercase",
                        class: {
                            "text-custom-success": a.s
                        }
                    }, [e._v(" " + e._s(a.s ? "gestartet" : "wartend") + " ")]), t("td", {
                        staticClass: "text-center"
                    }, [a.pw ? t("span", {
                        staticClass: "mdi mdi-lock"
                    }) : e._e()])])
                })), 0)]), e.createLobbyStatus && null != e.selectedLobby || !e.createLobbyStatus && null == e.selectedLobby ? t("div", {
                    staticClass: "lobby-create-box"
                }, [t("CoreButton", {
                    staticClass: "lobby-create-button",
                    on: {
                        click: function(t) {
                            return e.toggleCreateLobby()
                        }
                    }
                }, [e._v("Lobby erstellen")])], 1) : e._e()], 1)]), null != e.selectedLobby || null == e.selectedLobby && e.createLobbyStatus ? t("CoreInterfaceMultiple", {
                    attrs: {
                        title: e.createLobbyStatus && null == e.selectedLobby ? "Lobby Erstellen" : "Lobby Beitreten",
                        "with-close": ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [null != e.selectedLobby ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [t("img", {
                    attrs: {
                        src: "images/paintball/map/" + e.selectedLobby.m + ".png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("img", {
                    attrs: {
                        src: "images/paintball/type/" + e.selectedLobby.t + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.n) + " ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col lobby-password"
                }, [e.selectedLobby.pw ? t("CoreInput", {
                    staticClass: "dark",
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }) : e._e()], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.e) + " $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.p.length) + " von " + e._s(e.selectedLobby.mp) + " ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: e.selectedLobby.p >= e.selectedLobby.mp
                    },
                    on: {
                        click: e.joinLobby
                    }
                }, [e._v(" Lobby beitreten ")])], 1)]) : e.createLobbyStatus ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Lobbyname",
                        maxlength: "40"
                    },
                    model: {
                        value: e.lobbyName,
                        callback: function(t) {
                            e.lobbyName = t
                        },
                        expression: "lobbyName"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Passwort (optional)",
                        maxlength: "4"
                    },
                    model: {
                        value: e.lobbyPassword,
                        callback: function(t) {
                            e.lobbyPassword = t
                        },
                        expression: "lobbyPassword"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Maximale Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        min: "2",
                        max: "50",
                        type: "number"
                    },
                    model: {
                        value: e.lobbyMaxAmount,
                        callback: function(t) {
                            e.lobbyMaxAmount = e._n(t)
                        },
                        expression: "lobbyMaxAmount"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Punktelimit (max. Anzahl Punkte) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number",
                        min: "1",
                        max: "200"
                    },
                    model: {
                        value: e.lobbyMaxScore,
                        callback: function(t) {
                            e.lobbyMaxScore = e._n(t)
                        },
                        expression: "lobbyMaxScore"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number"
                    },
                    model: {
                        value: e.lobbyEntry,
                        callback: function(t) {
                            e.lobbyEntry = e._n(t)
                        },
                        expression: "lobbyEntry"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: "" == e.lobbyName
                    },
                    on: {
                        click: e.createLobby
                    }
                }, [e._v("Lobby erstellen")])], 1)]) : e._e()])]) : e._e()], 1)
            },
            tc = [],
            ac = {
                name: "PaintballPoint",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        createLobbyStatus: !1,
                        selectedLobby: null,
                        lobbies: JSON.parse(this.data).d,
                        password: "",
                        lobbyName: "",
                        lobbyPassword: "",
                        lobbyMaxAmount: 12,
                        lobbyEntry: 0,
                        lobbyMaxScore: 100
                    }
                },
                methods: {
                    getTeamDisplayName: function(e) {
                        return 0 == e ? "Kein Team ausgewählt!" : 1 == e ? "Team 1" : "Team 2"
                    },
                    close: function() {
                        this.hide()
                    },
                    selectLobby: function(e) {
                        this.selectedLobby = e
                    },
                    joinLobby: function() {
                        this.emitServer("JoinPaintballLobby", this.selectedLobby.i, this.password), this.hide()
                    },
                    toggleCreateLobby: function() {
                        this.selectedLobby = null, this.createLobbyStatus = !0
                    },
                    createLobby: function() {
                        this.emitServer("CreatePaintballLobby", this.lobbyName, this.lobbyPassword, this.lobbyMaxAmount, this.lobbyEntry, this.lobbyMaxScore), this.hide()
                    },
                    changeTeam: function() {
                        this.lobbyTeam <= 1 ? this.lobbyTeam = 2 : this.lobbyTeam = 1
                    }
                }
            },
            ic = ac,
            sc = (a("addba"), Object(d["a"])(ic, ec, tc, !1, null, "0f55684f", null)),
            nc = sc.exports,
            rc = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    staticClass: "main-interface",
                    attrs: {
                        title: this.paintballdata.n
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [t("div", {
                    staticClass: "paintball-lobby-lobby"
                }, [t("div", {
                    staticClass: "paintball-lobby-lobby-box"
                }, [t("div", {
                    staticClass: "paintball-lobby-lobby-box-nav"
                }, [e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseMap()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })]) : e._e(), t("span", {
                    staticClass: "paintball-lobby-lobby-box-nav-track mx-auto"
                }, [e._v(e._s(this.selectedMap.n) + " "), t("small", [e._v("(Empfohlene Max. Spieler: " + e._s(this.selectedMap.r) + ")")])]), e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseMap()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })]) : e._e()], 1), t("div", {
                    staticClass: "paintball-lobby-lobby-box-image"
                }, [t("img", {
                    attrs: {
                        src: "images/paintball/map/" + e.selectedMap.i + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "paintball-lobby-lobby-box"
                }, [t("div", {
                    staticClass: "paintball-lobby-lobby-box-nav"
                }, [e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })]) : e._e(), t("span", {
                    staticClass: "paintball-lobby-lobby-box-nav-track mx-auto"
                }, [e._v(e._s(this.selectedType.n))]), e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseType()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })]) : e._e()], 1), t("div", {
                    staticClass: "paintball-lobby-lobby-box-image"
                }, [t("img", {
                    attrs: {
                        src: "images/paintball/type/" + e.selectedType.i + ".png",
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "saveButton"
                }, [!e.isOwner() || e.paintballdata.m == e.selectedMap.i && e.paintballdata.t == e.selectedType.i ? e._e() : t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.savePaintballLobbyConfig()
                        }
                    }
                }, [e._v(" Speichern ")]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.leaveLobby
                    }
                }, [e._v(" " + e._s(e.o ? "Lobby auflösen" : "Lobby verlassen") + " ")]), e.isOwner() && !e.paintballdata.s ? t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.startLobby
                    }
                }, [e._v("Spiel Starten")]) : e._e(), e.paintballdata.s ? t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.joinPaintballLobbyAfterwards
                    }
                }, [e._v("Spiel Beitreten ")]) : e._e()], 1)])]), t("CoreInterfaceMultiple", {
                    staticClass: "secondary-interface",
                    attrs: {
                        title: "Teilnehmer (" + this.participants.length + " / " + this.paintballdata.mp + ") | Max Punkte: " + this.paintballdata.maxPoints
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table text-center"
                }, [t("div", {
                    staticClass: "paintball-lobby-participants"
                }, [t("CoreTable", [t("tbody", {
                    staticClass: "scrollable"
                }, e._l(e.participants, (function(a, i) {
                    return t("tr", {
                        key: i,
                        class: e.opi == a.i ? "own" : ""
                    }, [t("td", [e._v(e._s(a.n))]), 2 == e.paintballdata.t ? t("td", {
                        class: {
                            "text-nietzsche": 1 == a.s,
                            "text-pink": 2 == a.s
                        }
                    }, [e._v(" " + e._s(e.getTeamDisplayName(a.s)) + " ")]) : e._e(), 2 == e.paintballdata.t ? t("td", {
                        attrs: {
                            width: "15%"
                        }
                    }, [e.isOwner() && e.opi != a.i ? t("span", {
                        staticClass: "mdi mdi-close clickable",
                        on: {
                            click: function(t) {
                                return e.kickParticipant(a)
                            }
                        }
                    }) : e._e(), 2 == e.paintballdata.t && a.i == e.opi ? t("span", {
                        staticClass: "mdi mdi-recycle-variant clickable kick",
                        on: {
                            click: function(t) {
                                return e.switchTeam(a)
                            }
                        }
                    }) : e._e()]) : e._e(), 2 != e.paintballdata.t && e.isOwner() ? t("td", {
                        attrs: {
                            width: "15%"
                        }
                    }, [e.isOwner() && e.opi != a.i ? t("span", {
                        staticClass: "mdi mdi-close clickable kick",
                        on: {
                            click: function(t) {
                                return e.kickParticipant(a)
                            }
                        }
                    }) : e._e()]) : e._e()])
                })), 0)])], 1), 2 == e.paintballdata.t ? t("div", {
                    staticClass: "paintball-lobby-participants-overview"
                }, [t("div", {
                    staticClass: "plpo-teambox"
                }, [t("span", {
                    staticClass: "text-nietzsche"
                }, [e._v(e._s(e.getTeamDisplayName(1)) + ":")]), t("span", [e._v(e._s(e.calcFirstTeam))])]), t("div", {
                    staticClass: "plpo-teambox"
                }, [t("span", {
                    staticClass: "text-pink"
                }, [e._v(e._s(e.getTeamDisplayName(2)) + ":")]), t("span", [e._v(e._s(e.calcSecondTeam))])])]) : e._e()])])], 1)
            },
            oc = [],
            cc = {
                name: "PaintballLobby",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        opi: JSON.parse(this.data).opi,
                        o: JSON.parse(this.data).o,
                        paintballdata: JSON.parse(this.data).d,
                        participants: JSON.parse(this.data).d.p,
                        selectedMap: {
                            i: 1,
                            n: "Staatsgefängnis",
                            r: 15
                        },
                        selectedType: {
                            i: 1,
                            n: "FFA"
                        },
                        coreTypes: [],
                        maps: [{
                            i: 1,
                            n: "Staatsgefängnis",
                            r: 15
                        }, {
                            i: 2,
                            n: "Containerhafen",
                            r: 25
                        }, {
                            i: 3,
                            n: "O'Neil-Ranch",
                            r: 25
                        }, {
                            i: 4,
                            n: "Alta Baustelle",
                            r: 25
                        }, {
                            i: 5,
                            n: "Humane Labs & Research",
                            r: 30
                        }, {
                            i: 6,
                            n: "Davis Schrottplatz",
                            r: 25
                        }, {
                            i: 7,
                            n: "Weazel News Baustelle",
                            r: 20
                        }, {
                            i: 8,
                            n: "Sandyshores Motel",
                            r: 20
                        }, {
                            i: 9,
                            n: "Hippie Camp",
                            r: 20
                        }, {
                            i: 10,
                            n: "GEE Warehouse",
                            r: 15
                        }, {
                            i: 11,
                            n: "Rockford Palace",
                            r: 15
                        }, {
                            i: 12,
                            n: "Yakuza Baustelle",
                            r: 30
                        }, {
                            i: 13,
                            n: "Rockford Plaza",
                            r: 30
                        }, {
                            i: 14,
                            n: "Downtown Baustelle",
                            r: 25
                        }, {
                            i: 15,
                            n: "Paleto Baustelle",
                            r: 15
                        }, {
                            i: 16,
                            n: "Trainings Gelände",
                            r: 15
                        }, {
                            i: 17,
                            n: "USS Lexington",
                            r: 30
                        }, {
                            i: 18,
                            n: "Golfcourt",
                            r: 30
                        }, {
                            i: 19,
                            n: "Headquarter",
                            r: 20
                        }, {
                            i: 20,
                            n: "Legion Square",
                            r: 15
                        }, {
                            i: 21,
                            n: "Trailerpark",
                            r: 25
                        }, {
                            i: 22,
                            n: "Rancho",
                            r: 20
                        }, {
                            i: 23,
                            n: "Festival Fair",
                            r: 15
                        }, {
                            i: 24,
                            n: "Del Perro Yacht",
                            r: 15
                        }, {
                            i: 25,
                            n: "1vs1 - Arcadius Tower",
                            r: 2
                        }, {
                            i: 26,
                            n: "1vs1 - Lost Barn",
                            r: 2
                        }, {
                            i: 27,
                            n: "1vs1 - Harmony Village",
                            r: 2
                        }, {
                            i: 28,
                            n: "1vs1 - Radio Tower",
                            r: 2
                        }, {
                            i: 29,
                            n: "1vs1 - Ölfelder",
                            r: 2
                        }, {
                            i: 31,
                            n: "Mk II - Grapeseed Farm",
                            r: 12
                        }, {
                            i: 32,
                            n: "Mk II - Mountain Village",
                            r: 12
                        }, {
                            i: 33,
                            n: "Mk II - Sägewerk",
                            r: 12
                        }],
                        types: [{
                            i: 1,
                            n: "FFA"
                        }, {
                            i: 2,
                            n: "Team Deathmatch"
                        }, {
                            i: 3,
                            n: "Gungame"
                        }, {
                            i: 4,
                            n: "Revolver"
                        }, {
                            i: 5,
                            n: "Sniper"
                        }, {
                            i: 6,
                            n: "1vs1"
                        }, {
                            i: 7,
                            n: "Mk II"
                        }],
                        lastInteract: 0,
                        lastInteractCooldown: 1e3
                    }
                },
                methods: {
                    getTeamDisplayName: function(e) {
                        return 0 == e ? "Kein Team ausgewählt!" : 1 == e ? "Team 1" : "Team 2"
                    },
                    getOwnSelection: function() {
                        var e = this;
                        return this.participants.find((function(t) {
                            return t.i == e.opi
                        })).s
                    },
                    isOwner: function() {
                        return this.o
                    },
                    close: function() {
                        this.hide()
                    },
                    selectTeam: function(e) {
                        this.selectTeam = e
                    },
                    leaveLobby: function() {
                        this.emitServer("LeavePaintballLobby", this.paintballdata.i), this.hide()
                    },
                    increaseMap: function() {
                        var e = this,
                            t = this.maps.findIndex((function(t) {
                                return t.i === e.selectedMap.i
                            }));
                        void 0 == this.maps[t + 1] ? this.selectedMap = this.maps[0] : this.selectedMap = this.maps[t + 1], this.checkTypes()
                    },
                    decreaseMap: function() {
                        var e = this,
                            t = this.maps.findIndex((function(t) {
                                return t.i === e.selectedMap.i
                            }));
                        void 0 == this.maps[t - 1] ? this.selectedMap = this.maps[this.maps.length - 1] : this.selectedMap = this.maps[t - 1], this.checkTypes()
                    },
                    increaseType: function() {
                        var e = this,
                            t = this.types.findIndex((function(t) {
                                return t.i === e.selectedType.i
                            }));
                        void 0 == this.types[t + 1] ? this.selectedType = this.types[0] : this.selectedType = this.types[t + 1]
                    },
                    decreaseType: function() {
                        var e = this,
                            t = this.types.findIndex((function(t) {
                                return t.i === e.selectedType.i
                            }));
                        void 0 == this.types[t - 1] ? this.selectedType = this.types[this.types.length - 1] : this.selectedType = this.types[t - 1]
                    },
                    checkTypes: function() {
                        switch (this.selectedMap.i) {
                            case 1:
                            case 3:
                            case 6:
                            case 20:
                                this.types = this.coreTypes.filter((function(e) {
                                    return e.i <= 4
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 2:
                            case 4:
                            case 8:
                            case 9:
                            case 10:
                            case 14:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 1 == e.i || 3 == e.i || 4 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 5:
                            case 13:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 2 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 2 == e.i
                                }))[0];
                                break;
                            case 7:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 2 == e.i || 4 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 2 == e.i
                                }))[0];
                                break;
                            case 11:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 1 == e.i || 3 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 12:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 4 == e.i || 5 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 4 == e.i
                                }))[0];
                                break;
                            case 15:
                            case 16:
                            case 23:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 1 == e.i || 2 == e.i || 4 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 19:
                            case 21:
                            case 22:
                                this.types = this.coreTypes.filter((function(e) {
                                    return e.i <= 3
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 17:
                            case 18:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 1 == e.i || 2 == e.i || 5 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 6 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 6 == e.i
                                }))[0];
                                break;
                            case 24:
                                this.types = this.coreTypes.filter((function(e) {
                                    return e.i <= 5
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 1 == e.i
                                }))[0];
                                break;
                            case 31:
                            case 32:
                            case 33:
                                this.types = this.coreTypes.filter((function(e) {
                                    return 7 == e.i
                                })), this.selectedType = this.coreTypes.filter((function(e) {
                                    return 7 == e.i
                                }))[0];
                                break;
                            default:
                                this.types = this.coreTypes, this.selectedType = this.coreTypes[0];
                                break
                        }
                    },
                    chooseTeam: function(e) {
                        var t = this;
                        this.participants.find((function(e) {
                            return e.i == t.opi
                        })).s = e, this.emitServer("SelectPaintballTeam", this.paintballdata.i, e)
                    },
                    savePaintballLobbyConfig: function() {
                        this.paintballdata.m = this.selectedMap.i, this.paintballdata.t = this.selectedType.i, 6 === this.selectedType.i && this.participants.length <= 2 && (this.paintballdata.mp = 2), this.emitServer("ChangePaintballConfig", this.paintballdata.i, this.paintballdata.m, this.paintballdata.t)
                    },
                    kickParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e.i
                        })), this.emitServer("KickPaintballParticipant", this.paintballdata.i, e.i)
                    },
                    startLobby: function() {
                        this.emitServer("StartPaintballLobby", this.paintballdata.i), this.hide()
                    },
                    joinPaintballLobbyAfterwards: function() {
                        var e = this;
                        this.emitServer("JoinPaintballLobbyAfterwards", this.paintballdata.i, this.participants.find((function(t) {
                            return t.i == e.opi
                        })).s), this.hide()
                    },
                    removePaintballParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e
                        }))
                    },
                    selectPaintballTeam: function(e, t) {
                        this.participants.find((function(t) {
                            return t.i == e
                        })).s = t
                    },
                    joinPaintballLobby: function(e, t) {
                        this.participants.push({
                            i: e,
                            n: t,
                            s: 1
                        })
                    },
                    updatePaintballConfig: function(e, t, a) {
                        this.paintballdata.m = e, this.paintballdata.t = t, this.paintballdata.mp = a, this.selectedMap = this.maps.find((function(t) {
                            return t.i == e
                        })), this.selectedType = this.coreTypes.find((function(e) {
                            return e.i == t
                        }))
                    },
                    switchTeam: function() {
                        var e = this,
                            t = Date.now();
                        if (t - this.lastInteract > this.lastInteractCooldown) {
                            this.lastInteract = t;
                            var a = this.participants.find((function(t) {
                                    return t.i == e.opi
                                })),
                                i = a.s;
                            i = i <= 1 ? 2 : 1, a.s = i, this.emitServer("SelectPaintballTeam", this.paintballdata.i, i)
                        } else fuckThis("fromUINot","[SPAMSCHUTZ] Bitte nicht so schnell hintereinander das Team wechseln.", "#c72020")
                    }
                },
                created: function() {
                    var e = this;
                    this.addEvent("RemovePaintballParticipant", this.removePaintballParticipant), this.addEvent("SelectPaintballTeam", this.selectPaintballTeam), this.addEvent("JoinPaintballLobby", this.joinPaintballLobby), this.addEvent("joinPaintballLobbyAfterwards", this.joinPaintballLobbyAfterwards), this.addEvent("UpdatePaintballConfig", this.updatePaintballConfig), this.selectedMap = this.maps.find((function(t) {
                        return t.i == e.paintballdata.m
                    })), this.selectedType = this.types.find((function(t) {
                        return t.i == e.paintballdata.t
                    })), this.coreTypes = this.types, this.checkTypes(), this.selectedType = this.coreTypes.filter((function(t) {
                        return t.i === e.paintballdata.t
                    }))[0]
                },
                computed: {
                    calcFirstTeam: function() {
                        return this.participants.filter((function(e) {
                            return 1 === e.s
                        })).length
                    },
                    calcSecondTeam: function() {
                        return this.participants.filter((function(e) {
                            return 2 === e.s
                        })).length
                    }
                }
            },
            lc = cc,
            uc = (a("3c6e"), Object(d["a"])(lc, rc, oc, !1, null, "9556a73e", null)),
            mc = uc.exports,
            dc = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Paintball Punkteübersicht",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "paintball-statistic"
                }, [t("div", {
                    staticClass: "paintball-header"
                }, [t("div", {
                    staticClass: "team-name"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(2 == JSON.parse(this.data).t ? "Team 1" : ""))]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v(e._s(e.calculateKillsForFirstTeam))]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v(e._s(e.calculateDeathsForFirstTeam))]), JSON.parse(this.data).end ? e._e() : t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [t("span", {
                    staticClass: "text-custom-danger clickable",
                    on: {
                        click: function(t) {
                            return e.leavePaintball()
                        }
                    }
                }, [e._v("Verlassen")])])])])])], 1), 2 == JSON.parse(this.data).t ? t("div", {
                    staticClass: "team-name"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    staticClass: "text-sibaui"
                }, [e._v("Team 2")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v(e._s(e.calculateKillsForSecondTeam))]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v(e._s(e.calculateDeathsForSecondTeam))]), JSON.parse(this.data).end ? e._e() : t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [t("span", {
                    staticClass: "text-custom-danger clickable",
                    on: {
                        click: function(t) {
                            return e.leavePaintball()
                        }
                    }
                }, [e._v("Verlassen")])])])])])], 1) : e._e()]), t("div", {
                    staticClass: "paintball-tables"
                }, [t("div", {
                    staticClass: "paintball-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Kills")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Tode")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("KD")])])]), t("tbody", e._l(e.sortedFirstTeam, (function(a) {
                    return t("tr", {
                        key: "t1_" + a.i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.k))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(isNaN(e.formatNumber(a.k, a.d)) || 0 == a.d ? a.k : e.formatNumber(a.k, a.d)))])])
                })), 0)])], 1), 2 == JSON.parse(this.data).t ? t("div", {
                    staticClass: "paintball-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Kills")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("Tode")]), t("th", {
                    attrs: {
                        width: "15%"
                    }
                }, [e._v("KD")])])]), t("tbody", e._l(e.sortedSecondTeam, (function(a) {
                    return t("tr", {
                        key: "t2_" + a.i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.k))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(isNaN(e.formatNumber(a.k, a.d)) || 0 == a.d ? a.k : e.formatNumber(a.k, a.d)))])])
                })), 0)])], 1) : e._e()])])])
            },
            hc = [],
            _c = {
                name: "PaintballStatistic",
                components: {
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    formatNumber: function(e, t) {
                        var a = e / t;
                        return Math.round(100 * a) / 100
                    },
                    close: function() {
                        this.hide()
                    },
                    leavePaintball: function() {
                        this.emitServer("CancelPaintball"), this.emit("StopPaintball"), this.hide()
                    }
                },
                computed: {
                    calculateKillsForFirstTeam: function() {
                        var e = JSON.parse(this.data).t1.reduce((function(e, t) {
                            return t.k + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateKillsForSecondTeam: function() {
                        var e = JSON.parse(this.data).t2.reduce((function(e, t) {
                            return t.k + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateDeathsForFirstTeam: function() {
                        var e = JSON.parse(this.data).t1.reduce((function(e, t) {
                            return t.d + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateDeathsForSecondTeam: function() {
                        var e = JSON.parse(this.data).t2.reduce((function(e, t) {
                            return t.d + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    sortedFirstTeam: function() {
                        return JSON.parse(this.data).t1.sort((function(e, t) {
                            return e.k < t.k ? 1 : -1
                        }))
                    },
                    sortedSecondTeam: function() {
                        return JSON.parse(this.data).t2.sort((function(e, t) {
                            return e.k < t.k ? 1 : -1
                        }))
                    }
                }
            },
            pc = _c,
            vc = (a("732a"), Object(d["a"])(pc, dc, hc, !1, null, "7b09a31b", null)),
            fc = vc.exports,
            bc = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    staticClass: "main-interface",
                    attrs: {
                        title: this.data.n
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [t("div", {
                    staticClass: "prophunt-lobby-lobby"
                }, [t("div", {
                    staticClass: "prophunt-lobby-lobby-box"
                }, [t("div", {
                    staticClass: "prophunt-lobby-lobby-box-nav"
                }, [e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.decreaseMap()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-left"
                })]) : e._e(), t("span", {
                    staticClass: "prophunt-lobby-lobby-box-nav-track mx-auto"
                }, [e._v(e._s(this.selectedMap.n))]), e.isOwner() ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.increaseMap()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-chevron-right"
                })]) : e._e()], 1), t("div", {
                    staticClass: "prophunt-lobby-lobby-box-image"
                }, [t("img", {
                    attrs: {
                        src: "images/prophunt/" + e.selectedMap.i + ".png",
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "saveButton"
                }, [e.isOwner() && e.data.m != e.selectedMap.i ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.saveProphuntLobbyConfig()
                        }
                    }
                }, [e._v("Speichern")]) : e._e(), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.leaveLobby
                    }
                }, [e._v(e._s(e.data.o ? "Lobby auflösen" : "Lobby verlassen"))]), e.isOwner() ? t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.startLobby
                    }
                }, [e._v("Spiel Starten")]) : e._e()], 1)])]), t("CoreInterfaceMultiple", {
                    staticClass: "secondary-interface",
                    attrs: {
                        title: "Teilnehmer (" + this.participants.length + " / " + this.data.mp + ")"
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table text-center"
                }, [e.isOwner() ? t("div", {
                    staticClass: "prophunt-lobby-settings"
                }, [t("CoreButton", {
                    class: {
                        success: 1 == this.selectionMode
                    },
                    on: {
                        click: function(t) {
                            return e.changeSelection(1)
                        }
                    }
                }, [e._v("Zufällige Teamwahl")]), t("CoreButton", {
                    class: {
                        success: 0 == this.selectionMode
                    },
                    on: {
                        click: function(t) {
                            return e.changeSelection(0)
                        }
                    }
                }, [e._v("Manuelle Teamwahl")])], 1) : e._e(), t("div", {
                    staticClass: "prophunt-lobby-participants"
                }, [t("CoreTable", [t("tbody", {
                    staticClass: "scrollable"
                }, e._l(e.participants, (function(a, i) {
                    return t("tr", {
                        key: i,
                        class: e.paintballdata.opi == a.i ? "own" : ""
                    }, [t("td", [e._v(e._s(a.n))]), 0 == e.selectionMode ? t("td", {
                        class: {
                            "text-nietzsche": 1 == a.s,
                            "text-pink": 2 == a.s
                        }
                    }, [e._v(e._s(e.getTeamDisplayName(a.s)))]) : e._e(), t("td", {
                        attrs: {
                            width: "15%"
                        }
                    }, [e.isOwner() && e.paintballdata.opi != a.i ? t("span", {
                        staticClass: "mdi mdi-close clickable",
                        on: {
                            click: function(t) {
                                return e.kickParticipant(a)
                            }
                        }
                    }) : e._e(), a.i == e.paintballdata.opi && 1 != e.selectionMode ? t("span", {
                        staticClass: "mdi mdi-recycle-variant clickable kick",
                        on: {
                            click: function(t) {
                                return e.switchTeam(a)
                            }
                        }
                    }) : e._e()])])
                })), 0)])], 1), 0 == e.selectionMode ? t("div", {
                    staticClass: "prophunt-lobby-participants-overview"
                }, [t("div", {
                    staticClass: "plpo-teambox"
                }, [t("span", {
                    staticClass: "text-nietzsche"
                }, [e._v(e._s(e.getTeamDisplayName(1)) + ":")]), t("span", [e._v(e._s(e.calcFirstTeam))])]), t("div", {
                    staticClass: "plpo-teambox"
                }, [t("span", {
                    staticClass: "text-pink"
                }, [e._v(e._s(e.getTeamDisplayName(2)) + ":")]), t("span", [e._v(e._s(e.calcSecondTeam))])])]) : e._e()])])], 1)
            },
            gc = [],
            yc = {
                name: "ProphuntLobby",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        participants: this.data.p,
                        selectedMap: null,
                        maps: [{
                            i: 1,
                            n: "Filmstudio"
                        }, {
                            i: 2,
                            n: "Pennerpark"
                        }, {
                            i: 3,
                            n: "Alta Baustelle"
                        }, {
                            i: 4,
                            n: "GEE Warehouse"
                        }, {
                            i: 5,
                            n: "Humane Labs"
                        }, {
                            i: 6,
                            n: "Leuchtturm Ranch"
                        }, {
                            i: 7,
                            n: "Trailerpark"
                        }],
                        selectionMode: this.data.sm,
                        lastInteract: 0,
                        lastInteractCooldown: 1e3
                    }
                },
                methods: {
                    getTeamDisplayName: function(e) {
                        return 0 == e ? "Kein Team ausgewählt!" : 1 == e ? "Hunter" : "Prop"
                    },
                    getOwnSelection: function() {
                        var e = this;
                        return this.participants.find((function(t) {
                            return t.i == e.data.opi
                        })).s
                    },
                    isOwner: function() {
                        return this.data.o
                    },
                    close: function() {
                        this.hide()
                    },
                    selectTeam: function(e) {
                        this.selectTeam = e
                    },
                    leaveLobby: function() {
                        this.emitServer("LeaveProphuntLobby", this.data.i), this.hide()
                    },
                    increaseMap: function() {
                        var e = this,
                            t = this.maps.findIndex((function(t) {
                                return t.i === e.selectedMap.i
                            }));
                        void 0 == this.maps[t + 1] ? this.selectedMap = this.maps[0] : this.selectedMap = this.maps[t + 1]
                    },
                    decreaseMap: function() {
                        var e = this,
                            t = this.maps.findIndex((function(t) {
                                return t.i === e.selectedMap.i
                            }));
                        void 0 == this.maps[t - 1] ? this.selectedMap = this.maps[this.maps.length - 1] : this.selectedMap = this.maps[t - 1]
                    },
                    chooseTeam: function(e) {
                        var t = this;
                        this.participants.find((function(e) {
                            return e.i == t.data.opi
                        })).s = e, this.emitServer("SelectProphuntTeam", this.data.i, e)
                    },
                    saveProphuntLobbyConfig: function() {
                        this.data.m = this.selectedMap.i, this.emitServer("ChangeProphuntConfig", this.data.i, this.data.m), this.data.m = this.selectedMap.i
                    },
                    kickParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e.i
                        })), this.emitServer("KickProphuntParticipant", this.data.i, e.i)
                    },
                    startLobby: function() {
                        this.emitServer("StartProphuntLobby", this.data.i), this.hide()
                    },
                    removeProphuntParticipant: function(e) {
                        this.participants = this.participants.filter((function(t) {
                            return t.i != e
                        }))
                    },
                    selectProphuntTeam: function(e, t) {
                        this.participants.find((function(t) {
                            return t.i == e
                        })).s = t
                    },
                    joinProphuntLobby: function(e, t) {
                        this.participants.push({
                            i: e,
                            n: t,
                            s: 2
                        })
                    },
                    updateProphuntConfig: function(e) {
                        this.data.m = e, this.selectedMap = this.maps.find((function(t) {
                            return t.i == e
                        }))
                    },
                    updateProphuntRandom: function(e) {
                        this.selectionMode = e, this.participants.forEach((function(e) {
                            e.s = 2
                        }))
                    },
                    switchTeam: function() {
                        var e = this,
                            t = Date.now();
                        if (t - this.lastInteract > this.lastInteractCooldown) {
                            this.lastInteract = t;
                            var a = this.participants.find((function(t) {
                                    return t.i == e.data.opi
                                })),
                                i = a.s;
                            i = i <= 1 ? 2 : 1, a.s = i, this.emitServer("SelectProphuntTeam", this.data.i, i)
                        } else fuckThis("fromUINot","[SPAMSCHUTZ] Bitte nicht so schnell hintereinander das Team wechseln.", "#c72020")
                    },
                    changeSelection: function(e) {
                        this.participants.forEach((function(e) {
                            e.s = 2
                        })), this.selectionMode = e, this.emitServer("ChangeProphuntRandom", this.data.i)
                    }
                },
                computed: {
                    calcFirstTeam: function() {
                        return this.participants.filter((function(e) {
                            return 1 === e.s
                        })).length
                    },
                    calcSecondTeam: function() {
                        return this.participants.filter((function(e) {
                            return 2 === e.s
                        })).length
                    }
                },
                created: function() {
                    var e = this;
                    this.addEvent("RemoveProphuntParticipant", this.removeProphuntParticipant), this.addEvent("SelectProphuntTeam", this.selectProphuntTeam), this.addEvent("JoinProphuntLobby", this.joinProphuntLobby), this.addEvent("UpdateProphuntConfig", this.updateProphuntConfig), this.addEvent("UpdateProphuntRandom", this.updateProphuntRandom), this.selectedMap = this.maps.find((function(t) {
                        return t.i == e.data.m
                    }))
                }
            },
            Cc = yc,
            kc = (a("a909"), Object(d["a"])(Cc, bc, gc, !1, null, "7526a640", null)),
            wc = kc.exports,
            Sc = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    attrs: {
                        title: "Hide & Seek Lobbies"
                    }
                }, [e.createLobbyStatus || null != e.selectedLobby ? e._e() : t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content with-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", [e._v("Teilnehmer")]), t("th")])]), t("tbody", e._l(e.lobbies, (function(a, i) {
                    return t("tr", {
                        key: i,
                        staticClass: "clickable",
                        class: {
                            "color-main": a == e.selectedLobby
                        },
                        on: {
                            click: function(t) {
                                return e.selectLobby(a)
                            }
                        }
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p) + " / " + e._s(a.mp))]), t("td", {
                        staticClass: "text-center"
                    }, [a.pw ? t("span", {
                        staticClass: "mdi mdi-lock"
                    }) : e._e()])])
                })), 0)]), e.createLobbyStatus && null != e.selectedLobby || !e.createLobbyStatus && null == e.selectedLobby ? t("div", {
                    staticClass: "lobby-create-box"
                }, [t("CoreButton", {
                    staticClass: "lobby-create-button",
                    on: {
                        click: function(t) {
                            return e.toggleCreateLobby()
                        }
                    }
                }, [e._v("Lobby erstellen")])], 1) : e._e()], 1)]), null != e.selectedLobby || null == e.selectedLobby && e.createLobbyStatus ? t("CoreInterfaceMultiple", {
                    attrs: {
                        title: e.createLobbyStatus && null == e.selectedLobby ? "Lobby Erstellen" : "Lobby Beitreten",
                        "with-close": ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [null != e.selectedLobby ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row",
                    staticStyle: {
                        "justify-content": "center"
                    }
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [t("img", {
                    attrs: {
                        src: "images/prophunt/" + e.selectedLobby.m + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.n) + " ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col lobby-password"
                }, [e.selectedLobby.pw ? t("CoreInput", {
                    staticClass: "dark",
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }) : e._e()], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.e) + " $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 $ ")])]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" " + e._s(e.selectedLobby.p) + " von " + e._s(e.selectedLobby.mp) + " ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: e.selectedLobby.p >= e.selectedLobby.mp
                    },
                    on: {
                        click: e.joinLobby
                    }
                }, [e._v("Lobby beitreten")])], 1)]) : e.createLobbyStatus ? t("div", {
                    staticClass: "body-content-racing"
                }, [t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Lobbyname ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Lobbyname",
                        maxlength: "40"
                    },
                    model: {
                        value: e.lobbyName,
                        callback: function(t) {
                            e.lobbyName = t
                        },
                        expression: "lobbyName"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Passwort ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Passwort (optional)",
                        maxlength: "4"
                    },
                    model: {
                        value: e.lobbyPassword,
                        callback: function(t) {
                            e.lobbyPassword = t
                        },
                        expression: "lobbyPassword"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Maximale Teilnehmer ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        min: "2",
                        max: "25",
                        type: "number"
                    },
                    model: {
                        value: e.lobbyMaxAmount,
                        callback: function(t) {
                            e.lobbyMaxAmount = e._n(t)
                        },
                        expression: "lobbyMaxAmount"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Einsatz (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        type: "number"
                    },
                    model: {
                        value: e.lobbyEntry,
                        callback: function(t) {
                            e.lobbyEntry = e._n(t)
                        },
                        expression: "lobbyEntry"
                    }
                })], 1)]), t("div", {
                    staticClass: "lobby-box-row"
                }, [t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" Gebühr (in $) ")]), t("div", {
                    staticClass: "lobby-box-col"
                }, [e._v(" 75 ")])]), t("div", {
                    staticClass: "finish-lobby-creation-button"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: "" == e.lobbyName
                    },
                    on: {
                        click: e.createLobby
                    }
                }, [e._v("Lobby erstellen")])], 1)]) : e._e()])]) : e._e()], 1)
            },
            Mc = [],
            xc = {
                name: "ProphuntPoint",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        createLobbyStatus: !1,
                        selectedLobby: null,
                        lobbies: JSON.parse(this.data).d,
                        password: "",
                        lobbyName: "",
                        lobbyPassword: "",
                        lobbyMaxAmount: 10,
                        lobbyEntry: 0
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    selectLobby: function(e) {
                        this.selectedLobby = e
                    },
                    joinLobby: function() {
                        this.emitServer("JoinProphuntLobby", this.selectedLobby.i, this.password), this.hide()
                    },
                    toggleCreateLobby: function() {
                        this.selectedLobby = null, this.createLobbyStatus = !0
                    },
                    createLobby: function() {
                        this.emitServer("CreateProphuntLobby", this.lobbyName, this.lobbyPassword, this.lobbyMaxAmount, this.lobbyEntry), this.hide()
                    },
                    changeTeam: function() {
                        this.lobbyTeam <= 1 ? this.lobbyTeam = 2 : this.lobbyTeam = 1
                    }
                }
            },
            Pc = xc,
            Tc = (a("4ae5"), Object(d["a"])(Pc, Sc, Mc, !1, null, "229cb253", null)),
            Fc = Tc.exports,
            Bc = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: this.gangwardata.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "gangwar-start"
                }, [t("div", {
                    staticClass: "gangwar-start-box"
                }, [t("div", {
                    staticClass: "gangwar-start-box-title"
                }, [e._v("Besitzer")]), t("div", {
                    staticClass: "gangwar-start-box-image"
                }, [t("img", {
                    attrs: {
                        src: this.gangwardata.image,
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "gangwar-start-box-title2"
                }, [t("span", [e._v("Zuletzt Angegriffen:")]), t("span", [e._v(e._s(e.gangwardata.la))])])]), t("div", {
                    staticClass: "gangwar-start-subinfo"
                }, [this.gangwardata.cba ? t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.attackGangwar()
                        }
                    }
                }, [e._v("Gangwargebiet angreifen")]) : t("span", {
                    staticClass: "text-custom-danger"
                }, [e._v("Das Gebiet kann derzeit nicht angegriffen werden."), t("br"), e._v(" Möglich am " + e._s(this.gangwardata.cbaa))])], 1)])])
            },
            Ic = [],
            Ac = {
                name: "GangwarStart",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        gangwardata: JSON.parse(this.data),
                    }
                },
                methods: {
                    attackGangwar: function() {
                        this.emitServer("StartGangwar", this.gangwardata.i), this.hide()
                    }
                }
            },
            Dc = Ac,
            Nc = (a("1179"), Object(d["a"])(Dc, Bc, Ic, !1, null, null, null)),
            Oc = Nc.exports,
            Lc = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Prophunt Statistik",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "prophunt-statistic"
                }, [t("div", {
                    staticClass: "prophunt-header-info"
                }, [e._v(" Es wurden " + e._s(this.data.k) + " von " + e._s(this.data.t2.length) + " Props gefunden. ")]), t("div", {
                    staticClass: "prophunt-header"
                }, [t("div", {
                    staticClass: "team-name"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    staticClass: "text-nietzsche"
                }, [e._v("Team Hunter")])])])])], 1), t("div", {
                    staticClass: "team-name"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    staticClass: "text-pink"
                }, [e._v("Team Prop")])])])])], 1)]), t("div", {
                    staticClass: "prophunt-tables"
                }, [t("div", {
                    staticClass: "prophunt-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "30%"
                    }
                }, [e._v("Kills")])])]), t("tbody", e._l(e.sortedFirstTeam, (function(a) {
                    return t("tr", {
                        key: "t1_" + a.i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.k))])])
                })), 0)])], 1), t("div", {
                    staticClass: "prophunt-table"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "45%"
                    }
                }, [e._v("Zeit am Leben")])])]), t("tbody", e._l(e.sortedSecondTeam, (function(a) {
                    return t("tr", {
                        key: "t2_" + a.i
                    }, [t("td", [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(e.convertToMinutesAndSeconds(a.t)))])])
                })), 0)])], 1)])])])
            },
            Hc = [],
            zc = {
                name: "ProphuntFinish",
                components: {
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    formatNumber: function(e, t) {
                        var a = e / t;
                        return Math.round(100 * a) / 100
                    },
                    convertToMinutesAndSeconds: function(e) {
                        var t = ~~(e / 3600),
                            a = ~~(e % 3600 / 60),
                            i = ~~e % 60,
                            s = "";
                        return t > 0 && (s += t + ":" + (a < 10 ? "0" : "")), s += a + ":" + (i < 10 ? "0" : ""), s += "" + i, s
                    },
                    close: function() {
                        this.hide()
                    },
                    leavePaintball: function() {
                        this.emitServer("CancelPaintball", this.data.i), this.emit("StopPaintball"), this.hide()
                    }
                },
                computed: {
                    calculateKillsForFirstTeam: function() {
                        var e = this.data.t1.reduce((function(e, t) {
                            return t.k + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateKillsForSecondTeam: function() {
                        var e = this.data.t2.reduce((function(e, t) {
                            return t.k + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateDeathsForFirstTeam: function() {
                        var e = this.data.t1.reduce((function(e, t) {
                            return t.d + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    calculateDeathsForSecondTeam: function() {
                        var e = this.data.t2.reduce((function(e, t) {
                            return t.d + e
                        }), 0);
                        return isNaN(e) ? 0 : e
                    },
                    sortedFirstTeam: function() {
                        return this.data.t1.sort((function(e, t) {
                            return e.k < t.k ? 1 : -1
                        }))
                    },
                    sortedSecondTeam: function() {
                        return this.data.t2.sort((function(e, t) {
                            return e.t < t.t ? 1 : -1
                        }))
                    }
                }
            },
            jc = zc,
            Rc = (a("4941"), Object(d["a"])(jc, Lc, Hc, !1, null, "586ae7dd", null)),
            Vc = Rc.exports,
            Ec = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Staatsgefängnis",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "weapon-factory"
                }, [t("div", {
                    staticClass: "weapon-factory-body"
                }, [t("div", {
                    staticClass: "weapon-factory-orders"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Zelle")]), t("th", [e._v("Status")]), t("th", [e._v("Insasse 1")]), t("th", [e._v("Insasse 2")]), t("th", [e._v("Aktion")])])]), t("tbody", e._l(this.data.d, (function(a) {
                    return t("tr", {
                        key: a.i,
                        staticClass: "text-center"
                    }, [t("td", [e._v(" " + e._s(a.i) + " ")]), t("td", [e._v(" " + e._s(a.n) + " ")]), t("td", [e._v(" " + e._s(e.getStateName(a)) + " ")]), t("td", [e._v(e._s(e.getFirstPrisoner(a)))]), t("td", [e._v(" " + e._s(e.getSecondPrisoner(a)) + " ")]), 1 == a.l ? t("td", [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.unlockCell(a)
                            }
                        }
                    }, [e._v("Öffnen")])], 1) : t("td", [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.lockCell(a)
                            }
                        }
                    }, [e._v("Schließen")])], 1)])
                })), 0)])], 1)])])])
            },
            Gc = [],
            Wc = {
                name: "PrisonCellOverview",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    unlockCell: function(e) {
                        this.emitServer("UnlockPrisonCell", e.i), e.l = !1
                    },
                    lockCell: function(e) {
                        this.emitServer("lockPrisonCell", e.i), e.l = !0
                    },
                    getStateName: function(e) {
                        return e.l ? "Geschlossen" : "Offen"
                    },
                    getFirstPrisoner: function(e) {
                        return e.p.length > 0 ? e.p[0].n : "-"
                    },
                    getSecondPrisoner: function(e) {
                        return e.p.length > 1 ? e.p[1].n : "-"
                    }
                }
            },
            Kc = Wc,
            Uc = (a("cfde"), Object(d["a"])(Kc, Ec, Gc, !1, null, null, null)),
            $c = Uc.exports,
            qc = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "images/teams/15.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Anmeldungsübersicht ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("DMV")]), t("span", [e._v("Anmeldungsübersicht")])]), t("div", {
                    staticClass: "computer-body-content-search",
                    attrs: {
                        slot: "computer-body-content-search"
                    },
                    slot: "computer-body-content-search"
                }, [t("span", [t("span", {
                    staticClass: "core-switch core-switch-computer"
                }, [t("input", {
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "searchType"
                    },
                    domProps: {
                        checked: e.searchType
                    },
                    on: {
                        change: e.switchSearch
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "searchType"
                    }
                })]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    attrs: {
                        type: "text",
                        autocomplete: "off",
                        placeholder: e.searchType ? "Kennzeichen" : "Seriennr."
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    },
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.submitSearch.apply(null, arguments)
                        }
                    }
                }), t("button", {
                    on: {
                        click: e.submitSearch
                    }
                }, [e._v("Suchen")])])]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 1 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(1, "Anmeldungsübersicht")
                        }
                    }
                }, [t("a", {}, [e._v("Anmeldungsübersicht")])])]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [t("div", {
                    staticClass: "computer-body-content-box-services"
                }, [e.page >= 1 ? t("div", {
                    staticClass: "servicelist-table"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Seriennummer")]), t("th", [e._v("Fahrzeug")]), t("th", [e._v("Angemeldet auf")]), t("th", [e._v("Angemeldet von")]), t("th", [e._v("Kennzeichen")]), t("th", [e._v("Status")]), t("th", [e._v("Datum")])])]), t("tbody", e._l(e.filteredList, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.owner))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.officer))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.p))]), t("td", {
                        staticClass: "text-center",
                        class: {
                            "text-custom-danger": 0 === a.s,
                            "text-custom-success": 1 === a.s
                        }
                    }, [e._v(e._s(a.s ? "Angemeldet" : "Abgemeldet"))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))])])
                })), 0)])], 1) : e._e()])])])
            },
            Jc = [],
            Zc = {
                name: "VehicleRegistrationOverview",
                components: {
                    DeviceComputer: Wt,
                    CoreTable: ge
                },
                data: function() {
                    return {
                        page: 1,
                        pageTitle: "",
                        search: "",
                        searchType: 0,
                        vehicleList: [],
                        lastInteract: 0,
                        lastInteractCooldown: 1e3
                    }
                },
                computed: {
                    filteredList: function() {
                        var e = this;
                        return this.vehicleList.filter((function(t) {
                            return t.i.toString().includes(e.search) || t.p.toLowerCase().includes(e.search.toLowerCase())
                        }))
                    }
                },
                methods: {
                    changePage: function(e, t) {
                        this.page = e, this.pageTitle = t
                    },
                    switchSearch: function() {
                        this.search = "", this.searchType = !this.searchType
                    },
                    submitSearch: function() {
                        var e = Date.now();
                        if (e - this.lastInteract > this.lastInteractCooldown) {
                            if (this.lastInteract = e, "" === this.search.trim()) return;
                            if (this.search.length > 8) return;
                            if (this.searchType) this.emitServer("GetRegisteredVehiclesbyPlate", this.search.trim());
                            else {
                                if (isNaN(parseInt(this.search))) return void(this.search = "");
                                this.emitServer("GetRegisteredVehiclesbyId", this.search.trim())
                            }
                        } else fuckThis("fromUINot","[SPAMSCHUTZ] Bitte nicht so schnell hintereinander.", "#c72020");
                        this.dev && (this.vehicleList = [{
                            i: 513561,
                            n: "Blista",
                            owner: "Erwin_Nietzsche",
                            officer: "Simon_Bauer",
                            p: "mahmut",
                            s: 0,
                            d: "26.08.21 22:53 Uhr"
                        }, {
                            i: 123456,
                            n: "Blista",
                            owner: "Erwin_Nietzsche",
                            officer: "Simon_Bauer",
                            p: "Toast",
                            s: 0,
                            d: "26.08.21 22:53 Uhr"
                        }])
                    },
                    sendRegisteredVehicles: function(e) {
                        this.vehicleList = e.data
                    }
                },
                created: function() {
                    this.addEvent("SendRegisteredVehicles", this.sendRegisteredVehicles)
                }
            },
            Xc = Zc,
            Yc = Object(d["a"])(Xc, qc, Jc, !1, null, "71580214", null),
            Qc = Yc.exports,
            el = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "purchasecontract"
                }, [t("div", {
                    staticClass: "purchasecontract-box"
                }, [t("div", {
                    staticClass: "purchasecontract-header without-top-secret"
                }, [t("div", {
                    staticClass: "purchasecontract-header-logo"
                }), t("div", {
                    staticClass: "purchasecontract-header-actions"
                }, [t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    staticClass: "purchasecontract-body"
                }, [t("p", {
                    staticClass: "report-header"
                }, [e._v(" Kaufvertrag vom " + e._s(e.data.d) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" über "), t("b", [e._v(e._s(e.data.t))])]), t("div", {
                    staticClass: "details-box"
                }, [t("p", [e._v("Zwischen "), t("b", [e._v(e._s(e.data.s))]), e._v(" - nachfolgend Verkäufer")]), t("br"), t("p", [e._v("und "), t("b", [e._v(e._s(e.data.b))]), e._v(" - nachfolgend Käufer.")])]), t("div", {
                    staticClass: "details-box vertrag"
                }, [t("p", [e._v(" §1 - Gegenstand des Vertrags"), t("br"), t("span", [e._v(" Der Käufer erwirbt die alleinigen Eigentums- und Besitzrechte an " + e._s(e.data.t) + " ")])]), e._m(0), t("p", {
                    staticClass: "absatz"
                }, [e._v(" §3 - Kaufpreis und Übereinigung"), t("br"), t("span", [e._v(" Der Kaufpreis beträgt "), t("b", [e._v(e._s(e.numberFormatter.format(e.data.p)))]), e._v(" und ist bei Unterzeichnung dieses Vertrages in bar zu bezahlen. ")])])]), t("div", {
                    staticClass: "report-box"
                }, [t("div", {
                    staticClass: "seller-box"
                }, [e._v(" Verkäufer "), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.data.s))])]), t("div", {
                    staticClass: "buyer-box ml-auto"
                }, [e._v(" Käufer "), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.data.b))])])])])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        message: "Notizen",
                        confirmText: "Anpassen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirm
                    }
                })], 1)
            },
            tl = [function() {
                var e = this,
                    t = e._self._c;
                return t("p", {
                    staticClass: "absatz"
                }, [e._v(" §2 - Gewährleistung und Mängel"), t("br"), t("span", [e._v(" Die Parteien handeln als Privatleute und der in diesem Vertrag beschriebene Kaufgegenstand wird unter Ausschluss jedweder Sachmängelhaftung verkauft."), t("br"), t("br"), e._v(" Der Verkäufer sichert ausdrücklich zu, dass der Kaufgegenstand während seiner Zeit als Eigentümer ausschließlich zu privaten Zwecken genutzt worden ist und frei von Rechten Dritter sei. ")])])
            }],
            al = {
                name: "PurchaseContract",
                components: {
                    CorePrompt: Ee,
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1,
                        numberFormatter: null
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {
                    getDate: function() {
                        return this.data.t
                    }
                },
                created: function() {
                    this.numberFormatter = new Intl.NumberFormat("de-DE", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0,
                        minimumFractionDigits: 0
                    })
                }
            },
            il = al,
            sl = (a("e3d7"), Object(d["a"])(il, el, tl, !1, null, "702ebe48", null)),
            nl = sl.exports,
            rl = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "case-opening-interface"
                }, [t("div", {
                    staticClass: "case-opening"
                }, [t("div", {
                    staticClass: "case-opening-title"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/caseopening/case/title.png"
                    }
                })]), t("div", {
                    staticClass: "case-opening-overlay",
                    style: {
                        backgroundImage: "./images/inventoy/items/" + e.casedata.image,
                        alt: e.casedata.image
                    }
                }), t("div", {
                    staticClass: "case-opening-wheel"
                }, [t("img", {
                    class: "case-opening-items",
                    attrs: {
                        src: "./images/inventoy/items/" + e.casedata.image,
                        alt: e.casedata.image
                    }   
                })]), t("h4", {
                    staticClass: "possible-winnings"
                }, [e._v("Mögliche Gewinne:")]), t("div", {
                    staticClass: "case-opening-prices"
                }, e._l(e.casedata.a, (function(a) {
                    return t("div", {
                        key: a,
                        staticClass: "case-opening-price"
                    }, [t("img", {
                        attrs: {
                            src: "./images/inventoy/items/" + a.image,
                            alt: a.image
                        }
                    })])
                })), 0)]), e.finishSpin ? t("div", {
                    staticClass: "case-opening-jackpot"
                }, [t("div", {
                    staticClass: "case-opening-jackpot-title"
                }, [e._v(" Du hast gewonnen! (" + e.casedata.name +")")]), t("div", {
                    staticClass: "case-opening-jackpot-image"
                }, [t("img", {
                    attrs: {
                        src: "./images/inventoy/items/" + e.casedata.image,
                        alt: e.casedata.i
                    }
                })]), t("div", {
                    staticClass: "case-opening-jackpot-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.takeWin
                    }
                }, [e._v("Gewinn abholen!")])], 1)]) : e._e()])
            },
            ol = [],
            cl = {
                name: "CaseOpening",
                components: {
                    CoreButton: x
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        casedata: JSON.parse(this.data),
                        finishSpin: !1,
                        sound: new Audio("https://sibaui.deinsh.eu/sound/stuff/CaseOpeningSpin.mp3")
                    }
                },
                created: function() {
                    var e = this;
                    e.addEvent("updateCaseElement", e.updateItem);
                    setTimeout((function() {
                        e.sound.volume = .4, e.sound.play()
                    }), 500), setTimeout((function() {
                        e.finishSpin = !0
                    }), 13000)
                },
                methods: {
                    takeWin: function() {
                        this.emitServer("TakeCaseOpeningWin"), this.hide()
                    },
                    updateItem: function(i, image, name) {
                        this.casedata.i = i;
                        this.casedata.image = image;
                        this.casedata.name = name;

                    },
                    calcItem: function(e) {
                        return e - 1
                    }
                }
            },
            ll = cl,
            ul = (a("032f"), Object(d["a"])(ll, rl, ol, !1, null, "24b12ee2", null)),
            ml = ul.exports,
            dl = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "referral"
                }, [t("div", {
                    staticClass: "referral-body img"
                }, [e._l(100, (function(a) {
                    return t("div", {
                        key: a,
                        staticClass: "snowflake"
                    }, [e._v(" ❆ ")])
                })), t("div", {
                    staticClass: "referral-collection"
                }, e._l(e.doors, (function(a) {
                    return t("div", {
                        key: a,
                        staticClass: "referral-collection-item",
                        class: {
                            disabled: a < e.today
                        },
                        style: "background-image: url(./images/interface/adventscalender/present" + e.randomInt() + ".png);",
                        on: {
                            click: function(t) {
                                return e.openDoor(a)
                            }
                        }
                    }, [e._v(" " + e._s(a) + " ")])
                })), 0)], 2)])
            },
            hl = [],
            _l = (a("38cf"), {
                name: "AdventsCalendar",
                components: {},
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        sound: new Audio("./sounds/christmas.mp3"),
                        doors: [],
                        today: null
                    }
                },
                methods: {
                    openDoor: function(e) {
                        this.emitServer("ChristmasDoor", e), this.sound.pause(), this.hide()
                    },
                    randomInt: function() {
                        return Math.floor(5 * Math.random()) + 1
                    },
                    shuffle: function(e) {
                        for (var t = e.length - 1; t > 0; t--) {
                            var a = Math.floor(Math.random() * (t + 1)),
                                i = [e[a], e[t]];
                            e[t] = i[0], e[a] = i[1]
                        }
                        return e
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        var a, i;
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    for (a = 1; a <= 24; a++) e.doors.push(a);
                                    e.shuffle(e.doors), e.sound.play(), e.sound.volume = .05, e.sound.repeat = !0, i = new Date, e.today = i.getDate();
                                case 7:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            }),
            pl = _l,
            vl = (a("3812"), Object(d["a"])(pl, dl, hl, !1, null, "b5298ff6", null)),
            fl = vl.exports,
            bl = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xl",
                    attrs: {
                        title: "Referral",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "referral"
                }, [t("div", {
                    staticClass: "referral-header"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.showPage(1)
                        }
                    }
                }, [e._v("Info")]), t("CoreButton", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.showPage(2)
                        }
                    }
                }, [e._v("Abholung")]), t("CoreButton", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.showPage(3)
                        }
                    }
                }, [e._v("Referrals")])], 1)], 1), t("div", {
                    staticClass: "referral-body"
                }, [1 == e.page ? t("div", {
                    staticClass: "referral-orders"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/referral/card.png",
                        alt: "Referral Image"
                    }
                })]) : e._e(), 2 == e.page ? t("div", {
                    staticClass: "referral-collection"
                }, e._l(e.referralRewards, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "referral-collection-item",
                        style: {
                            backgroundImage: "url(./images/interface/referral/" + (5 + 5 * i) + ".png)"
                        }
                    }, [t("div", {
                        staticClass: "referral-collection-item-left"
                    }, [e._v(" Level " + e._s(5 + 5 * i) + " ")]), t("div", {
                        staticClass: "referral-collection-item-right"
                    }, [t("div", {
                        staticClass: "referral-collection-item-right-helper"
                    }, [e._v(e._s(a) + "x")]), t("div", {
                        staticClass: "referral-collection-item-right-amount"
                    }, [a > 0 ? t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.redeem(5 + 5 * i)
                            }
                        }
                    }, [e._v("Einlösen")]) : e._e()], 1)])])
                })), 0) : e._e(), 3 == e.page ? t("div", {
                    staticClass: "referral-pickup"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("Name")]), t("th", [e._v("Datum")])])]), t("tbody", e._l(this.referralPlayers, (function(a) {
                    return t("tr", {
                        key: a.n
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.d))])])
                })), 0)])], 1) : e._e()])])])
            },
            gl = [],
            yl = {
                name: "Referral",
                components: {
                    CoreTable: ge,
                    CoreButton: x,
                    CoreButtonGroup: te,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        page: 1,
                        referralRewards: [],
                        referralPlayers: []
                    }
                },
                methods: {
                    showPage: function(e) {
                        if (2 == e) {
                            if (!this.referralRewards.length) return void this.emitServer("GetReferralRewardOverview")
                        } else if (3 == e && !this.referralPlayers.length) return void this.emitServer("GetReferralPlayerOverview");
                        this.page = e
                    },
                    SendReferralRewards: function(e, t, a, i, s) {
                        this.referralRewards = [], this.referralRewards.push(e, t, a, i, s), this.page = 2
                    },
                    SendReferralPlayers: function(e) {
                        this.referralPlayers = e.d, this.page = 3
                    },
                    redeem: function(e) {
                        this.emitServer("RedeemReferralReward", e), this.hide()
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    e.addEvent("SendReferralRewards", e.SendReferralRewards), e.addEvent("SendReferralPlayers", e.SendReferralPlayers), e.dev && (e.referralRewards = [0, 1, 1, 0, 0, 2, 1, 0, 0, 10], e.referralPlayers = [{
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }, {
                                        n: "Hans_Wurst",
                                        d: "06.11.2021 88:88 Uhr"
                                    }]);
                                case 3:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            },
            Cl = yl,
            kl = (a("771d"), Object(d["a"])(Cl, bl, gl, !1, null, "6f2b08d7", null)),
            wl = kl.exports,
            Sl = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-sm core-interface-sm-dynamic-height",
                    attrs: {
                        title: "Fahrzeug Türen",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "door-trunk"
                }, [t("div", {
                    staticClass: "doors"
                }, [t("span", {
                    staticClass: "mdi mdi-door-open",
                    class: {
                        "text-custom-success": !this.data.hood,
                        "text-custom-danger": !0 === this.data.hood
                    },
                    on: {
                        click: function(t) {
                            e.changeDoorStatus(4), e.data.hood = !e.data.hood
                        }
                    }
                })])]), t("div", {
                    staticClass: "door"
                }, [t("div", {
                    staticClass: "door-odd"
                }, [t("div", {
                    staticClass: "doors"
                }, e._l(e.evenSeats, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "doors"
                    }, [t("div", [t("span", {
                        staticClass: "mdi mdi-door-open",
                        class: {
                            "text-custom-success": !a.s,
                            "text-custom-danger": !0 === a.s
                        },
                        on: {
                            click: function(t) {
                                e.changeDoorStatus(a.i), e.localChange(a)
                            }
                        }
                    })])])
                })), 0)]), t("div", {
                    staticClass: "door-image"
                }, [t("svg", {
                    staticStyle: {
                        "enable-background": "new 0 0 47.032 47.032"
                    },
                    attrs: {
                        version: "1.1",
                        id: "Capa_1",
                        xmlns: "http://www.w3.org/2000/svg",
                        "xmlns:xlink": "http://www.w3.org/1999/xlink",
                        x: "0px",
                        y: "0px",
                        viewBox: "0 0 47.032 47.032",
                        "xml:space": "preserve"
                    }
                }, [t("g", [t("path", {
                    attrs: {
                        d: "M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188zM32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805z"
                    }
                }), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g")]), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g"), t("g")])]), t("div", {
                    staticClass: "door-even"
                }, [t("div", {
                    staticClass: "doors"
                }, e._l(e.oddSeats, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "doors"
                    }, [t("div", [t("span", {
                        staticClass: "mdi mdi-door-open",
                        class: {
                            "text-custom-success": !a.s,
                            "text-custom-danger": !0 === a.s
                        },
                        on: {
                            click: function(t) {
                                e.changeDoorStatus(a.i), e.localChange(a)
                            }
                        }
                    })])])
                })), 0)])]), t("div", {
                    staticClass: "door-seal"
                }, [t("div"), t("div"), t("div", {
                    staticClass: "left"
                }, [t("span", {
                    staticClass: "mdi mdi-tablet-dashboard",
                    on: {
                        click: function(t) {
                            return e.openVehicleOperatingStatus()
                        }
                    }
                })]), t("div"), t("div"), e._v(" "), t("div", {
                    staticClass: "right"
                }, [0 != e.invdata.inspection ? t("span", {
                    staticClass: "mdi mdi-certificate-outline",
                    class: {
                        "text-custom-success": 1 == this.data.inspection,
                        "text-custom-danger": 2 == this.data.inspection
                    },
                    on: {
                        click: function(t) {
                            return e.openVehicleInspection()
                        }
                    }
                }) : e._e()]), t("div"), t("div")])])
            },
            Ml = [],
            xl = {
                name: "VehicleDoor",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    changeDoorStatus: function(e) {
                        this.emitServer("ChangeVehicleDoorStatus", e)
                    },
                    localChange: function(e) {
                        e.s = !e.s
                    },
                    openVehicleInspection: function() {
                        this.emitServer("OpenVehicleInspection")
                    },
                    openVehicleOperatingStatus: function() {
                        this.emitServer("OpenVehicleOperatingStatus")
                    }
                },
                computed: {
                    evenSeats: function() {
                        return this.data.d.filter((function(e) {
                            return e.i % 2 === 0
                        }))
                    },
                    oddSeats: function() {
                        return this.data.d.filter((function(e) {
                            return e.i % 2 !== 0
                        }))
                    }
                }
            },
            Pl = xl,
            Tl = (a("cceb"), Object(d["a"])(Pl, Sl, Ml, !1, null, "41bf127a", null)),
            Fl = Tl.exports,
            Bl = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "treatmentcertificate"
                }, [t("div", {
                    staticClass: "treatmentcertificate-box"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header-logo"
                }), t("div", {
                    staticClass: "treatmentcertificate-header-actions"
                }, [t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    staticClass: "treatmentcertificate-body"
                }, [t("p", {
                    staticClass: "report-header"
                }, [e._v(" Hauptuntersuchung gemäß §13 StVO ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Berichtsnummer: " + e._s(this.data.id) + " ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Fahrzeug: " + e._s(this.data.t) + " - Fahrgestellnummer: " + e._s(this.data.i) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Sehr geehrter Kunde, sehr geehrte Kundin,"), t("br"), e._v(" Am " + e._s(this.data.d) + " Uhr wurde das oben genannte Fahrzeug in unserem Betrieb einer Hauptuntersuchung unterzogen. ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Ihr Fahrzeug wurde von dem Mitarbeiter "), t("b", [e._v(e._s(this.data.in))]), e._v(" begutachtet und als ohne Mängel deklariert. "), t("br"), e._v(" Eine Wiedervorführung ist nicht erforderlich. ")]), t("p", {
                    staticClass: "report-subheader"
                }, [t("span", [e._v("Die HU-Plakette wurde angebracht und die nächste HU ist folglich am " + e._s(this.data.du) + " Uhr fällig. ")])]), t("p", {
                    staticClass: "report-subheader"
                }), e._m(0), e._m(1)])])])
            },
            Il = [function() {
                var e = this,
                    t = e._self._c;
                return t("p", {
                    staticClass: "report-subheader-finish"
                }, [t("span", [e._v("Hochachtungsvoll,")]), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v("Paco Teflon")]), t("br"), t("span", [e._v("Geschäftsführer vom Automobil Club Los Santos")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "report-disclaimer"
                }, [e._v(" Dieses Dokument gilt als offizieller Nachweis über eine staatlich "), t("br"), e._v(" durchgeführte Hauptuntersuchung. ")])
            }],
            Al = {
                name: "VehicleInspectionProof",
                components: {
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {}
            },
            Dl = Al,
            Nl = (a("a214"), Object(d["a"])(Dl, Bl, Il, !1, null, "a8e6c164", null)),
            Ol = Nl.exports,
            Ll = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md core-interface-md-dynamic-height",
                    attrs: {
                        title: "Betriebsstatus",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "door"
                }, [t("div", {
                    staticClass: "doors"
                }, [t("div", {
                    staticClass: "image1"
                }, [t("div", {
                    staticClass: "text"
                }, [e._v(" " + e._s(this.data.engineOil) + " von 5.0 Liter ")])]), t("div", {
                    staticClass: "image2"
                }, [t("div", {
                    staticClass: "text"
                }, [e._v(" " + e._s(this.data.brakeFluid) + " von 5.0 Liter ")])]), t("div", {
                    staticClass: "image3"
                }, [t("div", {
                    staticClass: "text"
                }, [e._v(" " + e._s(this.data.wheelHealth) + " Bar ")])])])])])
            },
            Hl = [],
            zl = {
                name: "VehicleOperatingStatus",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {}
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {}
            },
            jl = zl,
            Rl = (a("10dc"), Object(d["a"])(jl, Ll, Hl, !1, null, "71c8dd9a", null)),
            Vl = Rl.exports,
            El = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "KFZ Mietvertrag",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.cancel()
                        }
                    }
                }, [t("div", {
                    staticClass: "marriage-contract"
                }, [t("div", {
                    staticClass: "marriage-contract-details"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Vermieter ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.lp : "",
                        disabled: void 0 === this.data.creation
                    },
                    model: {
                        value: e.lessorPlayer,
                        callback: function(t) {
                            e.lessorPlayer = t
                        },
                        expression: "lessorPlayer"
                    }
                })], 1)]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Mieter ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.rp : "",
                        disabled: void 0 === this.data.creation
                    },
                    model: {
                        value: e.rentPlayer,
                        callback: function(t) {
                            e.rentPlayer = t
                        },
                        expression: "rentPlayer"
                    }
                })], 1)])]), t("br"), t("div", {
                    staticClass: "marriage-contract-details-partners"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Preis ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.p : "",
                        disabled: void 0 === this.data.creation
                    },
                    model: {
                        value: e.price,
                        callback: function(t) {
                            e.price = t
                        },
                        expression: "price"
                    }
                })], 1)]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner"
                }, [t("div", {
                    staticClass: "marriage-contract-details-partners-partner-name"
                }, [e._v(" Fahrzeugnummer ")]), t("div", {
                    staticClass: "marriage-contract-details-partners-partner-input"
                }, [t("CoreInput", {
                    attrs: {
                        value: void 0 !== this.data ? this.data.vid : "",
                        disabled: void 0 === this.data.creation
                    },
                    model: {
                        value: e.vehicleId,
                        callback: function(t) {
                            e.vehicleId = t
                        },
                        expression: "vehicleId"
                    }
                })], 1)])]), t("div", {
                    staticClass: "marriage-contract-details-name"
                }, [void 0 !== this.data ? t("span", [t("span", [e._v(" Aussteller des Mietvertrags: "), t("span", {
                    staticClass: "font-weight-bold text-sibaui"
                }, [e._v(" " + e._s(this.data.c) + " ")])]), t("br"), t("br")]) : e._e(), t("span", [e._v("Dauer des Mietvertrags:")]), this.data.creation ? t("div", [t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(1)
                        }
                    }
                }, [e._v(" 1 Tag "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.duration,
                        expression: "duration"
                    }],
                    attrs: {
                        type: "radio",
                        id: "day1",
                        name: "partner",
                        value: "1"
                    },
                    domProps: {
                        checked: e._q(e.duration, "1")
                    },
                    on: {
                        change: function(t) {
                            e.duration = "1"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })]), t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(3)
                        }
                    }
                }, [e._v(" 3 Tage "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.duration,
                        expression: "duration"
                    }],
                    attrs: {
                        type: "radio",
                        id: "day3",
                        name: "partner",
                        value: "3"
                    },
                    domProps: {
                        checked: e._q(e.duration, "3")
                    },
                    on: {
                        change: function(t) {
                            e.duration = "3"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })]), t("div", {
                    staticClass: "marriage-contract-details-name-radio",
                    on: {
                        click: function(t) {
                            return e.changePartner(7)
                        }
                    }
                }, [e._v(" 7 Tage "), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.duration,
                        expression: "duration"
                    }],
                    attrs: {
                        type: "radio",
                        id: "day7",
                        name: "partner",
                        value: "7"
                    },
                    domProps: {
                        checked: e._q(e.duration, "7")
                    },
                    on: {
                        change: function(t) {
                            e.duration = "7"
                        }
                    }
                }), t("span", {
                    staticClass: "checkmark"
                })])]) : t("div", [e._v(" " + e._s(this.data.cu) + " Tage ")])])]), t("div", {
                    staticClass: "marriage-contract-confirmation"
                }, [this.data.creation ? t("CoreButton", {
                    on: {
                        click: e.signContract
                    }
                }, [e._v("Unterschreiben")]) : t("CoreButton", {
                    on: {
                        click: e.finalSignContract
                    }
                }, [e._v("Unterschreiben")])], 1)])])
            },
            Gl = [],
            Wl = {
                name: "VehicleRentAgreement",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        lessorPlayer: "",
                        rentPlayer: "",
                        vehicleId: "",
                        duration: 1,
                        price: ""
                    }
                },
                methods: {
                    signContract: function() {
                        this.emitServer("CreateVehicleRentalAgreement", this.lessorPlayer, this.rentPlayer, parseInt(this.vehicleId), parseInt(this.duration), parseInt(this.price)), this.hide()
                    },
                    finalSignContract: function() {
                        this.emitServer("FinalCreateVehicleRentalAgreement", this.data.i), this.hide()
                    },
                    cancel: function() {
                        void 0 === this.data.creation && this.emitServer("CancelVehicleRentalAgreement", this.data.i), this.hide()
                    },
                    changePartner: function(e) {
                        this.duration = e
                    }
                },
                created: function() {}
            },
            Kl = Wl,
            Ul = (a("b392"), Object(d["a"])(Kl, El, Gl, !1, null, "108a0d24", null)),
            $l = Ul.exports,
            ql = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "treatmentcertificate"
                }, [t("div", {
                    staticClass: "treatmentcertificate-box"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header-logo"
                }), t("div", {
                    staticClass: "treatmentcertificate-header-actions"
                }, [t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    staticClass: "treatmentcertificate-body"
                }, [t("p", {
                    staticClass: "report-header"
                }, [e._v(" KFZ Mietvertrag ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Berichtsnummer: " + e._s(this.data.id) + " ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Fahrzeug: " + e._s(this.data.t) + " - Fahrgestellnummer: " + e._s(this.data.i) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Sehr geehrter Kunde, sehr geehrte Kundin,"), t("br"), e._v(" Am " + e._s(this.data.d) + " Uhr wurde das oben genannte Fahrzeug bis zum " + e._s(this.data.du) + " vermietet. ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Der Mietvertrag wurde von dem Mitarbeiter "), t("b", [e._v(e._s(this.data.wn))]), e._v(" beglaubigt. ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Vertragsdetails ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Vermieter : " + e._s(this.data.lp)), t("br"), e._v(" Mieter : " + e._s(this.data.rp)), t("br"), e._v(" Preis : " + e._s(this.data.p)), t("br"), e._v(" Start : " + e._s(this.data.d)), t("br"), e._v(" Ende : " + e._s(this.data.du) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }), t("p", {
                    staticClass: "report-subheader-finish"
                }, [t("span", [e._v("Hochachtungsvoll,")]), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(this.data.wn))]), t("br"), t("span", [e._v("zertifizierter KFZ Händler")])]), e._m(0)])])])
            },
            Jl = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "report-disclaimer"
                }, [e._v(" Dieses Dokument gilt als offizieller Nachweis über eine staatlich "), t("br"), e._v(" durchgeführte KFZ Vermietung. ")])
            }],
            Zl = {
                name: "VehicleRentProof",
                components: {
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {}
            },
            Xl = Zl,
            Yl = (a("f96a"), Object(d["a"])(Xl, ql, Jl, !1, null, "651789b7", null)),
            Ql = Yl.exports,
            eu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "battlepass",
                    on: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "esc", 27, t.key, ["Esc", "Escape"]) ? null : e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "battlepass-header"
                }, [t("div", {
                    staticClass: "battlepass-header-title"
                }, [e._v(" Battlepass "), t("span", {
                    staticClass: "battlepass-header-title-highlight"
                }, [e._v(e._s(e.currentMonth))])]), t("div", {
                    staticClass: "battlepass-header-time"
                }, [t("span", {
                    staticClass: "text-center"
                }, [e._v(e._s(e.time) + " Tage")]), t("span", {
                    staticClass: "fs-5 text-center"
                }, [e._v("(verbleibend)")])]), t("div", {
                    staticClass: "battlepass-header-close",
                    on: {
                        click: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), e._m(0), t("div", {
                    ref: "battlepassItemsContainer",
                    staticClass: "battlepass-items",
                    attrs: {
                        id: "battlepassItemsContainer"
                    }
                }, e._l(e.data.d, (function(a, i) {
                    return t("div", {
                        key: i,
                        ref: "battlepassItems",
                        refInFor: !0,
                        staticClass: "battlepass-item",
                        class: {
                            finished: a.a === a.na
                        }
                    }, [t("div", {
                        staticClass: "battlepass-item-card"
                    }, [t("div", {
                        staticClass: "battlepass-item-difficulty"
                    }, e._l(a.d, (function(e) {
                        return t("img", {
                            key: e,
                            attrs: {
                                src: "./images/star.png",
                                alt: "battlepass start"
                            }
                        })
                    })), 0), t("div", {
                        staticClass: "battlepass-item-image"
                    }, [t("popper", {
                        attrs: {
                            trigger: "hover",
                            options: {
                                placement: "right",
                                modifiers: {
                                    offset: {
                                        offset: "0,1vh"
                                    },
                                    zIndex: 50
                                }
                            }
                        }
                    }, [t("div", {
                        staticClass: "popper"
                    }, [t("div", {
                        staticClass: "battlepass-popper-name"
                    }, [e._v(e._s(e.tasks.find((function(e) {
                        return e.id === a.i
                    })).name))]), t("div", {
                        staticClass: "battlepass-popper-details"
                    }, [t("CoreTable", [t("tbody", [t("tr", [t("td", {
                        staticClass: "text-left"
                    }, [e._v("Status")]), t("td", {
                        staticClass: "text-right",
                        class: {
                            "text-custom-success": a.a === a.na
                        }
                    }, [e._v(" " + e._s(a.a === a.na ? "Erfüllt" : "Offen") + " ")])]), t("tr", [t("td", {
                        staticClass: "text-left text-bold",
                        attrs: {
                            colspan: "2"
                        }
                    }, [e._v("Information")])]), t("tr", [t("td", {
                        staticClass: "text-left"
                    }, [e._v("Noch verbl.:")]), t("td", {
                        staticClass: "text-right"
                    }, [e._v(e._s(a.a) + " / " + e._s(a.na))])]), t("tr", [t("td", {
                        staticClass: "text-left"
                    }, [e._v("Erfüllt zu")]), t("td", {
                        staticClass: "text-right"
                    }, [e._v(e._s(e.calculateProcentage(a.a, a.na)) + " %")])]), t("tr", [t("td", {
                        staticClass: "text-left text-bold",
                        attrs: {
                            colspan: "2"
                        }
                    }, [e._v("Beschreibung")])]), t("tr", [t("td", {
                        staticClass: "text-left",
                        attrs: {
                            colspan: "2"
                        }
                    }, [e._v(e._s(e.parseDescription(e.tasks.filter((function(e) {
                        return e.id === a.i
                    }))[0].desc, a.na)))])])])])], 1)]), t("img", {
                        attrs: {
                            slot: "reference",
                            src: "./images/interface/battlepass/" + a.i + ".png",
                            alt: "battlepass icon"
                        },
                        slot: "reference"
                    })])], 1), t("div", {
                        staticClass: "battlepass-item-progress"
                    }, [t("div", {
                        style: {
                            width: e.calculateProcentage(a.a, a.na) + "%"
                        }
                    }, [e._v(" " + e._s(e.calculateProcentage(a.a, a.na)) + " % ")])])])])
                })), 0)])
            },
            tu = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "battlepass-image"
                }, [t("img", {
                    attrs: {
                        src: "./images/logos/battlepass.png",
                        alt: ""
                    }
                })])
            }],
            au = a("526e"),
            iu = a.n(au),
            su = (a("a101"), a("c1df")),
            nu = a.n(su),
            ru = {
                name: "Battlepass",
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                components: {
                    CoreTable: ge,
                    popper: iu.a
                },
                data: function() {
                    return {
                        tasks: [],
                        time: "",
                        startOfNextMonth: null,
                        timer: null,
                        currentMonth: null
                    }
                },
                methods: {
                    calculateProcentage: function(e, t) {
                        return parseFloat(e / t * 100).toFixed(2)
                    },
                    parseDescription: function(e, t) {
                        return e.replace("%amount%", t)
                    },
                    updateTime: function() {
                        var e = nu.a.duration(this.startOfNextMonth.diff(nu()()));
                        this.time = e.asDays().toFixed(0)
                    },
                    destroyTimer: function() {
                        clearInterval(this.timer), this.timer = null
                    },
                    mouseTracker: function(e) {
                        this.$refs.battlepassItems.forEach((function(t) {
                            var a = t.getBoundingClientRect(),
                                i = e.clientX - a.left,
                                s = e.clientY - a.top;
                            t.style.setProperty("--xPos", "".concat(i, "px")), t.style.setProperty("--yPos", "".concat(s, "px"))
                        }))
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (nu.a.locale("de"), e.startOfNextMonth = nu()().add(1, "month").startOf("month"), e.currentMonth = nu()().format("MMMM"), e.timer = setInterval((function() {
                                            e.updateTime()
                                        }), 1e3), !e.dev) {
                                        t.next = 8;
                                        break
                                    }
                                    e.tasks = [{
                                        id: 1,
                                        name: "Halo Jump",
                                        desc: ""
                                    }, {
                                        id: 2,
                                        name: "Petri Heil!",
                                        desc: "Die Fische beißen wieder gut! Besorg dir eine Angel und fische %amount% mal."
                                    }, {
                                        id: 3,
                                        name: "Feldarbeiter",
                                        desc: "Schnapp dir ein Werkzeug und farme %amount%."
                                    }, {
                                        id: 4,
                                        name: "Verarbeite Items",
                                        desc: ""
                                    }, {
                                        id: 5,
                                        name: "Profirennfahrer",
                                        desc: "Nimm an %amount% Autorennen in der Arcdehalle teil."
                                    }, {
                                        id: 6,
                                        name: "Durchdrehen",
                                        desc: "Versuch %amount% mal dein Glück am Glücksrad."
                                    }, {
                                        id: 7,
                                        name: "All In!",
                                        desc: "Verspiele %amount% an Geld im Casino"
                                    }, {
                                        id: 8,
                                        name: "Rubbel Meister",
                                        desc: "Öffne %amount% Lose."
                                    }, {
                                        id: 9,
                                        name: "Erreiche Export Umsatz",
                                        desc: ""
                                    }, {
                                        id: 10,
                                        name: "Gebe Sibcoins Aus",
                                        desc: ""
                                    }, {
                                        id: 11,
                                        name: "Stelle Sachen an Werkbank her ",
                                        desc: ""
                                    }, {
                                        id: 12,
                                        name: "Trainiere",
                                        desc: ""
                                    }, {
                                        id: 13,
                                        name: "Finde Versunkene Kiste",
                                        desc: ""
                                    }, {
                                        id: 14,
                                        name: "Finde Versunkene Waffenkiste",
                                        desc: ""
                                    }, {
                                        id: 15,
                                        name: "Fahre Bus",
                                        desc: ""
                                    }, {
                                        id: 16,
                                        name: "Sammle Müll ein",
                                        desc: ""
                                    }, {
                                        id: 17,
                                        name: "Konsumiere Lebensmittel ",
                                        desc: ""
                                    }, {
                                        id: 18,
                                        name: "Öffne Mysteriöse Box",
                                        desc: ""
                                    }, {
                                        id: 19,
                                        name: "Schalte Werbung ",
                                        desc: ""
                                    }, {
                                        id: 20,
                                        name: "Tanken ",
                                        desc: ""
                                    }, {
                                        id: 21,
                                        name: "Spielzeit (H)",
                                        desc: ""
                                    }, {
                                        id: 22,
                                        name: "Miete Fahrzeuge",
                                        desc: ""
                                    }, {
                                        id: 23,
                                        name: "Schürfen ",
                                        desc: ""
                                    }, {
                                        id: 24,
                                        name: "Erstelle Flyer",
                                        desc: ""
                                    }, {
                                        id: 25,
                                        name: "Gebe bei 24/7 Geld aus",
                                        desc: ""
                                    }, {
                                        id: 26,
                                        name: "Spiele Paintball",
                                        desc: ""
                                    }, {
                                        id: 27,
                                        name: "Spiele Prophunt",
                                        desc: ""
                                    }, {
                                        id: 28,
                                        name: "Stabilisiere Menschen ",
                                        desc: ""
                                    }, {
                                        id: 29,
                                        name: "Repariere Fahrzeuge ",
                                        desc: ""
                                    }, {
                                        id: 30,
                                        name: "Kaufe Kleidung",
                                        desc: ""
                                    }, {
                                        id: 31,
                                        name: "Erreiche gefahrene Meter",
                                        desc: ""
                                    }, {
                                        id: 32,
                                        name: "Telefoniere",
                                        desc: ""
                                    }, {
                                        id: 33,
                                        name: "Mache Dispatches ",
                                        desc: ""
                                    }, {
                                        id: 34,
                                        name: "Westen herstellen",
                                        desc: ""
                                    }], t.next = 13;
                                    break;
                                case 8:
                                    return t.next = 10, fetch("http://assets/SibauiRP_Assets/data/battlepassdata.json");
                                case 10:
                                    return t.next = 12, t.sent.json();
                                case 12:
                                    e.tasks = t.sent;
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                },
                mounted: function() {
                    var e = this,
                        t = document.getElementById("battlepassItemsContainer");
                    t.addEventListener("mousemove", this.mouseTracker), document.addEventListener("keydown", (function(t) {
                        "Escape" !== t.key && 27 !== t.keyCode || e.hide()
                    }))
                },
                destroyed: function() {
                    var e = document.getElementById("battlepassItemsContainer");
                    e.removeEventListener("mousemove", this.mouseTracker)
                },
                beforeDestroy: function() {
                    this.destroyTimer()
                }
            },
            ou = ru,
            cu = (a("ef68"), Object(d["a"])(ou, eu, tu, !1, null, null, null)),
            lu = cu.exports,
            uu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    attrs: {
                        id: "gwd-report"
                    }
                }, [t("div", {
                    attrs: {
                        id: "gwd-report-box"
                    }
                }, [t("div", {
                    attrs: {
                        id: "gwd-header"
                    }
                }, [t("div", {
                    attrs: {
                        id: "gwd-header-logo"
                    }
                }), t("div", {
                    attrs: {
                        id: "gwd-header-actions"
                    }
                }, [e.data.a ? t("BaseButton", {
                    staticClass: "leave",
                    on: {
                        click: e.editReport
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-pencil"
                })]) : e._e(), t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    attrs: {
                        id: "gwd-body"
                    }
                }, [t("p", {
                    staticClass: "report-header"
                }, [e._v(" GWD Abschlussbericht ")]), t("p", {
                    staticClass: "report-header"
                }, [e._v(" Rekrut: " + e._s(e.data.n) + " | Datum: " + e._s(e.data.t) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Hiermit wird offiziell bestätigt, das o.g. Rekrut erfolgreich seinen Grundwehrdienst bei der US Army bestritten hat."), t("br"), t("br"), e._v(" Der Rekrut erlangte die Abschlussnote "), t("b", [e._v(e._s(e.data.g))]), e._v(". "), t("br"), t("br"), e._v(" Innerhalb seiner Ausbildung erlernte der Rekrut mitunter aber nicht ausschließlich folgende Fähigkeiten: Funkdisziplin, Selbstbeherrschung, Waffenkunde und Umgang im Einsatz mit einer Waffe, soziale Fertigkeiten und der Umgang mit dem Dienstfahrzeug. ")]), t("br"), t("p", {
                    staticClass: "report-subheader"
                }, [e._m(0), t("br"), t("span", [e._v(e._s(e.data.d) + " ")])]), t("br"), e._m(1), e._m(2)])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        message: "Notizen",
                        confirmText: "Anpassen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirm
                    }
                })], 1)
            },
            mu = [function() {
                var e = this,
                    t = e._self._c;
                return t("span", {
                    staticClass: "font-weight-bold"
                }, [t("b", [e._v("Notizen der Ausbilder:")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("p", {
                    staticClass: "report-subheader-finish"
                }, [t("span", [e._v("Hochachtungsvoll,")]), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v("Dr. Moses Hightower")]), t("br"), t("span", [e._v("General of the US Army")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "report-disclaimer"
                }, [e._v(" Alle Informationen dienen nur dem Internen Dienstgebrauch. "), t("br"), e._v(" Die Weitergabe ist strikt untersagt und strafbar. ")])
            }],
            du = {
                name: "GWDReport",
                components: {
                    CorePrompt: Ee,
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    editReport: function() {
                        this.prompt = !0
                    },
                    confirm: function(e) {
                        this.prompt = !1, void 0 != e && this.updateReport(e)
                    },
                    updateReport: function(e) {
                        this.data.i = e, this.emitServer("UpdateFriskReport", e)
                    }
                },
                computed: {
                    getDate: function() {
                        return this.data.t
                    }
                }
            },
            hu = du,
            _u = (a("9ec2"), Object(d["a"])(hu, uu, mu, !1, null, "0e73372e", null)),
            pu = _u.exports,
            vu = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "GWD Ausbildungsergebnisse",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.cancel()
                        }
                    }
                }, [t("div", {
                    attrs: {
                        id: "gwd-report-creation"
                    }
                }, [t("div", {
                    attrs: {
                        id: "gwd-report-creation-recruit"
                    }
                }, [t("div", {
                    staticClass: "gwd-report-creation-label required"
                }, [e._v(" Rekrut ")]), t("div", {
                    staticClass: "gwd-report-creation-input"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.recruit,
                        expression: "recruit"
                    }],
                    attrs: {
                        type: "text",
                        placeholder: "Max_Mustermann"
                    },
                    domProps: {
                        value: e.recruit
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.recruit = t.target.value)
                        }
                    }
                })])]), t("div", {
                    attrs: {
                        id: "gwd-report-creation-grade"
                    }
                }, [t("div", {
                    staticClass: "gwd-report-creation-label required"
                }, [e._v(" Note ")]), t("div", {
                    staticClass: "gwd-report-creation-input"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.grade,
                        expression: "grade"
                    }],
                    attrs: {
                        type: "number",
                        min: 0,
                        max: 15,
                        step: 1,
                        placeholder: "0"
                    },
                    domProps: {
                        value: e.grade
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.grade = t.target.value)
                        }
                    }
                })])]), t("div", {
                    attrs: {
                        id: "gwd-report-creation-note"
                    }
                }, [t("div", {
                    staticClass: "gwd-report-creation-label required"
                }, [e._v(" Bewertung/Beschreibung ")]), t("div", {
                    staticClass: "gwd-report-creation-input"
                }, [t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.note,
                        expression: "note"
                    }],
                    staticClass: "dark",
                    attrs: {
                        maxlength: "200",
                        rows: "6",
                        autocomplete: "off",
                        placeholder: "Rekrut X war ..."
                    },
                    domProps: {
                        value: e.note
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.note = t.target.value)
                        }
                    }
                })])]), t("div", {
                    attrs: {
                        id: "gwd-report-creation-submit"
                    }
                }, [t("CoreButton", {
                    on: {
                        click: e.createReport
                    }
                }, [e._v("GWD Ergebnis unterschreiben")])], 1)])])
            },
            fu = [],
            bu = {
                name: "GWDReportCreation",
                components: {
                    CoreButton: x,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        recruit: "",
                        grade: 0,
                        note: ""
                    }
                },
                methods: {
                    createReport: function() {
                        this.recruit.length <= 0 || this.grade < 0 || this.grade >= 16 || this.note.length <= 0 || this.emitServer("CreateGwdReport", this.recruit, this.grade, this.note)
                    },
                    cancel: function() {
                        this.hide()
                    }
                },
                created: function() {}
            },
            gu = bu,
            yu = (a("6b09"), Object(d["a"])(gu, vu, fu, !1, null, "b52499a4", null)),
            Cu = yu.exports,
            ku = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: e.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "processor-select"
                }, [t("div", {
                    staticClass: "processor-select-header"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Suche..."
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "processor-select-body"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", {
                    attrs: {
                        width: "10%"
                    }
                }, [e._v("#")]), t("th", [e._v("Name")]), t("th", {
                    attrs: {
                        width: "10%"
                    }
                }), t("th", {
                    attrs: {
                        width: "10%"
                    }
                }), 0 === parseInt(e.data.d) ? t("th", {
                    attrs: {
                        width: "10%"
                    }
                }) : e._e()])]), t("tbody", e._l(e.searchValues, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.i))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        staticClass: "success",
                        on: {
                            click: function(t) {
                                return e.acceptData(a.i)
                            }
                        }
                    }, [e._v(e._s(e.data.ad))])], 1), t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        staticClass: "danger",
                        on: {
                            click: function(t) {
                                return e.rejectData(a.i)
                            }
                        }
                    }, [e._v(e._s(e.data.rd))])], 1), 0 === parseInt(e.data.d) ? t("td", {
                        staticClass: "text-center"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.openPreview(a.img)
                            }
                        }
                    }, [e._v("Vorschau")])], 1) : e._e()])
                })), 0)])], 1)]), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showPreview,
                        expression: "showPreview"
                    }],
                    ref: "previewWindow",
                    attrs: {
                        id: "previewWindow"
                    }
                }, [t("div", {
                    staticClass: "closePreviewWindow",
                    on: {
                        click: e.closePreview
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })]), t("div", {
                    staticClass: "previewWindowContent"
                }, [t("img", {
                    attrs: {
                        src: e.img,
                        alt: "Sibaui Preview Image"
                    }
                })])])])
            },
            wu = [],
            Su = {
                name: "ExtendedSelection",
                components: {
                    CoreInput: A,
                    CoreButton: x,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        values: this.data.values,
                        search: "",
                        img: null,
                        showPreview: !1
                    }
                },
                methods: {
                    acceptData: function(e) {
                        this.emitServer(this.data.ae, parseInt(e)), this.hide()
                    },
                    rejectData: function(e) {
                        this.emitServer(this.data.re, parseInt(e)), this.hide()
                    },
                    openPreview: function(e) {
                        0 === parseInt(this.data.d) && (this.img = e, this.showPreview || (this.showPreview = !0))
                    },
                    closePreview: function() {
                        0 === parseInt(this.data.d) && (this.showPreview = !1, this.img = null)
                    }
                },
                computed: {
                    searchValues: function() {
                        var e = this;
                        return this.values.filter((function(t) {
                            return t.n.toLowerCase().includes(e.search) || t.i.toString().includes(e.search)
                        }))
                    }
                }
            },
            Mu = Su,
            xu = (a("380a"), Object(d["a"])(Mu, ku, wu, !1, null, "3538d0f0", null)),
            Pu = xu.exports,
            Tu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "hud-global-notifications"
                }, [e.messages.length ? t("div", {
                    key: e.messages[0].id,
                    staticClass: "global-notification-box",
                    class: "global-notification-box-" + e.type[e.messages[0].type][0]
                }, [t("div", {
                    staticClass: "global-notification-icon"
                }, ["army" != e.type[e.messages[0].type][0] ? t("span", {
                    staticClass: "mdi icon",
                    class: "mdi-" + e.type[e.messages[0].type][1]
                }) : t("span", {}, [t("img", {
                    attrs: {
                        src: "./images/logos/us-army-salute.svg",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "global-notification-message"
                }, [e._v(" " + e._s(e.messages[0].text) + " ")])]) : e._e()])
            },
            Fu = [],
            Bu = {
                name: "GlobalNotify",
                data: function() {
                    return {
                        messages: [],
                        waiting: [],
                        id: 0,
                        type: [
                            ["admin", "alert-box"],
                            ["lspd", "police-badge"],
                            ["marriage", "bell-ring"],
                            ["dev", "cog"],
                            ["events", "newspaper-variant-outline"],
                            ["wn", "newspaper"],
                            ["drop", "package-variant"],
                            ["lsmc", "heart-pulse"],
                            ["army", "chemical-weapon"]
                        ]
                    }
                },
                methods: {
                    remove: function(e) {
                        var t = this.notifications.indexOf(e);
                        this.notifications.splice(t, 1)
                    },
                    removeMessage: function(e) {
                        var t = this.messages.indexOf(e);
                        this.messages.splice(t, 1)
                    },
                    displayMessage: function(e, t) {
                        var a = {
                            text: e,
                            type: t,
                            id: this.id++
                        };
                        this.messages.push(a), setTimeout(this.removeMessage.bind(null, a), 6000)
                    }
                },
                created: function() {
                    this.addEvent("AddMsg", this.displayMessage)
                }
            },
            Iu = Bu,
            Au = Object(d["a"])(Iu, Tu, Fu, !1, null, null, null),
            Du = Au.exports,
            Nu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "hud-player-notifications"
                }, e._l(e.notifications, (function(a) {
                    return t("div", {
                        key: a.id,
                        staticClass: "player-notification-box",
                        style: {
                            borderLeftColor: a.color
                        }
                    }, [a.title ? t("div", {
                        staticClass: "player-notification-header"
                    }, [a.author ? t("div", {
                        staticClass: "player-notification-header-author"
                    }, [e._v(e._s(a.author))]) : t("div", [e._v(" ")]), t("div", {
                        staticClass: "player-notification-header-title"
                    }, [t("span", {
                        style: {
                            color: a.color
                        }
                    }, [e._v(e._s(a.title))])])]) : e._e(), t("div", {
                        staticClass: "player-notification-body"
                    }, [t("div", [e._v(e._s(a.message))])])])
                })), 0)
            },
            Ou = [],
            Lu = {
                name: "PlayerNotify",
                data: function() {
                    return {
                        notifications: [],
                        waiting: [],
                        id: 0
                    }
                },
                methods: {
                    remove: function(e) {
                        var t = this.notifications.indexOf(e);
                        this.notifications.splice(t, 1)
                    },
                    playSound(data){
                        if(data == 'SMS' && this.stumm == false){
                            return ringtoneSMS()
                        }else if(data == 'busy'){
                            return ringtoneBusy()
                        }else if(data.indexOf('1337Allahuakbar') >= 0){
                            var split = data.split('$');
                            return adminhorn(split[1])
                        }
                    },
                    displayNotification: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "",
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 5e3;
                        this.emit("PlaySound", 1, "ATM_WINDOW", "HUD_FRONTEND_DEFAULT_SOUNDSET", !0);
                        var s = {
                            message: e,
                            color: t,
                            title: a,
                            id: this.id++
                        };
                        if(e.indexOf('1337Allahuakbar') >= 0){
                            var audio = new Audio(this.playSound(e))
                            audio.play()
                        } else {
                        this.notifications.push(s), setTimeout(this.remove.bind(null, s), i)
                        }
                    }
                },
                created: function() {
                    this.addEvent("AddNotify", this.displayNotification), this.addEvent("AddNotifyWithTitle", this.displayNotification)
                }
            },
            Hu = Lu,
            zu = Object(d["a"])(Hu, Nu, Ou, !1, null, null, null),
            ju = zu.exports,
            Ru = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "licences-hud"
                }, e._l(e.licences, (function(a) {
                    return t("div", {
                        key: a.id,
                        staticClass: "licence"
                    }, [0 === parseInt(a.type) ? t("IdentityCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e(), 2 === parseInt(a.type) ? t("WeaponCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e(), 3 === parseInt(a.type) ? t("FirstAidCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e(), [12, 13, 14, 15, 16, 17].includes(parseInt(a.type)) ? t("DriverCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e(), 7 === parseInt(a.type) ? t("DutyCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e(), 8 === parseInt(a.type) ? t("LawyerCard", {
                        attrs: {
                            licence: a
                        }
                    }) : e._e()], 1)
                })), 0)
            },
            Vu = [],
            Eu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "identity-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image.name + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-perso",
                    class: e.image.className
                }, [t("span", {
                    staticClass: "name"
                }, [e._v(e._s(e.fullname))]), t("span", {
                    staticClass: "birthdate"
                }, [e._v(e._s(e.birthday))]), t("span", {
                    staticClass: "gender"
                }, [e._v(e._s(e.gender.name))]), t("span", {
                    staticClass: "entrydate"
                }, [e._v(e._s(e.entryDate))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))]), t("span", {
                    staticClass: "visum"
                }, [e._v(e._s(e.visum))])])])
            },
            Gu = [],
            Wu = {
                name: "IdentityCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    fullname: function() {
                        return this.licence.data[0].firstname + " " + this.licence.data[0].lastname
                    },
                    birthday: function() {
                        return this.licence.data[0].birthday
                    },
                    gender: function() {
                        return 0 === parseInt(this.licence.data[0].gender) ? {
                            name: "Männlich",
                            type: 0
                        } : {
                            name: "Weiblich",
                            type: 1
                        }
                    },
                    entryDate: function() {
                        return this.licence.data[0].entrydata
                    },
                    signature: function() {
                        return this.licence.data[0].firstname[0] + ". " + this.licence.data[0].lastname
                    },
                    visum: function() {
                        return this.licence.data[0].visum
                    },
                    image: function() {
                        var e = null;
                        return this.visum >= 0 && this.visum <= 5 ? e = 0 : this.visum >= 6 && this.visum <= 14 ? e = 1 : this.visum >= 15 && this.visum <= 24 ? e = 2 : this.visum >= 25 && this.visum <= 34 ? e = 3 : this.visum >= 35 && this.visum <= 49 ? e = 4 : this.visum >= 50 && (e = 5), {
                            name: "0_" + 0 + "_" + 0,
                            className: "color-" + e
                        }
                    }
                }
            },
            Ku = Wu,
            Uu = Object(d["a"])(Ku, Eu, Gu, !1, null, null, null),
            $u = Uu.exports,
            qu = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "driver-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image.name + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-driver",
                    class: e.image.className
                }, [t("span", {
                    staticClass: "birthday"
                }, [e._v(e._s(e.birthday))]), t("span", {
                    staticClass: "licence-number"
                }, [e._v(e._s(e.licenceNumber))]), t("span", {
                    staticClass: "authority"
                }, [e._v(e._s(e.authority))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))]), t("div", {
                    staticClass: "licences-available"
                }, [1 === parseInt(e.licence.type) ? t("div", {
                    staticClass: "licences-licence"
                }, [t("img", {
                    staticClass: "driver-licence-2",
                    class: {
                        disabled: !e.licence.licences.includes(12)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_2_0.png",
                        alt: "Car"
                    }
                }), t("img", {
                    staticClass: "driver-licence-3",
                    class: {
                        disabled: !e.licence.licences.includes(13)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_3_0.png",
                        alt: "truck"
                    }
                }), t("img", {
                    staticClass: "driver-licence-4",
                    class: {
                        disabled: !e.licence.licences.includes(14)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_4_0.png",
                        alt: "motorcycle"
                    }
                })]) : e._e(), 4 === parseInt(e.licence.type) ? t("div", {
                    staticClass: "licences-licence"
                }, [t("img", {
                    staticClass: "driver-licence-6",
                    class: {
                        disabled: !e.licence.licences.includes(16)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_6_0.png",
                        alt: "helicopter"
                    }
                }), t("img", {
                    staticClass: "driver-licence-7",
                    class: {
                        disabled: !e.licence.licences.includes(17)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_7_0.png",
                        alt: "plane"
                    }
                })]) : e._e(), 5 === parseInt(e.licence.type) ? t("div", {
                    staticClass: "licences-licence"
                }, [t("img", {
                    staticClass: "driver-licence-7-4",
                    class: {
                        disabled: !e.licence.licences.includes(17)
                    },
                    attrs: {
                        src: "images/hud/licences/" + e.licence.type + "_7_0.png",
                        alt: "boat"
                    }
                })]) : e._e()])])])
            },
            Ju = [],
            Zu = {
                name: "DriverCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    image: function() {
                        return {
                            name: "12_0_0",
                            className: "licence-driver-" + parseInt(this.licence.type)
                        }
                    },
                    birthday: function() {
                        return this.licence.data[0].birthday
                    },
                    licenceNumber: function() {
                        return this.licence.data[0].dateofsign
                    },
                    authority: function() {
                        return this.licence.data[0].authority
                    },
                    signature: function() {
                        return this.licence.data[0].firstname[0] + ". " + this.licence.data[0].lastname
                    },
                    licenceSubs: function() {
                        return this.licence.licences
                    }
                }
            },
            Xu = Zu,
            Yu = Object(d["a"])(Xu, qu, Ju, !1, null, "5c87dd71", null),
            Qu = Yu.exports,
            em = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "first-aid-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-first-aid"
                }, [t("span", {
                    staticClass: "firstname"
                }, [e._v(e._s(e.firstname))]), t("span", {
                    staticClass: "lastname"
                }, [e._v(e._s(e.lastname))]), t("span", {
                    staticClass: "birthday"
                }, [e._v(e._s(e.birthday))]), t("span", {
                    staticClass: "valid-since"
                }, [e._v(e._s(e.validSince))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))])])])
            },
            tm = [],
            am = {
                name: "FirstAidCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    image: function() {
                        return parseInt(this.licence.type) + "_0_0"
                    },
                    firstname: function() {
                        return this.licence.data[0].firstname
                    },
                    lastname: function() {
                        return this.licence.data[0].lastname
                    },
                    birthday: function() {
                        return this.licence.data[0].birthday
                    },
                    validSince: function() {
                        return this.licence.data[0].dateofsign
                    },
                    signature: function() {
                        return this.licence.data[0].firstname[0] + ". " + this.licence.data[0].lastname
                    }
                }
            },
            im = am,
            sm = Object(d["a"])(im, em, tm, !1, null, "72093368", null),
            nm = sm.exports,
            rm = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "weapon-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-weapon"
                }, [t("span", {
                    staticClass: "firstname"
                }, [e._v(e._s(e.firstname))]), t("span", {
                    staticClass: "lastname"
                }, [e._v(e._s(e.lastname))]), t("span", {
                    staticClass: "weapon-type"
                }, [e._v(e._s(e.weaponType))]), t("span", {
                    staticClass: "weapon-number"
                }, [e._v(e._s(e.weaponNumber))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))])])])
            },
            om = [],
            cm = {
                name: "WeaponCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    image: function() {
                        return parseInt(this.licence.type) + "_0_0"
                    },
                    firstname: function() {
                        return this.licence.data[0]
                    },
                    lastname: function() {
                        return this.licence.data[1]
                    },
                    weaponType: function() {
                        return this.licence.data[2]
                    },
                    weaponNumber: function() {
                        return this.licence.data[3]
                    },
                    signature: function() {
                        return this.licence.data[0][0] + ". " + this.licence.data[1]
                    }
                }
            },
            lm = cm,
            um = Object(d["a"])(lm, rm, om, !1, null, "028e1761", null),
            mm = um.exports,
            dm = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "duty-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-duty"
                }, [t("span", {
                    staticClass: "rank"
                }, [e._v(e._s(e.rank))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))]), t("span", {
                    staticClass: "dutynumber"
                }, [e._v(e._s(e.dutyNumber))])]), t("img", {
                    staticClass: "team-image",
                    attrs: {
                        src: "images/teams/" + e.teamImage + ".png",
                        alt: ""
                    }
                })])
            },
            hm = [],
            _m = {
                name: "DutyCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    image: function() {
                        return parseInt(this.licence.type) + "_0_0"
                    },
                    rank: function() {
                        return this.licence.data[1]
                    },
                    signature: function() {
                        return "S. Bauer"
                    },
                    teamId: function() {
                        return this.licence.data[0]
                    },
                    dutyNumber: function() {
                        return this.licence.data[2]
                    },
                    teamImage: function() {
                        return this.teamId
                    }
                }
            },
            pm = _m,
            vm = Object(d["a"])(pm, dm, hm, !1, null, "40390a8f", null),
            fm = vm.exports,
            bm = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "lawyer-card"
                }, [t("img", {
                    attrs: {
                        src: "images/hud/licences/" + e.image + ".png",
                        alt: ""
                    }
                }), t("div", {
                    staticClass: "licence-lawyer"
                }, [t("span", {
                    staticClass: "firstname"
                }, [e._v(e._s(e.firstname))]), t("span", {
                    staticClass: "lastname"
                }, [e._v(e._s(e.lastname))]), t("span", {
                    staticClass: "birthday"
                }, [e._v(e._s(e.birthday))]), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(e.signature))])])])
            },
            gm = [],
            ym = {
                name: "LawyerCard",
                props: {
                    licence: {
                        type: Object,
                        required: !0,
                        default: {
                            type: 0,
                            data: [],
                            licences: []
                        }
                    }
                },
                computed: {
                    image: function() {
                        return parseInt(this.licence.type) + "_0_0"
                    },
                    firstname: function() {
                        return this.licence.data[0]
                    },
                    lastname: function() {
                        return this.licence.data[1]
                    },
                    birthday: function() {
                        return this.licence.data[2]
                    },
                    signature: function() {
                        return this.licence.data[0][0] + ". " + this.licence.data[1]
                    }
                }
            },
            Cm = ym,
            km = Object(d["a"])(Cm, bm, gm, !1, null, "3c707c69", null),
            wm = km.exports,
            Sm = {
                name: "Licence",
                components: {
                    LawyerCard: wm,
                    DutyCard: fm,
                    WeaponCard: mm,
                    FirstAidCard: nm,
                    DriverCard: Qu,
                    IdentityCard: $u
                },
                data: function() {
                    return {
                        teamData: null,
                        licences: [],
                        id: 0
                    }
                },
                methods: {
                    remove: function(e) {
                        var t = this.licences.indexOf(e);
                        this.licences.splice(t, 1)
                    },
                    displayLicence: function(e, t, a) {
                        console.log(t, a)
                        var i = {
                            type: e,
                            licences: JSON.parse(t),
                            data: JSON.parse(a),
                            id: this.id++
                        };
                       this.licences.unshift(i), this.dev ? setTimeout(this.remove.bind(null, i), 1e7) : setTimeout(this.remove.bind(null, i), 1e4)
                    }
                },
                created: function() {
                    var e = this;
    
    
                    e.addEvent("DisplayLicence", e.displayLicence)
                    
                }
            },
            Mm = Sm,
            xm = (a("aa75"), a("13b0"), Object(d["a"])(Mm, Ru, Vu, !1, null, "597b56d3", null)),
            Pm = xm.exports,
            Tm = function() {
                var e = this,
                    t = e._self._c;
                return e.visible ? t("div", {
                    attrs: {
                        id: "chat"
                    }
                }, [t("div", {
                    attrs: {
                        id: "chat-box"
                    }
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.message,
                        expression: "message"
                    }],
                    ref: "chatInputBox",
                    attrs: {
                        type: "text",
                        id: "chat-input-box",
                        autocomplete: "false"
                    },
                    domProps: {
                        value: e.message
                    },
                    on: {
                        keydown: [function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.sendChatMessage.apply(null, arguments)
                        }, function(t) {
                            return t.type.indexOf("key") || 38 === t.keyCode ? e.onUp.apply(null, arguments) : null
                        }, function(t) {
                            return t.type.indexOf("key") || 40 === t.keyCode ? e.onDown.apply(null, arguments) : null
                        }],
                        keyup: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "esc", 27, t.key, ["Esc", "Escape"]) ? null : e.close.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.message = t.target.value)
                        }
                    }
                }), t("button", {
                    staticClass: "btn btn-primary",
                    on: {
                        click: e.sendChatMessage
                    }
                }, [t("i", {
                    staticClass: "mdi mdi-send"
                })])])]) : e._e()
            },
            Fm = [],
            Bm = (a("2ca0"), {
                name: "Chat",
                data: function() {
                    return {
                        visible: !1,
                        message: "",
                        messages: ["test"],
                        index: -1
                    }
                },
                methods: {
                    showChat: function() {
                        var e = this;
                        this.visible = !0, setTimeout((function() {
                            var t = document.getElementById("chat-input-box");
                            t.focus(), e.setCursorPosition(t, t.value.length)
                        }), 10)
                    },
                    sendChatMessage: function() {
                        var e = this.message.trim();

                        if (e.length > 1 && e.startsWith("/")) {
                           fuckThis("onWindowClosed", "Chat");
                           this.emitServer("PlayerChat", e);
                           this.visible = !1;
                           this.messages.unshift(e);
                           this.message = "";
                           this.index = -1;
                        }
                    },
                    close: function() {
                        this.visible = !1;
                        fuckThis("onWindowClosed", "Chat");
                    },
                    onUp: function() {
                        var e = this;
                        this.messages.length && (this.index++, this.index >= this.messages.length && (this.index = this.messages.length - 1), this.message = this.messages[this.index], setTimeout((function() {
                            var t = document.getElementById("chat-input-box");
                            t.focus(), e.setCursorPosition(t, t.value.length)
                        }), 10))
                    },
                    onDown: function() {
                        var e = this;
                        this.messages.length && (this.index--, this.index <= 0 && (this.index = 0), this.message = this.messages[this.index], setTimeout((function() {
                            var t = document.getElementById("chat-input-box");
                            t.focus(), e.setCursorPosition(t, t.value.length)
                        }), 10))
                    },
                    setCursorPosition: function(e, t) {
                        e.focus(), e.setSelectionRange(t, t)
                    }
                },
                created: function() {
                    this.addEvent("ShowChat", this.showChat)
                },
                mounted: function() {}
            }),
            Im = Bm,
            Am = (a("61b6"), Object(d["a"])(Im, Tm, Fm, !1, null, null, null)),
            Dm = Am.exports,
            Nm = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "confirm-box"
                }, [t("div", {
                    staticClass: "confirm-box-header"
                }, [t("div", {
                    staticClass: "confirm-box-header-title"
                }, [e._v(e._s(e.confirmdata.t))]), t("div", {
                    staticClass: "confirm-close-box",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "confirm-box-body"
                }, [t("div", {
                    staticClass: "confirm-box-body-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.firstButton
                    }
                }, [e._v(e._s(e.confirmdata.ft))]), t("CoreButton", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.confirmdata.st,
                        expression: "confirmdata.st != ''"
                    }],
                    staticClass: "danger",
                    on: {
                        click: e.secondButton
                    }
                }, [e._v(e._s(e.confirmdata.st))])], 1)])])
            },
            Om = [],
            Lm = {
                name: "Confirm",
                components: {
                    CoreButton: x
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        confirmdata: JSON.parse(this.data)
                    }
                },
                methods: {
                    firstButton: function() {

                        if (this.confirmdata.dd) {
                            this.emitServer(this.confirmdata.fe, parseInt(this.confirmdata.d), this.confirmdata.dd);
                            this.hide()
                            return;

                        }

                        void 0 != this.confirmdata.d ? this.emitServer(this.confirmdata.fe, parseInt(this.confirmdata.d)) : this.emitServer(this.confirmdata.fe), this.hide()
                    },
                    secondButton: function() {
                        "" != this.confirmdata.se && (void 0 != this.confirmdata.d2 ? this.emitServer(this.confirmdata.se, parseInt(this.confirmdata.d2)) : this.emitServer(this.confirmdata.se)), this.hide()
                    },
                    close: function() {
                        this.hide()
                    }
                }
            },
            Hm = Lm,
            zm = (a("4272"), Object(d["a"])(Hm, Nm, Om, !1, null, "ddc9e596", null)),
            jm = zm.exports,
            Rm = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-prompt"
                }, [t("div", {
                    staticClass: "core-prompt-title"
                }, [e._v(e._s(e.inputdata.t))]), t("div", {
                    staticClass: "core-prompt-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    nativeOn: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.send.apply(null, arguments)
                        }
                    },
                    model: {
                        value: e.input,
                        callback: function(t) {
                            e.input = t
                        },
                        expression: "input"
                    }
                })], 1), t("div", {
                    staticClass: "core-prompt-actions"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.send
                    }
                }, [e._v("Senden")]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: function(t) {
                            return e.close()
                        }
                    }
                }, [e._v("Abbrechen")])], 1)])
            },
            Vm = [],
            Em = {
                name: "Input",
                components: {
                    CoreButton: x,
                    CoreInput: A
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        inputdata: JSON.parse(this.data),
                        input: ""
                    }
                },
                methods: {
                    send: function() {
                        var e = this.input.trim();
                        e && (void 0 != this.inputdata.d ? isNaN(e) ? this.emitServer(this.inputdata.e, e, this.inputdata.d) : e >= 1 && this.emitServer(this.inputdata.e, parseInt(e), this.inputdata.d) : this.emitServer(this.inputdata.e, e), this.hide())
                    },
                    close: function() {
                        void 0 !== this.inputdata.c && this.emitServer(this.inputdata.c), this.hide()
                    }
                }
            },
            Gm = Em,
            Wm = (a("5c9b"), Object(d["a"])(Gm, Rm, Vm, !1, null, null, null)),
            Km = Wm.exports,
            Um = function() {
                var e = this,
                    t = e._self._c;
                return t("transition", {
                    attrs: {
                        name: "slide"
                    }
                }, [t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "phone-hud"
                }, [t("div", {
                    staticClass: "phone-case"
                }, [t("div", {
                    staticClass: "phone-screen"
                }, [t("div", {
                    staticClass: "phone-screen-content"
                }, [t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.toast,
                        expression: "toast"
                    }],
                    staticClass: "toast",
                    staticStyle: {
                        "z-index": "100 !important",
                        bottom: "revert !important",
                        "background-color": "#39C0D8"
                    }
                }, [e._v(" " + e._s(e.toast) + " ")])]), t("v-ons-navigator", {
                    attrs: {
                        animation: "slide",
                        "page-stack": e.pageStack
                    },
                    on: {
                        "push-page": e.pushPage,
                        "back-page": e.backPage,
                        "home-page": e.homePage,
                        "show-toast": e.showToast
                    }
                })], 1)])])])])
            },
            $m = [],
            qm = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("div", {
                    staticClass: "phone-homeapp",
                    style: e.getWallpaperImage
                }, [t("div", {
                    staticClass: "phone-homeapp-details"
                }, [t("div", {
                    staticClass: "phone-signal"
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:signal"
                    }
                })], 1), t("div", {
                    staticClass: "phone-battery-time ml-auto"
                }, [t("div", {
                    staticClass: "phone-battery"
                }, [e._v(" 95% "), t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:battery-three-quarters"
                    }
                })], 1)])]), t("div", {
                    staticClass: "phone-homeapp-time"
                }, [t("div", {
                    staticClass: "phone-time"
                }, [e._v(" " + e._s(e.getTime) + " ")]), t("div", {
                    staticClass: "phone-date"
                }, [e._v(" " + e._s(e.getDate) + " ")])]), t("div", {
                    staticClass: "phone-homeapp-content"
                }, e._l(e.apps, (function(a) {
                    return t("div", {
                        key: a.name,
                        staticClass: "phone-homeapp-content-app",
                        on: {
                            click: function(t) {
                                return e.openApp(a.app)
                            }
                        }
                    }, [t("img", {
                        staticClass: "app-icon",
                        attrs: {
                            src: a.icon,
                            alt: ""
                        }
                    }), t("div", {
                        staticClass: "app-name"
                    }, [e._v(e._s(a.name))])])
                })), 0)])])
            },
            Jm = [],
            Zm = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "callmainapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "callmainapp-header center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticClass: "callmainapp-back-icon",
                    attrs: {
                        icon: "ion-navicon, material:arrow-left"
                    }
                })], 1), e._v(" Telefon ")], 1)]), t("v-ons-tabbar", {
                    attrs: {
                        position: "top",
                        index: 0,
                        tabs: e.tabs
                    }
                })], 1)
            },
            Xm = [],
            Ym = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "callnumberapp"
                }, [t("div", {
                    staticClass: "callnumberapp-input"
                }, [t("p", [e._v("Nummer wählen:")]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.number,
                        expression: "number"
                    }],
                    staticStyle: {
                        "text-align": "center",
                        "margin-bottom": ".5rem"
                    },
                    attrs: {
                        tabindex: "-1"
                    },
                    domProps: {
                        value: e.number
                    },
                    on: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.call.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.number = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "callnumberapp-buttons"
                }, [t("div", {
                    staticClass: "callnumberapp-row"
                }, [t("span", {
                    on: {
                        click: function(t) {
                            return e.add(1)
                        }
                    }
                }, [e._v("1")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(2)
                        }
                    }
                }, [e._v("2")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(3)
                        }
                    }
                }, [e._v("3")])]), t("div", {
                    staticClass: "callnumberapp-row"
                }, [t("span", {
                    on: {
                        click: function(t) {
                            return e.add(4)
                        }
                    }
                }, [e._v("4")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(5)
                        }
                    }
                }, [e._v("5")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(6)
                        }
                    }
                }, [e._v("6")])]), t("div", {
                    staticClass: "callnumberapp-row"
                }, [t("span", {
                    on: {
                        click: function(t) {
                            return e.add(7)
                        }
                    }
                }, [e._v("7")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(8)
                        }
                    }
                }, [e._v("8")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(9)
                        }
                    }
                }, [e._v("9")])]), t("div", {
                    staticClass: "callnumberapp-row"
                }, [t("span", {
                    on: {
                        click: function(t) {
                            return e.clear()
                        }
                    }
                }, [e._v("C")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(0)
                        }
                    }
                }, [e._v("0")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.back()
                        }
                    }
                }, [e._v("↩")])])]), t("v-ons-fab", {
                    attrs: {
                        position: "bottom center"
                    },
                    on: {
                        click: e.call
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "phone"
                    }
                })], 1)], 1)
            },
            Qm = [],
            ed = {
                name: "CallNumberApp",
                data: function() {
                    return {
                        number: ""
                    }
                },
                methods: {
                    call: function() {
                        var e = parseInt(this.number);
                        isNaN(e) || e < 1 || this.emitServer("Call", e)
                    },
                    formatCaller: function() {
                        return void 0 == Bn.contacts[this.number] ? this.number : Bn.contacts[this.number].n
                    },
                    add: function(e) {
                        this.number += e
                    },
                    back: function() {
                        this.number = this.number.slice(0, -1)
                    },
                    clear: function() {
                        this.number = ""
                    }
                }
            },
            td = ed,
            ad = (a("ca78"), a("13bb"), Object(d["a"])(td, Ym, Qm, !1, null, "3a9c637e", null)),
            id = ad.exports,
            sd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "callhistoryapp"
                }, [t("v-ons-list", e._l(e.phoneHistory, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.t + a.n + a.d,
                        attrs: {
                            tappable: ""
                        },
                        on: {
                            click: function(t) {
                                return e.emitServer("Call", a.n)
                            }
                        }
                    }, [t("div", {
                        staticClass: "history-col first"
                    }, [t("div", {
                        staticClass: "callhistoryapp-icon"
                    }, [t("v-ons-icon", {
                        style: {
                            color: e.color(a)
                        },
                        attrs: {
                            icon: "phone",
                            size: "material: 1rem"
                        }
                    }), t("v-ons-icon", {
                        attrs: {
                            icon: e.outgoing(a),
                            size: "material: 1rem"
                        }
                    })], 1)]), t("div", {
                        staticClass: "history-col second"
                    }, [t("div", {
                        staticClass: "callhistoryapp-number"
                    }, [e._v(" " + e._s(e.formatCaller(a.n)) + " ")]), t("div", {
                        staticClass: "callhistoryapp-duration"
                    }, [e._v(" (" + e._s(e.duration(a)) + ") ")])]), t("div", {
                        staticClass: "history-col third"
                    }, [t("div", {
                        staticClass: "callhistoryapp-time"
                    }, [e._v(" " + e._s(a.t) + " ")])])])
                })), 1)], 1)
            },
            nd = [],
            rd = {
                name: "CallHistoryApp",
                data: function() {
                    return {
                        phoneHistory: [{
                            i: !1,
                            n: 405,
                            s: 1,
                            t: "24.02 16:55",
                            d: 69
                        }, {
                            i: !1,
                            n: 555,
                            s: 1,
                            t: "24.02 16:54",
                            d: 0
                        }]
                    }
                },
                methods: {
                    formatCaller: function(e) {
                        return void 0 == Bn.contacts[e] ? e : Bn.contacts[e].n
                    },
                    color: function(e) {
                        switch (e.s) {
                            case 0:
                            case 1:
                            case 3:
                                return "red";
                            case 2:
                                return "green"
                        }
                    },
                    duration: function(e) {
                        if (0 != e.d) {
                            var t = parseInt(e.d);
                            return (t - (t %= 60)) / 60 + (9 < t ? ":" : ":0") + t
                        }
                        switch (e.s) {
                            case 0:
                                return "besetzt";
                            case 1:
                                return "verpasst";
                            case 3:
                                return "weg gedrückt"
                        }
                    },
                    outgoing: function(e) {
                        return 0 == e.i ? "arrow-circle-left" : "arrow-circle-right"
                    }
                },
                created: function() {
                    this.phoneHistory = Bn.phoneHistory
                }
            },
            od = rd,
            cd = (a("3bbd"), Object(d["a"])(od, sd, nd, !1, null, "9dca2166", null)),
            ld = cd.exports,
            ud = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "callapp"
                }, [0 == e.status ? t("div", {
                    staticClass: "callapp-status"
                }, [e._v("Wird gewählt")]) : 1 == e.status ? t("div", {
                    staticClass: "callapp-status"
                }, [e._v("Anruf von")]) : 2 == e.status ? t("div", {
                    staticClass: "callapp-status"
                }, [e._v("Anruf Aktiv "), t("br"), e._v(" " + e._s(e.formatTime) + " ")]) : e._e(), t("div", {
                    staticClass: "callapp-caller"
                }, [e._v(e._s(e.formatCaller()))]), t("v-ons-fab", {
                    staticClass: "callapp-decline",
                    class: {
                        center: 1 != e.status
                    },
                    attrs: {
                        position: "bottom " + (1 == e.status ? "left" : "center")
                    },
                    on: {
                        click: function(t) {
                            return e.emitServer("CancelCall")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "phone-slash"
                    }
                })], 1), 1 == e.status ? t("v-ons-fab", {
                    staticClass: "callapp-accept",
                    attrs: {
                        position: "bottom right"
                    },
                    on: {
                        click: function(t) {
                            return e.emitServer("AcceptCall")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "phone"
                    }
                })], 1) : e._e()], 1)
            },
            md = [],
            dd = {
                name: "CallApp",
                data: function() {
                    return {
                        number: 0,
                        status: 1,
                        mute: !0,
                        time: 0
                    }
                },
                methods: {
                    formatCaller: function() {
                        return void 0 == Bn.contacts[this.number] ? this.number : Bn.contacts[this.number].n
                    },
                    phoneTimeChange: function() {
                        -1 != Bn.activeCallTime && (Bn.activeCallTime++, this.time++)
                    }
                },
                mounted: function() {
                    null == Bn.activeCallInterval || clearInterval(Bn.activeCallInterval), Bn.activeCallInterval = setInterval(this.phoneTimeChange, 1e3), this.time = Bn.activeCallTime
                },
                computed: {
                    formatTime: function() {
                        var e = parseInt(this.time / 60),
                            t = this.time % 60;
                        return e + ":" + t
                    }
                }
            },
            hd = dd,
            _d = (a("2f99"), Object(d["a"])(hd, ud, md, !1, null, "7972fcc0", null)),
            pd = _d.exports,
            vd = {
                name: "CallMainApp",
                data: function() {
                    return {
                        tabs: [{
                            label: "Anrufen",
                            page: id,
                            icon: "phone"
                        }, {
                            label: "Verlauf",
                            page: ld,
                            icon: "history"
                        }]
                    }
                },
                created: function() {
                    Bn.activeCall && this.$emit("push-page", {
                        extends: pd,
                        data: function() {
                            return {
                                number: Bn.activeCall,
                                status: 2
                            }
                        }
                    })
                }
            },
            fd = vd,
            bd = (a("7c45"), a("e7f9"), Object(d["a"])(fd, Zm, Xm, !1, null, "d6551b08", null)),
            gd = bd.exports,
            yd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "contactapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center",
                    staticStyle: {
                        color: "#202124 !important"
                    }
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Kontakte ")], 1), t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    staticStyle: {
                        "margin-right": "-1.2rem"
                    },
                    on: {
                        click: function(t) {
                            e.searchOn = !e.searchOn
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:search",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("v-ons-toolbar-button", {
                    on: {
                        click: e.newContact
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:plus",
                        size: "12px, material: 1.1rem"
                    }
                })], 1)], 1)]), t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("input", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.searchOn,
                        expression: "searchOn"
                    }, {
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "input-field",
                    staticStyle: {
                        "margin-top": "-0.1vh !important"
                    },
                    attrs: {
                        placeholder: "Kontakt suchen"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                })]), t("v-ons-list", e._l(e.searchContacts, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        attrs: {
                            tappable: ""
                        },
                        on: {
                            click: function(t) {
                                return e.openContact(a)
                            }
                        }
                    }, [t("v-ons-icon", {
                        staticStyle: {
                            "padding-right": ".5rem",
                            color: "#1f1f21"
                        },
                        attrs: {
                            icon: "ion-navicon, material:address-book",
                            size: "12px, material: 2rem",
                            tabindex: "-1"
                        }
                    }), e._v(" " + e._s(a.n) + " ")], 1)
                })), 1)], 1)
            },
            Cd = [],
            kd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "displaycontactapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" " + e._s(e.contact.n) + " ")], 1), t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    staticClass: "clickable",
                    on: {
                        click: e.removeContact
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:trash",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), "" != e.contact.n && "" != e.contact.i ? t("v-ons-toolbar-button", {
                    staticClass: "clickable",
                    on: {
                        click: function(t) {
                            e.editMode = !e.editMode
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:pen",
                        size: "12px, material: 1.1rem"
                    }
                })], 1) : e._e()], 1)]), t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [e.editMode ? t("div", {
                    key: "input",
                    staticClass: "info mt-2"
                }, [t("v-ons-input", {
                    staticClass: "input-field displaycontactapp-input",
                    attrs: {
                        placeholder: "Name",
                        float: "",
                        maxlength: "25"
                    },
                    model: {
                        value: e.contact.n,
                        callback: function(t) {
                            e.$set(e.contact, "n", t)
                        },
                        expression: "contact.n"
                    }
                }), e.editMode ? t("v-ons-input", {
                    staticClass: "input-field displaycontactapp-input",
                    attrs: {
                        placeholder: "Nummer",
                        float: "",
                        maxlength: "8"
                    },
                    model: {
                        value: e.contact.i,
                        callback: function(t) {
                            e.$set(e.contact, "i", e._n(t))
                        },
                        expression: "contact.i"
                    }
                }) : e._e(), t("textarea", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.contact.t,
                        expression: "contact.t"
                    }],
                    attrs: {
                        rows: "9",
                        cols: "40",
                        maxlength: "50"
                    },
                    domProps: {
                        value: e.contact.t
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || e.$set(e.contact, "t", t.target.value)
                        }
                    }
                })], 1) : t("div", {
                    key: "info",
                    staticClass: "info"
                }, [t("p", [t("b", [e._v("Name:")]), t("br"), e._v(" " + e._s(e.contact.n))]), t("p", [t("b", [e._v("Nummer:")]), t("br"), e._v(" " + e._s(e.contact.i))]), t("p", [t("b", [e._v("Notiz:")]), t("br"), e._v(e._s(e.contact.t))])])]), e.editMode ? t("v-ons-fab", {
                    attrs: {
                        ripple: "",
                        position: "bottom right"
                    },
                    on: {
                        click: e.saveContact
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "save"
                    }
                })], 1) : t("v-ons-fab", {
                    attrs: {
                        ripple: "",
                        position: "bottom right"
                    },
                    on: {
                        click: function(t) {
                            return e.emitServer("Call", e.contact.i)
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "phone"
                    }
                })], 1), t("v-ons-fab", {
                    attrs: {
                        ripple: "",
                        position: "bottom left"
                    },
                    on: {
                        click: e.openSmsChat
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "comment"
                    }
                })], 1)], 1)
            },
            wd = [],
            Sd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "smschatapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" " + e._s(e.formatCaller(e.chat.n)) + " ")], 1), t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: e.deleteSmsChat
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:trash",
                        size: "12px, material: 1.1rem"
                    }
                })], 1)], 1)]), t("div", {
                    attrs: {
                        id: "sms-list"
                    }
                }, e._l(e.orderedSmsList, (function(a, i) {
                    return t("div", {
                        key: i
                    }, [t("span", {
                        staticClass: "sms",
                        class: {
                            own: e.isOwn(a.n)
                        },
                        on: {
                            click: function(t) {
                                return e.copyToClipBoard(a.m)
                            }
                        }
                    }, [e._v(" " + e._s(a.m.startsWith("GPS??") ? "" : a.m) + " "), a.m.startsWith("GPS??") ? t("div", {
                        staticClass: "mapimg",
                        style: e.mapCoordinates(a.m),
                        on: {
                            click: function(t) {
                                return e.setGPS(a.m)
                            }
                        }
                    }) : e._e(), t("br"), t("span", {
                        staticStyle: {
                            "font-size": "0.95vh",
                            "font-weight": "lighter",
                            "!important text-align": "right"
                        }
                    }, [e._v(" " + e._s(e.toDate(a.d)) + " ")])])])
                })), 0), t("v-ons-bottom-toolbar", [t("CoreButton", {
                    staticClass: "selectemoji fas fa-map-marker-alt fa-1x",
                    on: {
                        click: e.sendGPS
                    }
                }), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.sms,
                        expression: "sms"
                    }],
                    staticClass: "smssendinput",
                    staticStyle: {
                        width: "90%"
                    },
                    attrs: {
                        maxlength: "500",
                        placeholder: "Nachricht..."
                    },
                    domProps: {
                        value: e.sms
                    },
                    on: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.sendSms.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.sms = t.target.value)
                        }
                    }
                })], 1)], 1)
            },
            Md = [],
            xd = {
                name: "SmsChatApp",
                components: {
                    CoreButton: x
                },
                data: function() {
                    return {
                        sms: "",
                        smsList: [],
                        chat: {},
                        options: {
                            weekday: "long",
                            year: "numeric",
                            month: "numeric",
                            day: "numeric",
                            hour: "numeric",
                            minute: "numeric"
                        },
                        lastGPSSend: 0,
                        lastSMSSend: 0
                    }
                },
                methods: {
                    copyToClipBoard: function(e) {
                        e.startsWith("GPS??") || (this.emit("CopyToClipboard", e), this.$emit("show-toast", "Nachricht kopiert!"))
                    },
                    setGPS: function(e) {
                        var t = e.split("??"),
                            a = parseInt(t[1]),
                            i = parseInt(t[2]);
                        this.emit("SetGPS", a, i)
                    },
                    mapCoordinates: function(e) {
                        var t, a = e.split("??"),
                            i = 45.7;
                        a[1] > 0 ? i += a[1] / 120 : (t = a[1] / 120, i -= -1 * t);
                        var s = 67.6;
                        return a[2] > 0 ? s -= a[2] / 120 : (t = a[2] / 120, s += -1 * t), {
                            backgroundPosition: i + "%" + s + "%"
                        }
                    },
                    toDate: function(e) {
                        var t = new Date(1e3 * e);
                        return t.toLocaleDateString("de-DE", this.options)
                    },
                    sendGPS: function() {
                        var e = Date.now();
                        e - this.lastGPSSend > 5e3 && (this.lastGPSSend = e, this.emit("GetPlayerPosForSMS"))
                    },
                    sendPlayerPos: function(e) {
                        var t = "GPS??" + parseInt(e.x) + "??" + parseInt(e.y);
                        this.smsList.length ? (this.emitServer("SendChat", this.chat.i, t), Bn.smsChats[this.chat.i].push({
                            n: Bn.ownNumber,
                            m: t,
                            d: Date.now() / 1e3
                        })) : (this.emitServer("CreateChat", this.chat.n, t), this.smsList = [{
                            n: Bn.ownNumber,
                            m: t,
                            d: Date.now() / 1e3
                        }]), this.scrollToBottom()
                    },
                    sendSms: function() {
                        var e = Date.now();
                        if (e - this.lastSMSSend > 1e3) {
                            this.lastSMSSend = e;
                            var t = this.sms.trim();
                            if ("" == t) return;
                            this.smsList.length ? (this.emitServer("SendChat", this.chat.i, t), this.emit("UpdateView", "UpdateChatDate", [this.chat.i]), Bn.smsChats[this.chat.i].push({
                                n: Bn.ownNumber,
                                m: t,
                                d: Date.now() / 1e3
                            })) : (this.emitServer("CreateChat", this.chat.n, t), this.smsList = [{
                                n: Bn.ownNumber,
                                m: t,
                                d: Date.now() / 1e3
                            }]), this.scrollToBottom(), this.sms = ""
                        }
                    },
                    deleteSmsChat: function() {
                        var e = this;
                        Bn.smsChats[this.chat.i] = [], Bn.smsChatList = Bn.smsChatList.filter((function(t) {
                            return t.i != e.chat.i
                        })), this.emitServer("RmChat", this.chat.i), this.$emit("home-page")
                    },
                    scrollToBottom: function() {
                        this.$nextTick((function() {
                            var e = document.getElementById("sms-list").childNodes;
                            e.length && e[e.length - 1].scrollIntoView()
                        }))
                    },
                    makeChat: function(e) {
                        Bn.smsChats[e] = this.smsList, this.chat.i = e
                    },
                    rsOpenRmChat: function() {
                        this.$emit("back-page")
                    },
                    formatCaller: function(e) {
                        return void 0 == Bn.contacts[e] ? e : Bn.contacts[e].n
                    },
                    isOwn: function(e) {
                        return e == Bn.ownNumber
                    },
                    showGps: function(e) {
                        var t = e.split(";");
                        this.emit("SetGPS", t[0], t[1])
                    }
                },
                mounted: function() {
                    this.scrollToBottom(), this.addEvent("MakeChat", this.makeChat), this.addEvent("RsOpenRmChat", this.rsOpenRmChat), this.addEvent("SendPlayerPosForSMS", this.sendPlayerPos)
                },
                computed: {
                    orderedSmsList: function() {
                        var e = this.smsList;
                        return e.sort((function(e, t) {
                            var a = e.d,
                                i = t.d;
                            return a < i ? -1 : a > i ? 1 : 0
                        }))
                    }
                }
            },
            Pd = xd,
            Td = (a("9df5"), a("681e"), Object(d["a"])(Pd, Sd, Md, !1, null, "723987bd", null)),
            Fd = Td.exports,
            Bd = {
                name: "DisplayContactApp",
                data: function() {
                    return {
                        editMode: !1,
                        contact: {},
                        oldNumber: ""
                    }
                },
                methods: {
                    saveContact: function() {
                        void 0 == Bn.contacts[this.contact.i] || "" != this.oldNumber ? ("" == this.oldNumber ? this.addContact() : this.editContact(), this.$emit("back-page")) : this.$emit("show-toast", "Nummer bereits vorhanden")
                    },
                    addContact: function() {
                        var e = parseInt(this.contact.i);
                        if (!isNaN(e) && !(e < 1)) {
                            var t = this.contact.n.trim();
                            "" != t.length && (this.emitServer("AddContact", e, t, this.contact.t), this.oldNumber = e, Bn.contacts[e] = {
                                i: e,
                                n: t,
                                t: this.contact.t
                            }, Bn.contactList.push({
                                i: e,
                                n: t,
                                t: this.contact.t
                            }))
                        }
                    },
                    editContact: function() {
                        var e = parseInt(this.contact.i);
                        if (!isNaN(e) && !(e < 1)) {
                            var t = this.contact.n.trim();
                            "" != t.length && this.emitServer("EditContact", this.oldNumber, e, t, this.contact.t)
                        }
                    },
                    removeContact: function() {
                        var e = this;
                        delete Bn.contacts[this.contact.i], Bn.contactList = Bn.contactList.filter((function(t) {
                            return t.i != e.contact.i
                        })), this.emitServer("RemoveContact", this.contact.i), this.$emit("home-page")
                    },
                    openSmsChat: function() {
                        var e = this.contact,
                            t = Bn.smsChatList.find((function(t) {
                                return t.n == e.i
                            }));
                        if (t) {
                            var a = Bn.smsChats[t.i];
                            this.$emit("push-page", {
                                extends: Fd,
                                data: function() {
                                    return {
                                        smsList: a,
                                        chat: {
                                            n: e.i,
                                            i: t.i
                                        }
                                    }
                                }
                            })
                        } else this.$emit("push-page", {
                            extends: Fd,
                            data: function() {
                                return {
                                    chat: {
                                        n: e.i
                                    }
                                }
                            }
                        })
                    }
                },
                created: function() {
                    this.oldNumber = this.contact.i
                }
            },
            Id = Bd,
            Ad = (a("84fb"), Object(d["a"])(Id, kd, wd, !1, null, null, null)),
            Dd = Ad.exports,
            Nd = {
                name: "ContactApp",
                data: function() {
                    return {
                        contactList: [],
                        search: "",
                        searchOn: !1
                    }
                },
                methods: {
                    openContact: function(e) {
                        this.$emit("push-page", {
                            extends: Dd,
                            data: function() {
                                return {
                                    contact: e
                                }
                            }
                        })
                    },
                    newContact: function() {
                        this.$emit("push-page", {
                            extends: Dd,
                            data: function() {
                                return {
                                    contact: {
                                        i: "",
                                        n: "",
                                        t: ""
                                    },
                                    editMode: !0
                                }
                            }
                        })
                    }
                },
                computed: {
                    searchContacts: function() {
                        var e = this,
                            t = this.contactList.filter((function(t) {
                                return t.n.toLowerCase().includes(e.search.toLowerCase()) || t.t.toLowerCase().includes(e.search.toLowerCase())
                            })),
                            a = t.sort((function(e, t) {
                                var a = e.n.toLowerCase(),
                                    i = t.n.toLowerCase();
                                return a < i ? -1 : a > i ? 1 : 0
                            }));
                        return a
                    }
                },
                created: function() {
                    null != Bn.contacts && (this.contactList = Bn.contactList)
                }
            },
            Od = Nd,
            Ld = (a("1b9b"), Object(d["a"])(Od, yd, Cd, !1, null, null, null)),
            Hd = Ld.exports,
            zd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "smsapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Nachrichten ")], 1), t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: e.newSms
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:plus",
                        size: "12px, material: 1.1rem"
                    }
                })], 1)], 1)]), t("v-ons-list", e._l(e.orderedSmsChatList, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        attrs: {
                            tappable: ""
                        },
                        on: {
                            click: function(t) {
                                return e.openChat(a)
                            }
                        }
                    }, [t("v-ons-icon", {
                        staticClass: "smschaticon",
                        staticStyle: {
                            "padding-right": ".5rem",
                            color: "#1f1f21"
                        },
                        attrs: {
                            icon: "ion-navicon, material:comments",
                            size: "12px, material: 2rem"
                        }
                    }), e._v(" " + e._s(e.formatCaller(a.n)) + " "), t("div", {
                        staticClass: "right",
                        staticStyle: {
                            "font-size": "0.8rem"
                        }
                    }, [e._v(e._s(e.toDate(a.d)))])], 1)
                })), 1)], 1)
            },
            jd = [],
            Rd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Neue Nachricht ")], 1)]), t("div", {
                    staticStyle: {
                        "margin-top": "1rem",
                        "text-align": "center",
                        "font-size": "1.5rem"
                    }
                }, [e._v(" Nachricht an:"), t("br"), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.number,
                        expression: "number"
                    }],
                    staticStyle: {
                        "text-align": "center",
                        height: "2.5vh",
                        "font-size": "1.5vh"
                    },
                    domProps: {
                        value: e.number
                    },
                    on: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.newSms.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.number = t.target.value)
                        }
                    }
                }), t("br"), t("br"), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(1)
                        }
                    }
                }, [e._v("1")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(2)
                        }
                    }
                }, [e._v("2")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(3)
                        }
                    }
                }, [e._v("3")]), t("br"), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(4)
                        }
                    }
                }, [e._v("4")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(5)
                        }
                    }
                }, [e._v("5")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(6)
                        }
                    }
                }, [e._v("6")]), t("br"), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(7)
                        }
                    }
                }, [e._v("7")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(8)
                        }
                    }
                }, [e._v("8")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(9)
                        }
                    }
                }, [e._v("9")]), t("br"), t("span", {
                    on: {
                        click: function(t) {
                            return e.clear()
                        }
                    }
                }, [e._v("C")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.add(0)
                        }
                    }
                }, [e._v("0")]), t("span", {
                    on: {
                        click: function(t) {
                            return e.back()
                        }
                    }
                }, [e._v("↩")]), t("br")]), t("v-ons-fab", {
                    attrs: {
                        position: "bottom center"
                    },
                    on: {
                        click: e.newSms
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "comments"
                    }
                })], 1)], 1)
            },
            Vd = [],
            Ed = {
                name: "SmsApp",
                data: function() {
                    return {
                        number: ""
                    }
                },
                methods: {
                    newSms: function() {
                        var e = parseInt(this.number);
                        if (!isNaN(e) && !(e < 1)) {
                            var t = Bn.smsChatList.filter((function(t) {
                                return t.n == e
                            }));
                            t.length ? (this.$emit("show-toast", "Chat bereits vorhanden"), this.$emit("back-page")) : this.$emit("push-page", {
                                extends: Fd,
                                data: function() {
                                    return {
                                        smsList: [],
                                        chat: {
                                            n: e
                                        }
                                    }
                                }
                            })
                        }
                    },
                    add: function(e) {
                        this.number += e
                    },
                    back: function() {
                        this.number = this.number.slice(0, -1)
                    },
                    clear: function() {
                        this.number = ""
                    }
                }
            },
            Gd = Ed,
            Wd = (a("0e54"), Object(d["a"])(Gd, Rd, Vd, !1, null, "5b7f8e44", null)),
            Kd = Wd.exports,
            Ud = {
                name: "SmsApp",
                data: function() {
                    return {
                        smsChatList: [],
                        requestedChat: {},
                        options: {
                            month: "numeric",
                            day: "numeric",
                            hour: "numeric",
                            minute: "numeric"
                        }
                    }
                },
                methods: {
                    openChat: function(e) {
                        var t = Bn.smsChats[e.i];
                        if (void 0 == t) return this.requestedChat = e, this.addEvent("RsChat", this.rsChat), this.emitServer("RqChat", e.i), void(this.dev && this.rsChat([{
                            n: 189,
                            m: "GPS??500??1000",
                            d: Date.now() / 1e3
                        }, {
                            n: 189,
                            m: "Hi alt",
                            d: Date.now() - 100
                        }, {
                            n: 187,
                            m: "Hi",
                            d: Date.now() / 1e3
                        }, {
                            n: 189,
                            m: "Hi",
                            d: Date.now() / 1e3
                        }]));
                        this.$emit("push-page", {
                            extends: Fd,
                            data: function() {
                                return {
                                    smsList: t,
                                    chat: e
                                }
                            }
                        })
                    },
                    newSms: function() {
                        this.$emit("push-page", {
                            extends: Kd
                        })
                    },
                    rsChats: function(e) {
                        this.smsChatList = JSON.parse(e), Bn.smsChatList = JSON.parse(e)
                    },
                    rsChat: function(e) {
                        Bn.smsChats[this.requestedChat.i] = JSON.parse(e), this.openChat(this.requestedChat)
                    },
                    formatCaller: function(e) {
                        return void 0 == Bn.contacts[e] ? e : Bn.contacts[e].n
                    },
                    testChat: function(e, t) {
                        this.smsChatList.push({
                            i: e,
                            n: t,
                            d: Date.now() / 1e3
                        })
                    },
                    rsRmChat: function(id, number, message, date) {
                        this.smsChatList.push({
                            i: id,
                            n: number,
                            m: message,
                            d: date
                        })
                    },
                    toDate: function(e) {
                        var t = new Date(1e3 * e);
                        return t.toLocaleDateString("de-DE", this.options)
                    },
                    updateChatDate: function(e) {
                        var t = this.smsChatList.findIndex((function(t) {
                            return t.i == e
                        }));
                        this.smsChatList[t].d = Date.now() / 1e3, Bn.smsChatList = this.smsChatList
                    }
                },
                created: function() {
                    Bn.smsChatList.length ? this.smsChatList = Bn.smsChatList : (this.emitServer("RqChats"), this.dev && this.rsChats([{
                        i: 1,
                        n: 189,
                        d: Date.now() / 1e3
                    }, {
                        i: 2,
                        n: 180,
                        d: Date.now() - 100
                    }])), this.addEvent("TestChat", this.testChat), this.addEvent("RsRmChat", this.rsRmChat), this.addEvent("RsChats", this.rsChats), this.addEvent("UpdateChatDate", this.updateChatDate), this.emitServer("RqChats")
                },
                computed: {
                    orderedSmsChatList: function() {
                        var e = this.smsChatList;
                        return e.sort((function(e, t) {
                            var a = e.d,
                                i = t.d;
                            return a > i ? -1 : a < i ? 1 : 0
                        }))
                    }
                }
            },
            $d = Ud,
            qd = (a("51fc"), Object(d["a"])($d, zd, jd, !1, null, "782d6144", null)),
            Jd = qd.exports,
            Zd = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "wareexportapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Exportpreise ")], 1), t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    staticStyle: {
                        "margin-right": "0rem"
                    },
                    on: {
                        click: function(t) {
                            e.searchOn = !e.searchOn
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:search",
                        size: "12px, material: 1.1rem"
                    }
                })], 1)], 1)]), t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("input", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.searchOn,
                        expression: "searchOn"
                    }, {
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "input-field",
                    staticStyle: {
                        width: "100%",
                        "margin-top": "-0.1vh !important"
                    },
                    attrs: {
                        placeholder: "Ware suchen",
                        tabindex: "-1"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                })]), t("v-ons-list", e._l(e.searchWare, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        on: {
                            click: function(t) {
                                return e.emitServer("findExport", a.i)
                            }
                        }
                    }, [t("div", {
                        staticClass: "ware-id"
                    }, [e._v(" " + e._s(a.name) + " ")]), t("div", {
                        staticClass: "ware-price"
                    }, [e._v(" " + e._s(a.p) + " $ ")])])
                })), 1), t("div", {
                    staticClass: "stand",
                    staticStyle: {
                        "text-align": "center",
                        margin: "1vh 0 !important",
                        "font-size": "1.3vh !important"
                    }
                }, [t("span", [e._v("Stand: ")]), t("span", [e._v(" " + e._s(e.getTime))])])], 1)
            },
            Xd = [],
            Yd = {
                name: "WareExport",
                data: function() {
                    return {
                        marketPrices: [],
                        priceId: 0,
                        itemData: null,
                        search: "",
                        searchOn: !1,
                        marketTag: 0,
                        marketLastUpdate: null
                    }
                },
                methods: {
                    rsPrices: function(ef, d) {
                        var t = JSON.parse(ef),
                            a = d;
                        this.marketPrices = t, this.marketTag = a, this.marketLastUpdate = new Date, Bn.marketPrices = this.marketPrices, Bn.marketTag = this.marketTag, Bn.marketLastUpdate = this.marketLastUpdate
                    },
                    formatMinutes: function() {
                        var e = this.marketLastUpdate.getMinutes();
                        return e < 10 && (e = "0" + e), e
                    }
                },
                computed: {
                    searchWare: function() {
                        var e = this;
                        return this.marketPrices.filter((function(t) {
                            return t.name.toLowerCase().includes(e.search.toLowerCase())
                        }))
                    },
                    getTime: function() {
                        return null == this.marketLastUpdate ? "nie" : "".concat(this.marketLastUpdate.getHours(), ":").concat(this.formatMinutes())
                    }
                },
                created: function() {
                    var e = this;
            e.addEvent("RsWareExportPrices", e.rsPrices), e.emitServer("RqWareExportPrices", Bn.marketTag)
                }
            },
            Qd = Yd,
            eh = (a("fcf6"), Object(d["a"])(Qd, Zd, Xd, !1, null, "6a106088", null)),
            th = eh.exports,
            ah = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "characterinfoapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Info ")], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Name ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.n) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Sozialstufe ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.l) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Nummer ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.p) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Fraktion ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.f) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Business ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.b) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Haus ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.h ? e.info.h : "Kein Haus") + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Job ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.info.j) + " ")])])], 1)], 1)
            },
            ih = [],
            sh = {
                name: "CharacterInfo",
                data: function() {
                    return {
                        name: "",
                        info: {
                            n: "",
                            l: 0,
                            p: 0,
                            h: 0,
                            j: 0
                        },
                        jobs: ["Arbeitslos", "Busfahrer", "Müllmann", "Farmer", "Trucker", "Postbote"],
                        team: {
                            1: "Zivilist",
                            2: "Vagos",
                            3: "LSPD",
                            4: "LCN",
                            5: "LSMC",
                            6: "ACLS",
                            7: "FIB",
                            10: "Scandinavian Tribe",
                            11: "18th Street",
                            12: "Grove",
                            13: "Ballas",
                            14: "DPOS",
                            15: "DMV",
                            16: "The Lost MC",
                            17: "Triaden",
                            18: "Uptown Rider",
                            19: "Kartell",
                            20: "Bounty Hunter Bloods",
                            21: "Hxxver Crips",
                            22: "Trucker",
                            23: "Downtown Cab Co.",
                            25: "Weazel News",
                            26: "Cayo Rebellen",
                            27: "US Army"
                        }
                    }
                },
                methods: {
                    rsInfo: function(e) {
                        this.info = JSON.parse(e)
                    }
                },
                created: function() {
                    this.addEvent("RsCharacterInfo", this.rsInfo), this.emitServer("RqCharacterInfo"), this.dev && this.rsInfo({
                        n: "Moses",
                        l: 23,
                        p: 4851,
                        h: 41,
                        j: 2,
                        f: 2
                    })
                }
            },
            nh = sh,
            rh = (a("09f7"), Object(d["a"])(nh, ah, ih, !1, null, "57054c4e", null)),
            oh = rh.exports,
            ch = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "serviceapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Service ")], 1)]), t("v-ons-list", e._l(e.possibleServices, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        attrs: {
                            tappable: ""
                        },
                        on: {
                            click: function(t) {
                                return e.openService(a)
                            }
                        }
                    }, [e._v(e._s(a.n) + " "), a.t ? t("span", {
                        staticStyle: {
                            "font-size": ".9rem",
                            "margin-left": "auto"
                        }
                    }, [e._v(" Nr. " + e._s(a.t) + " ")]) : e._e()])
                })), 1)], 1)
            },
            lh = [],
            uh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" " + e._s(e.service.n) + " ")], 1)]), t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("div", {
                    key: "input"
                }, [t("v-ons-input", {
                    staticClass: "input-field",
                    staticStyle: {
                        width: "75%"
                    },
                    attrs: {
                        placeholder: "Service",
                        float: "",
                        maxlength: "200",
                        tabindex: "-1"
                    },
                    model: {
                        value: e.serviceText,
                        callback: function(t) {
                            e.serviceText = t
                        },
                        expression: "serviceText"
                    }
                })], 1)]), t("v-ons-fab", {
                    staticStyle: {
                        "background-color": "#0000B2"
                    },
                    attrs: {
                        ripple: "",
                        position: "bottom right"
                    },
                    on: {
                        click: e.sendService
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "md-plus"
                    }
                })], 1), t("v-ons-fab", {
                    staticStyle: {
                        "background-color": "#0000B2"
                    },
                    attrs: {
                        ripple: "",
                        position: "bottom left"
                    },
                    on: {
                        click: e.cancelService
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "md-delete"
                    }
                })], 1)], 1)
            },
            mh = [],
            dh = {
                name: "AddServiceApp",
                data: function() {
                    return {
                        service: {},
                        serviceText: ""
                    }
                },
                methods: {
                    sendService: function() {
                        "" != this.serviceText && (this.emitServer("SendService", this.service.i, this.serviceText), this.$emit("back-page"))
                    },
                    cancelService: function() {
                        this.emitServer("CancelService", this.service.i)
                    }
                },
                created: function() {
                    this.oldNumber = this.service.i
                }
            },
            hh = dh,
            _h = (a("4b17"), Object(d["a"])(hh, uh, mh, !1, null, "48f8b84a", null)),
            ph = _h.exports,
            vh = {
                name: "Service",
                data: function() {
                    return {
                        possibleServices: [{
                            i: 1,
                            n: "LSPD"
                        }, {
                            i: 2,
                            n: "LSMC"
                        }, {
                            i: 20,
                            n: "DMV",
                        }, {
                            i: 6,
                            n: "DPOS",
                        }, {
                            i: 5,
                            n: "Downtown Cab Co.",
                            t: 555
                        }]
                    }
                },
                methods: {
                    openService: function(e) {
                        this.$emit("push-page", {
                            extends: ph,
                            data: function() {
                                return {
                                    service: e
                                }
                            }
                        })
                    }
                },
                created: function() {}
            },
            fh = vh,
            bh = (a("24d1"), Object(d["a"])(fh, ch, lh, !1, null, "103c7e86", null)),
            gh = bh.exports,
            yh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "navigationapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Navigation ")], 1)]), t("v-ons-tabbar", {
                    attrs: {
                        position: "top",
                        index: 0,
                        tabs: e.tabs
                    }
                })], 1)
            },
            Ch = [],
            kh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "input-field",
                    staticStyle: {
                        width: "100%",
                        "margin-top": "0.4vh !important"
                    },
                    attrs: {
                        placeholder: "Suchen",
                        tabindex: "-1"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                })]), t("v-ons-list", e._l(e.gpsList, (function(a) {
                    return t("ons-list-item", {
                        key: a.i,
                        attrs: {
                            expandable: ""
                        }
                    }, [e._v(" " + e._s(a.n) + " "), t("div", {
                        staticClass: "expandable-content"
                    }, e._l(a.d.filter((function(t) {
                        return t.n.toLowerCase().includes(e.search.toLowerCase())
                    })), (function(a) {
                        return t("v-ons-list-item", {
                            key: a.n,
                            attrs: {
                                tappable: ""
                            },
                            on: {
                                click: function(t) {
                                    return e.navigateTo(a)
                                }
                            }
                        }, [e._v(e._s(a.n) + " ")])
                    })), 1)])
                })), 1)], 1)
            },
            wh = [],
            Sh = {
                name: "NavigationPublicApp",
                data: function() {
                    return {
                        search: "",
                        gpsList: []
                    }
                },
                methods: {
                    navigateTo: function(e) {
                        fuckThistwo("setPlayerGpsMarker", e.x, e.y)
                    },
                    SendNavigationPublic: function(e) {
                        this.gpsList = JSON.parse(e), Bn.gpsList = JSON.parse(e), Bn.gpsListLastUpdate = Date.now() / 1e3
                    }
                },
                created: function() {
                    this.addEvent("SendNavigationPublic", this.SendNavigationPublic), null == Bn.gpsList || Date.now() / 1e3 - Bn.gpsListLastUpdate > 3600 ? this.emitServer("GetNavigationPublic") : this.gpsList = Bn.gpsList
                }
            },
            Mh = Sh,
            xh = (a("ae5c"), Object(d["a"])(Mh, kh, wh, !1, null, "2379f01a", null)),
            Ph = xh.exports,
            Th = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("transition", {
                    attrs: {
                        name: "fade"
                    }
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "input-field",
                    staticStyle: {
                        width: "100%",
                        "margin-top": "0.4vh !important"
                    },
                    attrs: {
                        placeholder: "Suchen",
                        tabindex: "-1"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                })]), t("v-ons-list", e._l(e.gpsList, (function(a) {
                    return t("ons-list-item", {
                        key: a.i,
                        attrs: {
                            expandable: ""
                        }
                    }, [e._v(" " + e._s(a.n) + " "), t("div", {
                        staticClass: "expandable-content"
                    }, e._l(a.d.filter((function(t) {
                        return t.n.toLowerCase().includes(e.search.toLowerCase())
                    })), (function(a) {
                        return t("v-ons-list-item", {
                            key: a.n,
                            attrs: {
                                tappable: ""
                            },
                            on: {
                                click: function(t) {
                                    return e.navigateTo(a)
                                }
                            }
                        }, [e._v(e._s(a.n) + " ")])
                    })), 1)])
                })), 1)], 1)
            },
            Fh = [],
            Bh = {
                name: "NavigationVehicleApp",
                data: function() {
                    return {
                        search: "",
                        gpsList: []
                    }
                },
                methods: {
                    navigateTo: function(e) {
                        fuckThistwo("setPlayerGpsMarker", e.x, e.y)
                    },
                    SendNavigationVehicles: function(e) {
                        this.gpsList = JSON.parse(e)
                    }
                },
                computed: {
                    searchContacts: function() {
                        return this.gpsList
                    }
                },
                created: function() {
                    this.addEvent("SendNavigationVehicles", this.SendNavigationVehicles), this.emitServer("GetNavigationVehicles")
                }
            },
            Ih = Bh,
            Ah = (a("7f6e"), Object(d["a"])(Ih, Th, Fh, !1, null, "76b34746", null)),
            Dh = Ah.exports,
            Nh = {
                name: "Navigation",
                data: function() {
                    return {
                        tabs: [{
                            label: "Fahrzeuge",
                            page: Dh,
                            icon: "car"
                        }, {
                            label: "Öffentliche Orte",
                            page: Ph,
                            icon: "share"
                        }]
                    }
                }
            },
            Oh = Nh,
            Lh = (a("d1f7"), Object(d["a"])(Oh, yh, Ch, !1, null, "b5a8e1dc", null)),
            Hh = Lh.exports,
            zh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "bank-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("Bank")])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("img", {
                    staticClass: "bank-logo",
                    attrs: {
                        src: "./images/icons/fleeca.svg",
                        alt: ""
                    }
                })]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kontostand ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.NumberFormatter.format(e.amount)) + " ")])]), t("v-ons-list-item", {
                    on: {
                        click: e.showBankHistory
                    }
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kontoauszüge ")]), t("div", {
                    staticClass: "ware-price"
                }, [t("v-ons-icon", {
                    staticClass: "icon",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-right",
                        size: "16px, material: 1.3rem"
                    }
                })], 1)])], 1)], 1)
            },
            jh = [],
            Rh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "bank-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("Bankhistorie")])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("img", {
                    staticClass: "bank-logo",
                    attrs: {
                        src: "./images/icons/fleeca.svg",
                        alt: ""
                    }
                })]), e._l(e.data, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.d
                    }, [t("div", {
                        staticClass: "ware-list"
                    }, [t("div", {
                        staticClass: "ware-list-entry ware-date"
                    }, [e._v(" " + e._s(a.d) + " ")]), t("div", {
                        staticClass: "ware-list-entry"
                    }, [t("div", {
                        staticClass: "ware-id"
                    }, [e._v(" " + e._s(a.r) + " ")]), t("div", {
                        staticClass: "ware-price",
                        class: {
                            negative: a.v < 0
                        }
                    }, [e._v(" " + e._s(e.NumberFormatter.format(a.v)) + " ")])])])])
                }))], 2)], 1)
            },
            Vh = [],
            Eh = {
                name: "BankHistoryApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        amount: 5e7,
                        data: []
                    }
                },
                methods: {
                    RsBankAppHistory: function(e) {
                        this.data = JSON.parse(e)
                    }
                },
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    }), this.addEvent("RsBankAppHistory", this.RsBankAppHistory), this.emitServer("RqBankAppHistory")
                }
            },
            Gh = Eh,
            Wh = (a("e62e"), Object(d["a"])(Gh, Rh, Vh, !1, null, "690ff9b3", null)),
            Kh = Wh.exports,
            Uh = {
                name: "BankApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        amount: 0
                    }
                },
                methods: {
                    showBankHistory: function() {
                        this.$emit("push-page", {
                            extends: Kh,
                            data: function() {
                                return {}
                            }
                        })
                    },
                    RsBankAppValue: function(e) {
                        this.amount = e
                    }
                },
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    }), this.addEvent("RsBankAppValue", this.RsBankAppValue), this.emitServer("RqBankAppValue")
                }
            },
            $h = Uh,
            qh = (a("1d69"), Object(d["a"])($h, zh, jh, !1, null, "57f2c02a", null)),
            Jh = qh.exports,
            Zh = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "lifeinvaderapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Life Invader ")], 1)]), t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "input-field",
                    staticStyle: {
                        width: "100%",
                        "margin-top": "-0.1vh !important"
                    },
                    attrs: {
                        placeholder: "Suchen",
                        tabindex: "-1"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                }), t("v-ons-list", e._l(e.messagesList.filter((function(t) {
                    return t.m.toLowerCase().includes(e.search.toLowerCase())
                })), (function(a) {
                    return t("ons-list-item", {
                        key: a.n + a.d,
                        staticClass: "li-list"
                    }, [t("div", {
                        staticClass: "li-left"
                    }, [t("span", {
                        staticClass: "left"
                    }, [e._v(e._s(a.d))]), e._v(" " + e._s(a.m) + " ")]), t("div", {
                        staticClass: "right",
                        staticStyle: {
                            "font-size": "1rem",
                            "text-align": "center"
                        }
                    }, [t("v-ons-icon", {
                        staticClass: "clickable",
                        attrs: {
                            icon: "ion-navicon, material:phone",
                            size: "12px, material: 1rem"
                        },
                        on: {
                            click: function(t) {
                                return e.emitServer("Call", a.n)
                            }
                        }
                    })], 1)])
                })), 1)], 1)
            },
            Xh = [],
            Yh = {
                name: "LifeInvaderApp",
                data: function() {
                    return {
                        search: "",
                        messagesList: []
                    }
                },
                methods: {
                    SendLifeInvaderMessages: function(e) {
                        this.messagesList = JSON.parse(e)
                    }
                },
                created: function() {
                    this.addEvent("SendLifeInvaderMessages", this.SendLifeInvaderMessages), this.dev ? this.messagesList = [{
                        n: 1895,
                        m: "Suche Arbeit ",
                        d: "01:20"
                    }, {
                        n: 1291,
                        m: "Liebe Bürger von Los Santos, bis dem 03.01.2021 um 21 Uhr verlegen wir unsere Arbeitsstätte in Benny´s Garage. Ab sofort findet ihr uns da. Wir freuen uns auf euren Besuch. Euer LSC-Team",
                        d: "00:18"
                    }, {
                        n: 1281,
                        m: "Fightnight - 22:15 Uhr - 50.000$ zu gewinnen - Treffpunkt am Strand bei den Fitnessgeräten",
                        d: "21:35"
                    }, {
                        n: 1687,
                        m: "Verkaufe Eisenbarren",
                        d: "15:22"
                    }, {
                        n: 1377,
                        m: "YakuZa kauft eure Kupferbarren! Dringend!",
                        d: "15:18"
                    }, {
                        n: 1642,
                        m: "kaufe eure Barren. Exportpreise",
                        d: "14:35"
                    }, {
                        n: 1377,
                        m: "YakuZa kauf eure Waren! Aktuell werden dringend Kupferbarren gesucht!",
                        d: "14:21"
                    }, {
                        n: 1687,
                        m: "Verkaufe 94 EIsenbarren",
                        d: "08:40"
                    }] : this.emitServer("GetLifeInvaderMessages")
                }
            },
            Qh = Yh,
            e_ = (a("c1095"), Object(d["a"])(Qh, Zh, Xh, !1, null, "4893186d", null)),
            t_ = e_.exports,
            a_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Einstellungen ")], 1)]), t("v-ons-list", [t("v-ons-list-item", {
                    attrs: {
                        tappable: ""
                    },
                    on: {
                        click: function(t) {
                            return e.openSettingsApp()
                        }
                    }
                }, [t("div", {
                    staticClass: "left"
                }, [t("img", {
                    staticClass: "list-item__thumbnail",
                    attrs: {
                        src: "./images/phone/settingsicon.png"
                    }
                })]), e._v(" Einstellungen ")]), t("v-ons-list-item", {
                    attrs: {
                        tappable: ""
                    },
                    on: {
                        click: function(t) {
                            return e.openWallpaperApp()
                        }
                    }
                }, [t("div", {
                    staticClass: "left"
                }, [t("img", {
                    staticClass: "list-item__thumbnail",
                    attrs: {
                        src: "./images/phone/image.png"
                    }
                })]), e._v(" Wallpaper ")]), t("v-ons-list-item", {
                    attrs: {
                        tappable: ""
                    },
                    on: {
                        click: function(t) {
                            return e.openRingtoneApp()
                        }
                    }
                }, [t("div", {
                    staticClass: "left"
                }, [t("img", {
                    staticClass: "list-item__thumbnail",
                    attrs: {
                        src: "./images/phone/ringtone.png"
                    }
                })]), e._v(" Klingeltöne ")])], 1)], 1)
            },
            i_ = [],
            s_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Wallpaper ")], 1)]), t("v-ons-carousel", {
                    attrs: {
                        fullscreen: "",
                        swipeable: "",
                        "auto-scroll": "",
                        overscrollable: "",
                        index: e.carouselIndex
                    },
                    on: {
                        "update:index": function(t) {
                            e.carouselIndex = t
                        }
                    }
                }, e._l(e.items, (function(e) {
                    return t("v-ons-carousel-item", {
                        key: e.i
                    }, [t("img", {
                        staticStyle: {
                            height: "100% !important",
                            width: "100% !important"
                        },
                        attrs: {
                            src: e.p
                        }
                    })])
                })), 1), t("div", {
                    style: e.dots
                }, e._l(Object.keys(e.items).length, (function(a) {
                    return t("span", {
                        key: a,
                        staticStyle: {
                            cursor: "pointer"
                        },
                        attrs: {
                            index: a - 1
                        },
                        on: {
                            click: function(t) {
                                e.carouselIndex = a - 1
                            }
                        }
                    }, [e._v(" " + e._s(e.carouselIndex === a - 1 ? "●" : "○") + " ")])
                })), 0), t("v-ons-fab", {
                    attrs: {
                        modifier: "mini",
                        ripple: "",
                        position: "bottom right"
                    },
                    on: {
                        click: e.saveWallpaper
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "save"
                    }
                })], 1)], 1)
            },
            n_ = [],
            r_ = {
                name: "SettingsWallpaperApp",
                data: function() {
                    return {
                        carouselIndex: 0,
                        items: [],
                        dots: {
                            textAlign: "center",
                            fontSize: "30px",
                            position: "absolute",
                            bottom: "85px",
                            left: 0,
                            right: 0
                        }
                    }
                },
                methods: {
                    saveWallpaper: function() {
                        var e = this.items[this.carouselIndex].p;
                        Bn.wallpaperId = e, this.emitServer("ChangeWallpaperId", e)
                    },
                    sendWallpapers: function(t) {
                        this.items = JSON.parse(t);
                    }
                },
                computed: {

                },
                created: function() {
                    this.addEvent("SendWallpapers", this.sendWallpapers), this.emitServer("SendWallpapers")
                }
            },
            o_ = r_,
            c_ = (a("ba8b"), Object(d["a"])(o_, s_, n_, !1, null, "21642bb4", null)),
            l_ = c_.exports,
            u_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "settingsapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center",
                    staticStyle: {
                        color: "#FCEFEF !important"
                    }
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Einstellungen ")], 1)]), t("ons-list", [t("ons-list-item", [t("label", {
                    staticClass: "switch",
                    attrs: {
                        for: "switch1"
                    }
                }, [e._v(" Benachrichtigungen stummschalten ")]), t("div", {
                    staticClass: "right"
                }, [t("v-ons-switch", {
                    attrs: {
                        "input-id": "switch1"
                    },
                    on: {
                        change: e.changeSmsMute
                    },
                    model: {
                        value: e.smsMute,
                        callback: function(t) {
                            e.smsMute = t
                        },
                        expression: "smsMute"
                    }
                })], 1)]), t("ons-list-item", [t("label", {
                    staticClass: "switch",
                    attrs: {
                        for: "switch1"
                    }
                }, [e._v(" Klingelton stummschalten ")]), t("div", {
                    staticClass: "right"
                }, [t("v-ons-switch", {
                    attrs: {
                        "input-id": "switch1"
                    },
                    on: {
                        change: e.changeCallMute
                    },
                    model: {
                        value: e.callMute,
                        callback: function(t) {
                            e.callMute = t
                        },
                        expression: "callMute"
                    }
                })], 1)]), t("ons-list-item", [t("label", {
                    staticClass: "switch",
                    attrs: {
                        for: "switch1"
                    }
                }, [e._v(" Beeper stummschalten ")]), t("div", {
                    staticClass: "right"
                }, [t("v-ons-switch", {
                    attrs: {
                        "input-id": "switch1"
                    },
                    on: {
                        change: e.changeBeepMute
                    },
                    model: {
                        value: e.beepMute,
                        callback: function(t) {
                            e.beepMute = t
                        },
                        expression: "beepMute"
                    }
                })], 1)])], 1)], 1)
            },
            m_ = [],
            d_ = {
                name: "SettingsApp",
                data: function() {
                    return {
                        smsMute: Bn.smsMute,
                        callMute: Bn.callMute,
                        beepMute: Bn.beepMute
                    }
                },
                methods: {
                    changeSmsMute: function() {
                        Bn.smsMute = !this.smsMute, this.emit("ChangeSmsMute", !this.smsMute)
                    },
                    changeCallMute: function() {
                        Bn.callMute = !this.callMute, this.emit("ChangeCallMute", !this.callMute)
                    },
                    changeBeepMute: function() {
                        Bn.beepMute = !this.beepMute, this.emit("ChangeBeepMute", !this.beepMute)
                    }
                }
            },
            h_ = d_,
            __ = (a("d8ec"), Object(d["a"])(h_, u_, m_, !1, null, "82876d54", null)),
            p_ = __.exports,
            v_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "settingsringtoneapp"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.back()
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), e._v(" Klingeltöne ")], 1)]), t("v-ons-list", [t("v-ons-list-item", {
                    staticStyle: {
                        "margin-top": "1vh !important"
                    }
                }, [e._v(" Lautstärke "), t("v-ons-range", {
                    staticStyle: {
                        width: "100%"
                    },
                    on: {
                        change: function(t) {
                            return e.changeVolume()
                        }
                    },
                    model: {
                        value: e.volume,
                        callback: function(t) {
                            e.volume = t
                        },
                        expression: "volume"
                    }
                })], 1), t("v-ons-list-item", [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.search,
                        expression: "search"
                    }],
                    staticClass: "ringtonesearch",
                    attrs: {
                        placeholder: "Song suchen"
                    },
                    domProps: {
                        value: e.search
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.search = t.target.value)
                        }
                    }
                })]), e._l(e.searchSounds, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        staticClass: "ringtone-list"
                    }, [t("div", {
                        staticClass: "ringtone-play"
                    }, [t("div", {
                        staticClass: "ringtone-play-circle",
                        on: {
                            click: function(t) {
                                return e.playSound(a)
                            }
                        }
                    }, [t("span", {
                        staticClass: "mdi mdi-24px mdi-play clickable"
                    })])]), t("div", {
                        staticClass: "ringtone-name",
                        class: {
                            active: e.owned == a.i
                        }
                    }, [e.selectedSound == a ? t("div", {
                        staticClass: "progress"
                    }, [t("div", {
                        staticClass: "progress-bar",
                        style: "width:" + e.getProgressBarValue + "%",
                        attrs: {
                            role: "progressbar",
                            "aria-valuenow": "0",
                            "aria-valuemin": "0",
                            "aria-valuemax": "100"
                        }
                    })]) : e._e(), t("div", {
                        staticClass: "progress-name",
                        on: {
                            click: function(t) {
                                return e.choseSound(a)
                            }
                        }
                    }, [e._v(" " + e._s(a.n) + " ")]), t("div", {
                        staticClass: "progress-artist",
                        on: {
                            click: function(t) {
                                return e.choseSound(a)
                            }
                        }
                    }, [e._v(" " + e._s(a.a) + " ")])])])
                }))], 2)], 1)
            },
            f_ = [],
            b_ = {
                name: "SettingsRingtoneApp",
                data: function() {
                    return {
                        search: "",
                        owned: Bn.ringtoneId,
                        volume: Bn.volume,
                        audio: void 0,
                        audioDuration: 0,
                        selectedSound: void 0,
                        progressBarValue: 0,
                        sounds: [{
                            i: 0,
                            a: "Visual",
                            n: "Standard",
                            d: 47,
                            url: "1641918138-0"
                        }, {
                            i: 1,
                            a: "Samra",
                            n: "Rohdiamant",
                            d: 55,
                            url: "1641918240-1"
                        }, {
                            i: 2,
                            a: "Kollegah, Farid",
                            n: "Schlangen",
                            d: 44,
                            url: "1641918306-2"
                        }, {
                            i: 3,
                            a: "Kakashi, Deno",
                            n: "Vagos",
                            d: 51,
                            url: "1641918388-3"
                        }, {
                            i: 4,
                            a: "Riton x Nightcrawlers",
                            n: "Friday",
                            d: 50,
                            url: "1641918458-4"
                        }, {
                            i: 5,
                            a: "2LADE",
                            n: "Superman",
                            d: 58,
                            url: "1641918491-5"
                        }, {
                            i: 6,
                            a: "Spongebob",
                            n: "Gary komm heim",
                            d: 54,
                            url: "1641918491-6"
                        }, {
                            i: 7,
                            a: "Chaze Miller",
                            n: "Seele tot",
                            d: 52,
                            url: "1641918491-7"
                        }, {
                            i: 8,
                            a: "G-Eazy",
                            n: "Me Myself and I",
                            d: 64,
                            url: "1641918491-8"
                        }, {
                            i: 9,
                            a: "Outkast",
                            n: "Ms. Jackson",
                            d: 61,
                            url: "1641918491-9"
                        }, {
                            i: 10,
                            a: "Katy Perry",
                            n: "Firework",
                            d: 62,
                            url: "1641918491-10"
                        }, {
                            i: 11,
                            a: "Lou Bega",
                            n: "Mambo No. 5",
                            d: 47,
                            url: "1641918491-11"
                        }, {
                            i: 12,
                            a: "XXXTentacion",
                            n: "Moonlight",
                            d: 45,
                            url: "1641918491-12"
                        }, {
                            i: 13,
                            a: "Lil Peep",
                            n: "Star Shopping",
                            d: 58,
                            url: "1641918491-13"
                        }, {
                            i: 14,
                            a: "Cypis",
                            n: "Gdzie jest biały węgorz",
                            d: 49,
                            url: "1641918492-14"
                        }, {
                            i: 15,
                            a: "Madcon",
                            n: "Beggin",
                            d: 47,
                            url: "1641918775-15"
                        }, {
                            i: 16,
                            a: "Krajno",
                            n: "Jamalia",
                            d: 48,
                            url: "1641918776-16"
                        }, {
                            i: 17,
                            a: "01099 x Gustav",
                            n: "Frisch",
                            d: 59,
                            url: "1641918776-17"
                        }, {
                            i: 18,
                            a: "deadmau5",
                            n: "Monophobia",
                            d: 53,
                            url: "1641918776-18"
                        }, {
                            i: 19,
                            a: "6LACK",
                            n: "Free",
                            d: 62,
                            url: "1641918942-19"
                        }, {
                            i: 20,
                            a: "Robin Schulz & Wes",
                            n: "Alane",
                            d: 50,
                            url: "1641918942-20"
                        }, {
                            i: 21,
                            a: "LOREDANA",
                            n: "Jetzt rufst du an",
                            d: 55,
                            url: "1641918942-21"
                        }, {
                            i: 22,
                            a: "Lil Peep & XXXTENTACION",
                            n: "Falling Down",
                            d: 64,
                            url: "1641918942-22"
                        }, {
                            i: 23,
                            a: "Juice WRLD",
                            n: "Lucid Dreams",
                            d: 46,
                            url: "1641918942-23"
                        }, {
                            i: 24,
                            a: "Aqua",
                            n: "Barbie Girl",
                            d: 47,
                            url: "1641918942-24"
                        }, {
                            i: 25,
                            a: "Rauf Faik",
                            n: "детство",
                            d: 48,
                            url: "1641918942-25"
                        }, {
                            i: 26,
                            a: "Slipknot",
                            n: "Custer",
                            d: 77,
                            url: "1641918942-26"
                        }, {
                            i: 27,
                            a: "LUNIZ",
                            n: "I GOT 5 ON IT",
                            d: 44,
                            url: "1641918942-27"
                        }, {
                            i: 28,
                            a: "G-Eazy & Halsey",
                            n: "Him & I",
                            d: 43,
                            url: "1641918943-28"
                        }, {
                            i: 29,
                            a: "2RAUMWOHNUNG",
                            n: "36 grad",
                            d: 43,
                            url: "1641919173-29"
                        }, {
                            i: 30,
                            a: "Natasha Bedingfield",
                            n: "Pocketful of Sunshine",
                            d: 46,
                            url: "1641919172-30"
                        }, {
                            i: 31,
                            a: "Zac Efron, Vanessa Hudgens",
                            n: "Gotta Go My Own Way",
                            d: 30,
                            url: "1641919173-31"
                        }, {
                            i: 32,
                            a: "Juju, Henning May",
                            n: "Vermissen",
                            d: 46,
                            url: "1641919173-32"
                        }, {
                            i: 33,
                            a: "Limahl",
                            n: "Never Ending Story",
                            d: 51,
                            url: "1641919173-33"
                        }, {
                            i: 34,
                            a: "Hellers",
                            n: "Frohe Weihnachten",
                            d: 41,
                            url: "1641919173-34"
                        }, {
                            i: 35,
                            a: "Nokia",
                            n: "Klingelton",
                            d: 12,
                            url: "1641919173-35"
                        }, {
                            i: 36,
                            a: "Ibrahim Tatlises",
                            n: "Bulamadim",
                            d: 75,
                            url: "1641919173-35"
                        }, {
                            i: 37,
                            a: "Mo Douzi",
                            n: "Du kennst Mo",
                            d: 46,
                            url: "8888888888-37"
                        }, {
                            i: 38,
                            a: "Celine",
                            n: "Tränen aus Kajal",
                            d: 30,
                            url: "8888888888-37"
                        }, {
                            i: 39,
                            a: "NoooN & Katie Breuer",
                            n: "Nüsse sind gesund",
                            d: 37,
                            url: "8888888888-37"
                        }, {
                            i: 40,
                            a: "Domiziana",
                            n: "Ohne Benzin",
                            d: 27,
                            url: "8888888888-37"
                        }, {
                            i: 41,
                            a: "Rihanna",
                            n: "Kiss It Better",
                            d: 53,
                            url: "8888888888-37"
                        }, {
                            i: 42,
                            a: "Holy Santa Barbara",
                            n: "Rummel",
                            d: 27,
                            url: "8888888888-37"
                        }, {
                            i: 43,
                            a: "Slava Marlow",
                            n: "Ты горишь как огонь",
                            d: 92,
                            url: "8888888888-37"
                        }, {
                            i: 44,
                            a: "DJ Robin x Schurze",
                            n: "Layla",
                            d: 29,
                            url: "8888888888-37"
                        }, {
                            i: 45,
                            a: "Winx Club",
                            n: "Heller als Licht",
                            d: 32,
                            url: "8888888888-37"
                        }, {
                            i: 46,
                            a: "Masum Kirmizigül",
                            n: "Annem Annem",
                            d: 35,
                            url: "8888888888-37"
                        }, {
                            i: 47,
                            a: "Pokemon",
                            n: "Theme Song",
                            d: 30,
                            url: "8888888888-37"
                        }, {
                            i: 48,
                            a: "Zeno",
                            n: "Beautiful Day",
                            d: 30,
                            url: "8888888888-37"
                        }, {
                            i: 49,
                            a: "Inez",
                            n: "My Love",
                            d: 35,
                            url: "8888888888-37"
                        }]
                    }
                },
                methods: {
                    back: function() {
                        void 0 != this.audio && this.audio.pause(), this.$emit("back-page")
                    },
                    playSound: function(e) {
                        void 0 == this.audio ? (this.audio = new Audio("https://sibaui.deinsh.eu/sound/ringtone/" + e.i + ".mp3"), this.audioDuration = e.d, this.audio.play(), this.audio.volume = this.volume / 100, this.selectedSound = e) : (this.audio.pause(), this.audioDuration = 0, this.audio = void 0, this.progressBarValue = 0, this.selectedSound != e && this.playSound(e))
                    },
                    choseSound: function(e) {
                        this.owned = e.i, Bn.ringtoneId = e.i, this.emitServer("ChangeRingtone", e.i)
                    },
                    changeVolume: function() {
                        void 0 != this.audio && (this.audio.volume = this.volume / 100), Bn.volume = this.volume, this.emitServer("ChangeRingtoneVolume", this.volume)
                    },
                    stopPlayingRingtone: function() {
                        this.audio.pause()
                    }
                },
                mounted: function() {
                    var e = this;
                    setInterval((function() {
                        if (void 0 != e.audio)
                            if (e.audio.paused) e.progressBarValue = 0;
                            else {
                                e.audio.ended && (e.progressBarValue = 0);
                                var t = e.audioDuration;
                                if (e.audio.played.length > 0) {
                                    var a = e.audio.played.end(0);
                                    e.progressBarValue = a / t
                                }
                            }
                    }), 50)
                },
                computed: {
                    getProgressBarValue: function() {
                        return 100 * this.progressBarValue
                    },
                    searchSounds: function() {
                        var e = this,
                            t = this.sounds.filter((function(t) {
                                return t.n.toLowerCase().includes(e.search.toLowerCase()) || t.a.toLowerCase().includes(e.search.toLowerCase())
                            })),
                            a = t.sort((function(e, t) {
                                var a = e.n.toLowerCase(),
                                    i = t.n.toLowerCase();
                                return a < i ? -1 : a > i ? 1 : 0
                            }));
                        return a
                    }
                },
                created: function() {
                    this.addEvent("StopPlayingRingtone", this.stopPlayingRingtone), document.addEventListener("keyup", (function(e) {
                        27 === e.keyCode && this.audio.pause()
                    }))
                }
            },
            g_ = b_,
            y_ = (a("bff1"), Object(d["a"])(g_, v_, f_, !1, null, "5ba7e017", null)),
            C_ = y_.exports,
            k_ = {
                name: "SettingsMainApp",
                data: function() {
                    return {}
                },
                methods: {
                    openSettingsApp: function() {
                        this.$emit("push-page", {
                            extends: p_
                        })
                    },
                    openWallpaperApp: function() {
                        this.$emit("push-page", {
                            extends: l_
                        })
                    },
                    openRingtoneApp: function() {
                        this.$emit("push-page", {
                            extends: C_
                        })
                    }
                }
            },
            w_ = k_,
            S_ = (a("bd76"), Object(d["a"])(w_, a_, i_, !1, null, "1b36a92d", null)),
            M_ = S_.exports,
            x_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "crypto-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("Crypto")])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("img", {
                    staticClass: "crypto-logo",
                    attrs: {
                        src: "./images/icons/crypto.svg",
                        alt: ""
                    }
                })]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.walletAddress,
                        expression: "walletAddress != ''"
                    }]
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Wallet ")]), t("div", {
                    staticClass: "crypto-wallet",
                    on: {
                        click: function(t) {
                            return e.copyToClipBoard()
                        }
                    }
                }, [e._v(" " + e._s(e.walletAddress) + " ")])]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.walletAddress,
                        expression: "walletAddress != ''"
                    }]
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kontostand ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.NumberFormatter.format(e.amount)) + " ")])]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.walletAddress,
                        expression: "walletAddress != ''"
                    }],
                    on: {
                        click: e.openCryptoTransferApp
                    }
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Überweisen ")]), t("div", {
                    staticClass: "ware-price"
                }, [t("v-ons-icon", {
                    staticClass: "icon",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-right",
                        size: "16px, material: 1.3rem"
                    }
                })], 1)]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" != e.walletAddress,
                        expression: "walletAddress != ''"
                    }],
                    on: {
                        click: e.openCryptoStore
                    }
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Cryptomarkt ")]), t("div", {
                    staticClass: "ware-price"
                }, [t("v-ons-icon", {
                    staticClass: "icon",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-right",
                        size: "16px, material: 1.3rem"
                    }
                })], 1)]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" == e.walletAddress,
                        expression: "walletAddress == ''"
                    }]
                }, [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kein Wallet vorhanden ")])]), t("v-ons-list-item", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "" == e.walletAddress,
                        expression: "walletAddress == ''"
                    }]
                }, [t("v-ons-button", {
                    attrs: {
                        modifier: "large"
                    },
                    on: {
                        click: function(t) {
                            return e.createWallet()
                        }
                    }
                }, [e._v("Wallet erstellen ")])], 1)], 1)], 1)
            },
            P_ = [],
            T_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "crypto-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("Überweisung")])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("img", {
                    staticClass: "crypto-logo",
                    attrs: {
                        src: "./images/icons/crypto.svg",
                        alt: ""
                    }
                })]), t("div", [t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kontostand ")]), t("div", {
                    staticClass: "ware-price"
                }, [e._v(" " + e._s(e.NumberFormatter.format(e.amount)) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Wallet ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        float: ""
                    },
                    model: {
                        value: e.transferWalletAddress,
                        callback: function(t) {
                            e.transferWalletAddress = t
                        },
                        expression: "transferWalletAddress"
                    }
                })], 1), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Betrag ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        type: "number",
                        float: ""
                    },
                    model: {
                        value: e.transferAmount,
                        callback: function(t) {
                            e.transferAmount = t
                        },
                        expression: "transferAmount"
                    }
                })], 1), t("v-ons-list-item", [t("v-ons-button", {
                    attrs: {
                        disabled: !e.canSend,
                        modifier: "large"
                    },
                    on: {
                        click: function(t) {
                            return e.cryptoTransfer()
                        }
                    }
                }, [e._v("Überweisen ")])], 1)], 1)], 1)], 1)
            },
            F_ = [],
            B_ = {
                name: "CryptoTransferApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        walletAddress: "",
                        amount: 0,
                        transferWalletAddress: "-",
                        transferAmount: 0,
                        canSend: !0
                    }
                },
                methods: {
                    cryptoTransfer: function() {
                        console.log(this.transferWalletAddress.length);
                        if (21 == this.transferWalletAddress.length || 23 == this.transferWalletAddress.length) {
                            var e = parseInt(this.transferAmount);
                            isNaN(e) ? this.$emit("show-toast", "Du musst eine Zahl eintragen!") : (this.canSend = !this.canSend, this.emitServer("TransferCrypto", this.transferWalletAddress, e))
                        } else this.$emit("show-toast", "Die Targetwalletadresse ist nicht gültig!")
                    },
                    RsTransferCrypto: function(e) {
                        e ? (this.amount -= this.transferAmount, this.transferAmount = 0, this.$emit("show-toast", "Betrag überwiesen!")) : (this.transferWalletAddress = "", this.$emit("show-toast", "Betrag konnte nicht überwiesen werden!")), this.canSend = !this.canSend
                    }
                },
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("de-DE"), this.addEvent("RsTransferCrypto", this.RsTransferCrypto)
                }
            },
            I_ = B_,
            A_ = (a("b0bb"), Object(d["a"])(I_, T_, F_, !1, null, "bc71b41e", null)),
            D_ = A_.exports,
            N_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "crypto-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.back()
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("Markt")])], 1), 0 == e.status ? t("div", {
                    staticClass: "right"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            e.status = 2
                        }
                    }
                }, [t("v-ons-icon", {
                    attrs: {
                        icon: "ion-navicon, material:plus",
                        size: "12px, material: 1.1rem"
                    }
                })], 1)], 1) : e._e()]), 0 == e.status ? t("v-ons-list", e._l(e.sortedOffers, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i,
                        attrs: {
                            tappable: ""
                        },
                        on: {
                            click: function(t) {
                                return e.showOffer(a)
                            }
                        }
                    }, [a.isOwn ? t("div", {
                        staticClass: "history-col first"
                    }, [t("v-ons-icon", {
                        staticClass: "clickable",
                        staticStyle: {
                            color: "red"
                        },
                        attrs: {
                            icon: "ion-navicon, material:trash"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteMarketOffer(a)
                            }
                        }
                    })], 1) : e._e(), t("div", {
                        staticClass: "history-col second"
                    }, [e._v(" " + e._s(a.n) + " x ")]), t("div", {
                        staticClass: "history-col third"
                    }, [t("div", {
                        staticClass: "callhistoryapp-number"
                    }, [t("center", [e._v("$" + e._s(e.NumberFormatterCOINS.format(a.v / a.n)))])], 1)]), t("div", {
                        staticClass: "history-col fourth"
                    }, [t("div", {
                        staticClass: "callhistoryapp-time"
                    }, [e._v(" " + e._s(a.t) + " ")])])])
                })), 1) : 1 == e.status ? t("v-ons-list", [t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Verfügbare Coins ")]), t("div", {
                    staticClass: "ware price"
                }, [e._v(" " + e._s(e.activeOffer.n) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Preis pro VisCoin ")]), t("div", {
                    staticClass: "ware ware-id"
                }, [e._v(" $" + e._s(e.NumberFormatterCOINS.format(e.activeOffer.v / e.activeOffer.n)) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" VisCoins pro Dollar ")]), t("div", {
                    staticClass: "ware ware-id"
                }, [e._v(" " + e._s(e.NumberFormatterCOINS.format(1 / (e.activeOffer.v / e.activeOffer.n))) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Anzahl ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        type: "number"
                    },
                    on: {
                        keyup: e.buyAmountChanged
                    },
                    model: {
                        value: e.buyAmount,
                        callback: function(t) {
                            e.buyAmount = t
                        },
                        expression: "buyAmount"
                    }
                })], 1), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Preis ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        type: "number"
                    },
                    on: {
                        keyup: e.buyPriceChanged
                    },
                    model: {
                        value: e.buyPrice,
                        callback: function(t) {
                            e.buyPrice = t
                        },
                        expression: "buyPrice"
                    }
                })], 1), "" !== e.buyError ? t("v-ons-list-item", [t("div", {
                    staticClass: "error"
                }, [e._v(" " + e._s(e.buyError) + " ")])]) : e._e(), t("v-ons-list-item", [t("v-ons-button", {
                    attrs: {
                        modifier: "large"
                    },
                    on: {
                        click: function(t) {
                            return e.buyCryptoFromMarket()
                        }
                    }
                }, [e._v("Kaufen ")])], 1)], 1) : t("v-ons-list", [t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Kontostand ")]), t("div", {
                    staticClass: "ware price"
                }, [e._v(" " + e._s(e.NumberFormatterINT.format(e.amount)) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Gebühren (5 VisCoins) ")]), t("div", {
                    staticClass: "ware fee"
                }, [e._v(" " + e._s(e.fee) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "ware-id"
                }, [e._v(" Preis insgesamt ")]), t("div", {
                    staticClass: "ware price"
                }, [e._v(" $" + e._s(this.sellPrice * this.sellAmount) + " ")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Anzahl ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        type: "number",
                        float: ""
                    },
                    model: {
                        value: e.sellAmount,
                        callback: function(t) {
                            e.sellAmount = t
                        },
                        expression: "sellAmount"
                    }
                })], 1), t("v-ons-list-item", [t("div", {
                    staticClass: "input-label"
                }, [e._v(" Preis pro VisCoin ")]), t("v-ons-input", {
                    staticStyle: {
                        width: "95%"
                    },
                    attrs: {
                        type: "number",
                        float: ""
                    },
                    model: {
                        value: e.sellPrice,
                        callback: function(t) {
                            e.sellPrice = t
                        },
                        expression: "sellPrice"
                    }
                })], 1), "" !== e.sellError ? t("v-ons-list-item", [t("div", {
                    staticClass: "error"
                }, [e._v(" " + e._s(e.sellError) + " ")])]) : e._e(), t("v-ons-list-item", [t("v-ons-button", {
                    attrs: {
                        modifier: "large"
                    },
                    on: {
                        click: function(t) {
                            return e.createCryptoOffer()
                        }
                    }
                }, [e._v("Anbieten ")])], 1)], 1)], 1)
            },
            O_ = [],
            L_ = {
                name: "CryptoMarketApp",
                data: function() {
                    return {
                        NumberFormatterUSD: null,
                        NumberFormatterINT: null,
                        NumberFormatterCOINS: null,
                        amount: 100,
                        status: 0,
                        activeOffer: null,
                        buyAmount: 0,
                        buyPrice: 0,
                        buyError: "",
                        sellAmount: 0,
                        sellPrice: .01,
                        sellError: "",
                        cryptoOffers: [ {
                            i: 2,
                            n: 3,
                            v: 4,
                            t: "24.02 16:54"
                        }, {
                            i: 3,
                            n: 200,
                            v: 2,
                            t: "24.02 16:54"
                        }]
                    }
                },
                methods: {
                    back: function() {
                        0 == this.status ? this.$emit("back-page") : (this.status = 0, this.activeOffer = null)
                    },
                    showOffer: function(e) {
                        e.isOwn || (this.status = 1, this.activeOffer = e)
                    },
                    buyCryptoFromMarket: function() {
                        if (!isNaN(this.buyAmount))
                            if (this.buyAmount % 1 === 0)
                                if (this.buyPrice % 1 === 0) {
                                    var e = parseInt(this.buyAmount);
                                    e > this.activeOffer.n ? this.buyError = "So viele Coins kannst du nicht kaufen!" : (this.emitServer("BuyCryptoOffer", this.activeOffer.i, e), this.$emit("back-page"))
                                } else this.buyError = "Der Preis muss gerade sein!";
                        else this.buyError = "Die Anzahl muss gerade sein!"
                    },
                    deleteMarketOffer: function(e) {
                        this.emitServer("DeleteCryptoOffer", e.i), this.cryptoOffers.splice(this.cryptoOffers.indexOf(e), 1)
                    },
                    createCryptoOffer: function() {
                        if (!isNaN(this.sellAmount) && !isNaN(this.sellPrice)) {
                            var e = parseFloat(this.sellAmount),
                                t = parseFloat(this.sellPrice);
                            t < 1000 ? this.sellError = "Der Minimalpreis für ein VisCoin liegt bei 1000 $!" : t > 5000 ? this.sellError = "Der Maximalpreis für ein VisCoin liegt bei 5000 $!" : t * e % 1 === 0 ? e <= 0 ? this.sellError = "Die Anzahl muss größer als 0 sein!" : e % 1 === 0 ? this.amount < e + this.fee ? this.sellError = "Soviele Coins hast du nicht!" : t <= 0 ? this.sellError = "Der Preis muss größer als 0 sein!" : (this.emitServer("CreateCryptoOffer", e, t * e), this.sellError = "", this.sellAmount = 0, this.sellPrice = .01, this.status = 0) : this.sellError = "Die Anzahl muss gerade sein!" : this.sellError = "Der insgesamte Preis muss gerade sein!"
                        }
                    },
                    RsCryptoMarketOffers: function(e) {
                        this.cryptoOffers = JSON.parse(e)
                    },
                    RsCreateCryptoOffer: function(e, t, a, i, s) {
                        this.cryptoOffers.push({
                            i: e,
                            n: t,
                            v: a,
                            isOwn: i,
                            t: s
                        })
                    },
                    buyPriceChanged: function() {
                        var e = 1 / (this.activeOffer.v / this.activeOffer.n) * this.buyPrice;
                        return e > this.activeOffer.n ? (this.buyAmount = 0, void(this.buyError = "So viele Coins kannst du nicht kaufen!")) : this.buyPrice % 1 !== 0 ? (this.buyAmount = 0, void(this.buyError = "Der Preis muss gerade sein!")) : (this.buyAmount = e, void("" !== this.buyError && (this.buyError = "")))
                    },
                    buyAmountChanged: function() {
                        var e = this.activeOffer.v / this.activeOffer.n * this.buyAmount;
                        return this.buyAmount > this.activeOffer.n ? (this.buyPrice = 0, void(this.buyError = "So viele Coins kannst du nicht kaufen!")) : this.buyAmount % 1 !== 0 ? (this.buyPrice = 0, void(this.buyError = "Die Anzahl muss gerade sein!")) : (this.buyPrice = e, void("" !== this.buyError && (this.buyError = "")))
                    }
                },
                mounted: function() {},
                computed: {
                    sortedOffers: function() {
                        return this.cryptoOffers.sort((function(e, t) {
                            return e.v / e.n > t.v / t.n ? 1 : -1
                        }))
                    },
                    fee: function() {
                        return 5
                    }
                },
                created: function() {
                    this.NumberFormatterUSD = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    }), this.NumberFormatterINT = new Intl.NumberFormat("de-DE"), this.NumberFormatterCOINS = new Intl.NumberFormat("en-US", {
                        maximumFractionDigits: 4
                    }), this.emitServer("RqCryptoMarketOffers"), this.addEvent("RsCryptoMarketOffers", this.RsCryptoMarketOffers), this.addEvent("RsCreateCryptoOffer", this.RsCreateCryptoOffer)
                }
            },
            H_ = L_,
            z_ = (a("34d6"), Object(d["a"])(H_, N_, O_, !1, null, "420edd01", null)),
            j_ = z_.exports,
            R_ = {
                name: "CryptoApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        walletAddress: "",
                        amount: 0
                    }
                },
                methods: {
                    openCryptoTransferApp: function() {
                        var e = this.walletAddress,
                            t = this.amount;
                        this.$emit("push-page", {
                            extends: D_,
                            data: function() {
                                return {
                                    walletAddress: e,
                                    amount: t
                                }
                            }
                        })
                    },
                    openCryptoStore: function() {
                        var e = this.amount;
                        this.$emit("push-page", {
                            extends: j_,
                            data: function() {
                                return {
                                    amount: e
                                }
                            }
                        })
                    },
                    copyToClipBoard: function() {
                        this.emit("CopyToClipboard", this.walletAddress), this.$emit("show-toast", "Walletadresse kopiert!")
                    },
                    RsCryptoWallet: function(e) {
                        this.walletAddress = JSON.parse(e).walletAddress, this.amount = parseInt(JSON.parse(e).value)
                    },
                    createWallet: function() {
                        "" == this.walletAddress && (this.walletAddress = "requesting...", this.amount = 1e3, this.emitServer("CreateWallet"))
                    }
                },
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("de-DE"), this.addEvent("RsCryptoWallet", this.RsCryptoWallet), this.emitServer("RqCryptoWallet")
                }
            },
            V_ = R_,
            E_ = (a("d8bf"), Object(d["a"])(V_, x_, P_, !1, null, "1559876b", null)),
            G_ = E_.exports,
            W_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "food-business-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v("SibFood")])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("img", {
                    staticClass: "sibfood-logo",
                    attrs: {
                        src: "./images/phone/apps/sibfood.png",
                        alt: ""
                    }
                })]), e._l(e.businesses, (function(a) {
                    return t("v-ons-list-item", {
                        key: a.i
                    }, [t("div", {
                        staticClass: "sibfood-business"
                    }, [t("div", {
                        staticClass: "sibfood-status",
                        class: {
                            open: a.s,
                            closed: !a.s,
                            clickable: a.o
                        },
                        on: {
                            click: function(t) {
                                return e.changeStatus(a)
                            }
                        }
                    }), t("div", {
                        staticClass: "sibfood-name",
                        on: {
                            click: function(t) {
                                return e.showBusiness(a)
                            }
                        }
                    }, [e._v(e._s(a.n))])]), t("div", {
                        staticClass: "sibfood-actions"
                    }, [t("div", {
                        staticClass: "sibfood-gps",
                        on: {
                            click: function(t) {
                                return e.markGps(a)
                            }
                        }
                    }, [t("i", {
                        staticClass: "fas fa-map-marker-alt fa-fw"
                    })])])])
                }))], 2)], 1)
            },
            K_ = [],
            U_ = function() {
                var e = this,
                    t = e._self._c;
                return t("v-ons-page", {
                    staticClass: "food-business-app"
                }, [t("v-ons-toolbar", [t("div", {
                    staticClass: "center"
                }, [t("v-ons-toolbar-button", {
                    on: {
                        click: function(t) {
                            return e.$emit("back-page")
                        }
                    }
                }, [t("v-ons-icon", {
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        icon: "ion-navicon, material:arrow-left",
                        size: "12px, material: 1.1rem"
                    }
                })], 1), t("span", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v(e._s(e.business.n))])], 1)]), t("v-ons-list", [t("v-ons-list-item", [t("div", {
                    staticClass: "motd-title"
                }, [e._v("Message of the day!")])]), t("v-ons-list-item", [t("div", {
                    staticClass: "motd-description",
                    domProps: {
                        innerHTML: e._s(e.business.motd)
                    }
                })])], 1)], 1)
            },
            $_ = [],
            q_ = {
                name: "FoodBusinessSingleApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        business: {}
                    }
                },
                methods: {},
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    })
                }
            },
            J_ = q_,
            Z_ = (a("f233"), Object(d["a"])(J_, U_, $_, !1, null, "5948dd8e", null)),
            X_ = Z_.exports,
            Y_ = {
                name: "FoodBusinessApp",
                data: function() {
                    return {
                        NumberFormatter: null,
                        businesses: []
                    }
                },
                methods: {
                    markGps: function(e) {
                        null !== e.x && null !== e.y && this.emit("SetGPS", parseInt(e.x), parseInt(e.y))
                    },
                    changeStatus: function(e) {
                        if (e.o) {
                            var t = this.businesses.findIndex((function(t) {
                                return t.i === e.i
                            }));
                            this.businesses[t].s = !this.businesses[t].s, this.emitServer("ChangeBusinessStatus", e.i)
                        }
                    },
                    RsFoodBusinesses: function(e) {
                        this.businesses.length > 0 || (this.businesses = e.d)
                    },
                    showBusiness: function(e) {
                        this.$emit("push-page", {
                            extends: X_,
                            data: function() {
                                return {
                                    business: e
                                }
                            }
                        })
                    }
                },
                mounted: function() {},
                computed: {},
                created: function() {
                    this.NumberFormatter = new Intl.NumberFormat("en-US", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    }), this.addEvent("RsFoodBusinesses", this.RsFoodBusinesses), this.emitServer("RqFoodBusinesses"), this.dev && (this.businesses = [{
                        i: 0,
                        n: "Bean Machine",
                        s: 1,
                        o: !1,
                        x: 0,
                        y: 0,
                        motd: "<b>Hallo liebe Gäste!</b> <br/> Heute gibt es 2x Kaffee zum Preis von einen für alle Staatsbeamten! <br/><br/> <u>Die aktuellen Preise:</u> <ul><li>Dönerspieß: $50</li><li>Dönerspieß: $50</li><li>Dönerspieß: $50</li></ul>"
                    }, {
                        i: 1,
                        n: "Lucky Plucker",
                        s: 0,
                        o: !0,
                        x: 0,
                        y: 0,
                        motd: "Test <br/> Silber kartoffel"
                    }, {
                        i: 2,
                        n: "Baradona",
                        s: 0,
                        o: !1,
                        x: 0,
                        y: 0,
                        motd: "Test <br/> Silber kartoffel"
                    }])
                }
            },
            Q_ = Y_,
            ep = (a("bdee"), Object(d["a"])(Q_, W_, K_, !1, null, "6920d579", null)),
            tp = ep.exports,
            ap = {
                name: "HomeApp",
                data: function() {
                    return {
                        apps: [{
                            name: "Telefon",
                            app: gd,
                            icon: "./images/phone/call.png"
                        }, {
                            name: "Kontakte",
                            app: Hd,
                            icon: "./images/phone/contacts.png"
                        }, {
                            name: "SMS",
                            app: Jd,
                            icon: "./images/phone/sms.png"
                        }, {
                            name: "Bank",
                            app: Jh,
                            icon: "./images/phone/bank.png"
                        }, {
                            name: "Info",
                            app: oh,
                            icon: "./images/phone/info.png"
                        }, {
                            name: "Export",
                            app: th,
                            icon: "./images/phone/export.png"
                        }, {
                            name: "Service",
                            app: gh,
                            icon: "./images/phone/service.png"
                        }, {
                            name: "Navigation",
                            app: Hh,
                            icon: "./images/phone/nav.png"
                        }, {
                            name: "Life",
                            app: t_,
                            icon: "./images/phone/life.png"
                        }, {
                            name: "Settings",
                            app: M_,
                            icon: "./images/phone/settings.png"
                        }, {
                            name: "Crypto",
                            app: G_,
                            icon: "./images/phone/cryptoapp.png"
                        }],
                        date: new Date,
                        months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
                        days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
                        wallpaper: "https://cdn.discordapp.com/attachments/1009462217856524390/1141282401771860008/1.png"
                    }
                },
                methods: {
                    openApp: function(e) {
                        this.$emit("push-page", e)
                    },
                    formatMinutes: function() {
                        var e = this.date.getMinutes();
                        return e < 10 && (e = "0" + e), e
                    },
                    formatMonth: function() {
                        return this.months[this.date.getMonth()]
                    },
                    formatDay: function() {
                        return this.days[this.date.getDay()]
                    },
                    UpdateWallpaper: function(e) {
                        
                        this.wallpaper = e, Bn.wallpaperId = e
                    }
                },
                computed: {
                    getTime: function() {
                        return "".concat(this.date.getHours(), ":").concat(this.formatMinutes())
                    },
                    getDate: function() {
                        return "".concat(this.formatDay(), ", ").concat(this.date.getDate(), ". ").concat(this.formatMonth())
                    },
                    getWallpaperImage: function() {
                        var e = this.wallpaper;
                        return "background-image: url(" + e + ")"
                    }
                },
                created: function() {
                    var e = this;
                    this.addEvent("UpdateWallpaper", this.UpdateWallpaper), setInterval((function() {
                        return e.date = new Date;
                    }), 1e3)
                }
            },
            ip = ap,
            sp = (a("cc26"), Object(d["a"])(ip, qm, Jm, !1, null, "53b7c512", null)),
            np = sp.exports,
            rp = {
                name: "Phone",
                data: function() {
                    return {
                        visible: !1,
                        toast: "",
                        pageStack: [np],
                        ringtoneAudio: new Audio("https://sibaui.deinsh.eu/sound/ringtone/" + Bn.ringtoneId + ".mp3"),
                        volume: Bn.volume
                    }
                },
                methods: {
                    pushPage: function(e) {
                        this.pageStack.push(e)
                    },
                    backPage: function() {
                        this.pageStack.pop()
                    },
                    homePage: function() {
                        this.pageStack = [np]
                    },
                    togglePhone: function(e) {
                        this.visible = e, this.emitServer("RqContacts")
                    },
                    showToast: function(e) {
                        var t = this;
                        this.toast = e, setTimeout((function() {
                            return t.toast = ""
                        }), 3e3)
                    },
                    updateChat: function(e, t, a, i) {
                        this.emitServer("VoiceSound", "phoneMessagetone", !1, "phoneSound"), void 0 == Bn.smsChats[e] || (Bn.smsChatList.find((function(t) {
                            return t.i == e
                        })).d = Date.now() / 1e3, Bn.smsChats[e].push({
                            n: t,
                            m: a,
                            d: Date.now() / 1e3
                        }))
                    },
                    addChat: function(e, t, a) {
                        this.emitServer("VoiceSound", "phoneMessagetone", !1, "phoneSound"), Bn.smsChats[e] = [{
                            n: t,
                            m: a,
                            d: Date.now() / 1e3
                        }]
                    },
                    openCallApp: function(e, t) {
                        if (this.emit("UpdateView", "StopPlayingRingtone", []), 0 != e) return 0 == t ? this.emitServer("VoiceSound", "phoneDialtone", true, "phoneSound") : 1 == t ? Bn.callMute || (this.ringtoneAudio.play(), this.ringtoneAudio.volume = this.volume / 100, this.ringtoneAudio.loop = !0) : 2 == t && (Bn.activeCallTime = 0, this.ringtoneAudio.pause(), this.emit("VoiceStop", "phoneSound")), Bn.activeCall = e, void this.pageStack.push({
                            extends: pd,
                            data: function() {
                                return {
                                    number: e,
                                    status: t
                                }
                            }
                        });
                        0 == e && (Bn.activeCallTime = -1), this.emitServer("VoiceStop", "phoneDialtone"), this.emitServer("VoiceStop", "phoneSound"), this.ringtoneAudio.pause(), Bn.activeCall = 0, this.homePage()
                    },
                    rsContacts: function(e, af) {
                        this.contactList = JSON.parse(e), Bn.ownNumber = af, Bn.contactList = JSON.parse(e), Bn.contacts = JSON.parse(e).reduce((function(e, t) {
                            return Object(o["a"])(Object(o["a"])({}, e), {}, Object(Da["a"])({}, t.i, t))
                        }), {})
                    },
                    rsPhoneHistory: function(e) {
                        Bn.phoneHistory = e
                    },
                    addPhoneHistory: function(e) {
                        Bn.phoneHistory.unshift(e)
                    },
                    SendPhoneSettings: function(e, t, a, i) {
                        Bn.smsMute = e, Bn.callMute = t, Bn.ringtoneId = a, Bn.volume = i, this.updateRingtone(Bn.ringtoneId)
                    },
                    updateRingtone: function(e) {
                        this.ringtoneAudio = new Audio("https://sibaui.deinsh.eu/sound/ringtone/" + e + ".mp3")
                    },
                    updateRingtoneVolume: function(e) {
                        Bn.volume = e, this.volume = e
                    }
                },
                created: function() {
                    this.addEvent("GoToHomePage", this.homePage), this.addEvent("SendPhoneSettings", this.SendPhoneSettings), this.addEvent("AddPhoneHistory", this.addPhoneHistory), this.addEvent("RsContacts", this.rsContacts), this.addEvent("RsPhoneHistory", this.rsPhoneHistory), this.addEvent("UpdateRingtone", this.updateRingtone), this.addEvent("UpdateRingtoneVolume", this.updateRingtoneVolume), this.emitServer("RqContacts"), this.addEvent("Phone", this.togglePhone), this.addEvent("UpdateChat", this.updateChat), this.addEvent("AddChat", this.addChat), this.addEvent("CallApp", this.openCallApp), this.emitServer("GetPhoneSettings")
                }
            },
            op = rp,
            cp = (a("6470"), Object(d["a"])(op, Um, $m, !1, null, "60db467a", null)),
            lp = cp.exports,
            up = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }]
                }, [t("div", {
                    staticClass: "xmenu"
                }, [t("div", {
                    staticClass: "xmenu-box"
                }, [t("ul", {
                    staticClass: "xmenu-box-circle",
                    class: ["xmenu-box-circle-parts-" + e.items.length]
                }, e._l(e.items, (function(a, i) {
                    return t("li", {
                        key: i,
                        staticClass: "xmenu-box-circle-slice",
                        class: ["xmenu-box-circle-slice-" + i],
                        on: {
                            mouseover: function(t) {
                                return e.selectItem(a)
                            }
                        }
                    }, [t("div", {
                        staticClass: "xmenu-box-circle-slice-content"
                    }, [t("div", {
                        staticClass: "xmenu-box-circle-slice-content-text"
                    }, [e.isAnimations ? t("div", {
                        staticClass: "xmenu-box-circle-slice-content-text-text"
                    }, [e._v(e._s(a.text))]) : t("div", {
                        staticClass: "xmenu-box-circle-slice-content-text-image"
                    }, [t("img", {
                        attrs: {
                            src: "images/hud/xmenu/" + a.event + ".png",
                            alt: a.text
                        },
                        style: {
                           width: "4vh",
                           height: "4vh"
                       },
                    })])]), e.isAnimations ? t("div", {
                        staticClass: "xmenu-box-circle-slice-content-number"
                    }, [t("div", [e._v(e._s(a.slot))])]) : e._e()])])
                })), 0)])]), t("div", {
                    staticClass: "xmenu-middle",
                    on: {
                        mouseover: function(t) {
                            return e.selectItem({
                                text: "Schließen",
                                event: "",
                                i: -1,
                                slot: 0
                            })
                        }
                    }
                }, [e.isAnimations ? t("div", [e._v(" " + e._s(e.activeItem.text) + " ")]) : t("div", {
                    staticClass: "xmenu-middle-icon"
                }, [
                    ["Schließen".toLowerCase(), "Beenden".toLowerCase()].includes(e.activeItem.text.toLowerCase()) || e.isAnimations ? e._e() : t("img", {
                        attrs: {
                            src: "images/hud/xmenu/" + e.activeItem.event + ".png",
                            alt: e.activeItem.text
                        }
                    }), t("span", [e._v(e._s(e.activeItem.text))])
                ])]), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.point,
                        expression: "point"
                    }],
                    staticClass: "point"
                })])
            },
            mp = [],
            dp = {
                name: "XMenu",
                data: function() {
                    return {
                        dataItems: [],
                        items: [],
                        visible: !1,
                        activeItem: {
                            text: "Schließen",
                            event: "",
                            args: "",
                            i: -1,
                            slot: 0
                        },
                        point: !1,
                        isAnimations: !1
                    }
                },
                watch: {
                    dataItems: function(e) {
                        this.items = this.getItems(e)
                    },
                    items: function(e) {
                        this.visible = e.length > 0
                    }
                },
                methods: {
                    setDataItems: function(e) {
                        document.addEventListener("keyup", this.onKeyUp), null != e ? this.dataItems = e : this.point = !0
                    },
                    selectItem: function(e) {
                        this.activeItem = e
                    },
                    onKeyUp: function(e) {
                        if ("x" === e.key.toLowerCase() || "n" === e.key.toLowerCase()) {
                            if (this.emit("XMenuClearMarker"), document.removeEventListener("keyup", this.onKeyUp), this.point) return void(this.point = !1);
                            this.items = [], this.activeItem.i > -1 && fuckThistwo("selectXMENU", this.activeItem.event, this.activeItem.args), this.dataItems = []
                        }
                    },
                    getItems: function(e) {
                        this.isAnimations = void 0 !== e.find((function(e) {
                            return e.text.toString().toLowerCase() === "Animation beenden".toString().toLowerCase()
                        }));
                        var t, a = 1,
                            s = [],
                            n = Object(i["a"])(e);
                        try {
                            for (n.s(); !(t = n.n()).done;) {
                                var r, o = t.value;
                                if (!o) return;
                                s.push({
                                    slot: null !== (r = o.slot) && void 0 !== r ? r : a,
                                    text: o.text,
                                    event: o.event,
                                    server: o.server,
                                    anim: o.anim,
                                    args: o.args,
                                    i: a
                                }), a++
                            }
                        } catch (c) {
                            n.e(c)
                        } finally {
                            n.f()
                        }
                        return s
                    }
                },
                created: function() {
                    this.addEvent("XMenu", this.setDataItems), this.dev && window.events["XMenu"]([])
                }
            },
            hp = dp,
            _p = (a("8dfb"), Object(d["a"])(hp, up, mp, !1, null, "188ecc7c", null)),
            pp = _p.exports,
            vp = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: !e.hidden,
                        expression: "!hidden"
                    }],
                    staticClass: "player-hud"
                }, [e.blackScreen ? t("div", {
                    staticClass: "blackscreen"
                }) : e._e(), e.racing ? t("div", [t("div", {
                    staticClass: "racingcountdown",
                    class: {
                        racingstarted: 1 == e.racingStarted
                    }
                }, [e._v(" " + e._s(e.getRaceTime) + " "), t("br"), e.racingStarted && 0 != e.racingNeeded ? t("b", [e._v(e._s(e.getRacingOerlay) + " VERBLEIBEND ")]) : e._e()]), t("div", {
                    staticClass: "racing-winner"
                }, e._l(e.racingWinner, (function(a, i) {
                    return t("p", {
                        key: i
                    }, [e._v(" " + e._s(a.p) + " " + e._s(a.n) + " - " + e._s(a.t) + " ")])
                })), 0)]) : e._e(), e.countdown ? t("div", {
                    staticClass: "countdown"
                }, [e._v(" " + e._s(e.getCountdownOverlay) + " Sek. verbleibend ")]) : e._e(), t("div", {
                    staticClass: "player-hud-info"
                }, [t("div", {
                    staticClass: "player-hud-info-icons"
                }, [t("div", {
                    staticClass: "player-hud-info-icon"
                }, [t("img", {
                    staticClass: "funk",
                    attrs: {
                        src: "images/hud/player/funk" + e.status + ".png",
                        alt: "funk_icon"
                    }
                })]), t("div", {
                    staticClass: "player-hud-info-icon"
                }, [t("img", {
                    staticClass: "voice align-items-center",
                    attrs: {
                        src: "images/hud/player/mic_" + e.voiceRange + ".png",
                        alt: "voice_icon"
                    }
                })])]), t("div", {
                    staticClass: "player-hud-info-date"
                }, [e._v(e._s(e.date))]), t("div", {
                    staticClass: "player-hud-info-money-box"
                }, [t("div", {
                    staticClass: "player-hud-info-money-amount"
                }, [e._v(e._s(e.money.toLocaleString("de-DE")))]), t("div", {
                    staticClass: "player-hud-info-money-icon"
                }, [e._v("$")])]), 0 != this.moneyChanged ? t("div", {
                    staticClass: "player-hud-info-money-box-changed"
                }, [t("div", {
                    staticClass: "player-hud-info-money-amount",
                    class: {
                        "positive-amount": this.moneyChanged > 0,
                        "negative-amount": this.moneyChanged < 0
                    }
                }, [e._v(" " + e._s(this.moneyChanged > 0 ? "+" : "") + " " + e._s(this.moneyChanged.toLocaleString("de-DE")) + " $ ")])]) : e._e()]), e.hungerModule ? t("div", {
                    staticClass: "player-circles"
                }, [t("div", {
                    staticClass: "player-circles-hunger",
                    class: {
                        "player-circles-danger": e.hunger <= 25
                    }
                }, [t("div", {
                    staticClass: "percent"
                }, [t("svg", [t("circle", {
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                }), t("circle", {
                    style: {
                        strokeDashoffset: 16 * e.hunger / 100 - 16 + "vh",
                        stroke: e.hunger <= 25 ? "red" : ""
                    },
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                })]), e._m(0)])]), t("div", {
                    staticClass: "player-circles-thirst",
                    class: {
                        "player-circles-danger": e.thirst <= 25
                    }
                }, [t("div", {
                    staticClass: "percent"
                }, [t("svg", [t("circle", {
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                }), t("circle", {
                    style: {
                        strokeDashoffset: 16 * e.thirst / 100 - 16 + "vh",
                        stroke: e.thirst <= 25 ? "red" : ""
                    },
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                })]), e._m(1)])]), t("div", {
                    staticClass: "player-circles-fitness",
                    class: {
                        "player-circles-danger": e.fitness <= 25
                    }
                }, [t("div", {
                    staticClass: "percent"
                }, [t("svg", [t("circle", {
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                }), t("circle", {
                    style: {
                        strokeDashoffset: 16 * e.fitness / 100 - 16 + "vh",
                        stroke: e.fitness <= 25 ? "red" : ""
                    },
                    attrs: {
                        cx: "2vh",
                        cy: "2vh",
                        r: "2.5vh"
                    }
                })]), e._m(2)])])]) : e._e(), e.paintballVisiblity ? t("div", {
                    staticClass: "paintball-warning"
                }, [t("div", {
                    staticClass: "paintball-warning-box"
                }), e._m(3), t("div", {
                    staticClass: "paintball-warning-box"
                })]) : e._e(), e.trainingDutyVisibility ? t("div", {
                    staticClass: "training-duty-warning"
                }, [t("div", {
                    staticClass: "training-duty-warning-box"
                }), e._m(4), t("div", {
                    staticClass: "training-duty-warning-box"
                })]) : e._e(), e.vehData ? t("div", {
                    staticClass: "veh-data"
                }, [e._m(5), t("div", {
                    staticClass: "veh-data-box"
                }, [e._v(" " + e._s(e.speed) + " "), t("br"), e._v(" " + e._s(e.topspeed) + " "), t("br"), e._v(" " + e._s(e.getTime100) + " "), t("br"), e._v(" " + e._s(e.getTime200) + " ")]), e._m(6)]) : e._e(), e.prophuntVisible ? t("div", {
                    staticClass: "prophunt-hud"
                }, [t("div", {
                    staticClass: "prophunt-text-box-area"
                }, [t("div", {
                    staticClass: "prophunt-text-box"
                }, [t("div", {
                    staticClass: "prophunt-text"
                }, [e._v("Noch "), t("span", {
                    staticClass: "prophunt-count"
                }, [e._v(e._s(this.prophuntPropCount))]), e._v(" Objekte")]), t("div", {
                    staticClass: "prophunt-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/object.png",
                        alt: "prophunt_object"
                    }
                })])])]), t("div", {
                    staticClass: "prophunt-text-center-area"
                }, [t("div", {
                    staticClass: "prophunt-text-center"
                }, [e._v(e._s(this.prophuntIsSeeker ? "Suche und eliminiere die Objekte!" : 'Verstecke dich und fixiere deine Position mit "E"'))])])]) : e._e(), e.activityVisible ? t("div", {
                    staticClass: "activity-hud"
                }, [t("i", {
                    staticClass: "fa fa-bell fa-4x"
                }), t("i", {
                    staticClass: "fa fa-bell fa-6x"
                }), t("i", {
                    staticClass: "fa fa-bell fa-4x"
                })]) : e._e(), t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.point,
                        expression: "point"
                    }],
                    staticClass: "point"
                })])
            },
            fp = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "number"
                }, [t("img", {
                    attrs: {
                        src: "./images/hud/hamburger.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "number"
                }, [t("img", {
                    attrs: {
                        src: "./images/hud/water.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "number"
                }, [t("img", {
                    attrs: {
                        src: "./images/hud/fitness.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "paintball-warning-box paintball-warning-text"
                }, [t("div", {
                    staticClass: "paintball-warning-text-big"
                }, [e._v("Achtung")]), t("div", {
                    staticClass: "paintball-warning-text-small"
                }, [e._v("Du bist außerhalb der Zone!")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "training-duty-warning-box training-duty-warning-text"
                }, [t("div", {
                    staticClass: "training-duty-warning-text-big"
                }, [e._v("Trainingsdienst")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "veh-info-box"
                }, [e._v(" Speed: "), t("br"), e._v(" Topspeed: "), t("br"), e._v(" 0 auf 100: "), t("br"), e._v(" 0 auf 200: ")])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "veh-unit-box"
                }, [e._v(" km/h "), t("br"), e._v(" km/h "), t("br"), e._v(" s "), t("br"), e._v(" s ")])
            }],
            bp = (a("4d90"), {
                name: "PlayerHud",
                data: function() {
                    return {
                        money: 0,
                        blackmoney: 0,
                        teamId: 1,
                        moneyChanged: 0,
                        voiceRange: 2,
                        status: 3,
                        inVehicle: !1,
                        point: !1,
                        blackScreen: !1,
                        racing: !1,
                        racingNeeded: 0,
                        racingStarted: !1,
                        racingTime: 10,
                        racingInterval: void 0,
                        racingWinner: [],
                        hungerModule: !0,
                        vehData: !1,
                        speed: 0,
                        topspeed: 0,
                        time0: 0,
                        time100: 0,
                        time200: 0,
                        hunger: 100,
                        thirst: 100,
                        fitness: 100,
                        date: new Date().toLocaleString("de-DE"),
                        time: new Date().getTime(),
                        racingCheckpointSound: new Audio("./sounds/racing/Checkpoint.mp3"),
                        racingStartSound: new Audio("./sounds/racing/Start.mp3"),
                        stomachGrowl: new Audio("https://sibaui.deinsh.eu/sound/stuff/stomach.mp3"),
                        activityBellSound: new Audio("https://sibaui.deinsh.eu/sound/stuff/activityBell.mp3"),
                        prophuntKill: new Audio("./sounds/prophunt/kill.wav"),
                        paintballVisiblity: !1,
                        trainingDutyVisibility: !1,
                        hidden: 1,
                        countdown: !1,
                        countdownNeeded: 0,
                        countdownInterval: null,
                        lastInteraction: null,
                        moneyCooldown: 1e3,
                        prophuntVisible: !1,
                        prophuntPropCount: 0,
                        prophuntIsSeeker: !1,
                        activityVisible: !1
                    }
                },
                methods: {
                    setHunger: function(e) {
                        this.hunger = e
                    },
                    setThirst: function(e) {
                        this.thirst = e
                    },
                    setHungerAndThirst: function(e, t) {
                        this.hunger = e, this.thirst = t
                    },
                    setFitness: function(e) {
                        e > 100 && (e = 100), this.fitness = e
                    },
                    setBlackmoney: function(e) {
                        this.blackmoney = e
                    },
                    setMoney: function(e) {
                        var ef = Date.now();
                        if (ef - this.lastInteraction > this.moneyCooldown) {

                            this.lastInteraction = ef;
                        this.moneyChanged = e - this.money;
                        console.log(this.moneyChanged)
                         this.money = e;
                         setTimeout(() => {
                            this.moneyChanged = 0
                            console.log(this.moneyChanged + " RESET")

                        }, 4250);
                    }

                },
                    setTime: function(e) {
                        this.time = e, this.date = new Date(e).toLocaleString("de-DE")
                    },
                    VoiceRange: function(e) {
                        this.voiceRange = e
                    },
                    toggleVehicle: function(e) {
                        this.inVehicle = e
                    },
                    rsFunk: function(e) {
                        this.status = e, this.emit("SetFunkStatus", e)
                    },
                    toggle: function() {
                        this.point = !this.point
                    },
                    timeChange: function() {
                        this.time += 1e3, this.date = new Date(this.time).toLocaleString("de-DE")
                    },
                    updateNutrition: function() {
                        this.hunger < 25 && this.stomachGrowl.play()
                    },
                    setBlackscreen: function(e) {
                        this.blackScreen = e
                    },
                    startCountdownHud: function(e) {
                        this.countdown = !0, this.countdownNeeded = e, this.countdownInterval = setInterval(this.updateCountdownHud, 1e3)
                    },
                    updateCountdownHud: function() {
                        this.countdownNeeded--, 0 === this.countdownNeeded && (clearInterval(this.countdownInterval), this.countdown = !1)
                    },
                    startRaceHud: function(e) {
                        this.racingStartSound.play(), this.racingStarted = !1, this.racingTime = 10, this.racing = !0, this.racingNeeded = e, this.racingInterval = setInterval(this.racingTimeChange, 1e3)
                    },
                    updateRaceHud: function() {
                        this.racingNeeded--, 0 == this.racingNeeded ? clearInterval(this.racingInterval) : this.racingCheckpointSound.play()
                    },
                    addRaceFinishHud: function(e, t, a) {
                        this.racingWinner.push({
                            n: e,
                            t: t,
                            p: a
                        }), this.racingWinner = this.racingWinner.sort((function(e, t) {
                            return e.p - t.p
                        }))
                    },
                    stopRaceHud: function() {
                        this.racing = !1, this.racingNeeded = 0, this.racingTime = 0, this.racingWinner = [], null != this.racingInterval && clearInterval(this.racingInterval), fuckThis("fromUINot","Rennen beendet. Alle sind im Ziel", "#c72020")
                    },
                    racingTimeChange: function() {
                        this.racingStarted ? this.racingTime++ : (this.racingTime--, 0 == this.racingTime && (this.racingStarted = !0))
                    },
                    secondsToTime: function(e) {
                        var t = Math.floor(e % 3600 / 60).toString().padStart(2, "0"),
                            a = Math.floor(e % 60).toString().padStart(2, "0");
                        return t + ":" + a
                    },
                    milliSecondsToTime: function(e) {
                        var t = Math.floor(e % 60).toString().padStart(2, "0"),
                            a = Math.floor(e % 1e3).toString().padStart(3, "0");
                        return t + "." + a
                    },
                    hidePlayerHud: function(e) {
                        this.hidden = e
                    },
                    togglePaintballOutOfRange: function(e) {
                        this.paintballVisiblity = e
                    },
                    toggleTrainingDutyHud: function(e) {
                        this.trainingDutyVisibility = e
                    },
                    toggleVehData: function(e) {
                        this.vehData = e, e || (this.speed = 0, this.time0 = 0, this.time100 = 0, this.time200 = 0)
                    },
                    updateSpeed: function(e) {
                        this.speed = e, this.speed > this.topspeed && (this.topspeed = this.speed), e > 0 && 0 == this.time100 && 0 == this.time200 && (this.time0 = Date.now()), e >= 100 && 0 == this.time100 && (this.time100 = Date.now() - this.time0), e >= 200 && 0 == this.time200 && (this.time200 = Date.now() - this.time0)
                    },
                    showProphunt: function(e, t) {
                        this.prophuntIsSeeker = e, this.prophuntPropCount = t, this.prophuntVisible = !0
                    },
                    hideProphunt: function() {
                        this.prophuntVisible = !1
                    },
                    updateProphuntPropCount: function(e) {
                        this.prophuntPropCount = e, this.prophuntIsSeeker && this.prophuntKill.play()
                    },
                    setTeam: function(e) {
                        this.teamId = e, this.finallyToggleActivityBell()
                    },
                    finallyToggleActivityBell: function() {
                        var e = this;
                        this.activityBellSound = new Audio("https://sibaui.deinsh.eu/sound/stuff/activityBell/" + this.teamId + ".mp3"), this.activityBellSound.play(), this.activityVisible = !0, setTimeout((function() {
                            e.activityVisible = !1
                        }), 7e3)
                    },
                    toggleActivityBell: function() {
                        this.emit("GetPlayer", "team")
                    }
                },
                created: function() {
                    this.addEvent("SetMoney", this.setMoney), this.addEvent("VoiceRange", this.VoiceRange), this.addEvent("InVehicle", this.toggleVehicle), this.addEvent("RsFunk", this.rsFunk), this.addEvent("TogglePoint", this.toggle), this.addEvent("SetBlackscreen", this.setBlackscreen), this.addEvent("StartRaceHud", this.startRaceHud), this.addEvent("UpdateRaceHud", this.updateRaceHud), this.addEvent("AddRaceFinishHud", this.addRaceFinishHud), this.addEvent("StopRaceHud", this.stopRaceHud), this.addEvent("HidePlayerHud", this.hidePlayerHud), this.addEvent("ShowPaintballOutOfRange", this.togglePaintballOutOfRange), this.addEvent("ToggleTrainingDutyHud", this.toggleTrainingDutyHud), this.addEvent("SetBlackmoney", this.setBlackmoney), this.addEvent("SetHunger", this.setHunger), this.addEvent("SetThirst", this.setThirst), this.addEvent("SetHungerAndThirst", this.setHungerAndThirst), this.addEvent("SetFitness", this.setFitness), this.addEvent("ToggleVehData", this.toggleVehData), this.addEvent("UpdateSpeed", this.updateSpeed), this.addEvent("StartCountdownHud", this.startCountdownHud), this.addEvent("UpdateCountdownHud", this.updateCountdownHud), this.addEvent("ShowProphunt", this.showProphunt), this.addEvent("HideProphunt", this.hideProphunt), this.addEvent("UpdateProphuntPropCount", this.updateProphuntPropCount), this.addEvent("SetTime", this.setTime), this.addEvent("ToggleActivityBell", this.toggleActivityBell), this.addEvent("team", this.setTeam)
                },
                computed: {
                    getRacingOerlay: function() {
                        return this.racingNeeded
                    },
                    getRaceTime: function() {
                        return this.secondsToTime(this.racingTime)
                    },
                    getTime100: function() {
                        return this.milliSecondsToTime(this.time100)
                    },
                    getTime200: function() {
                        return this.milliSecondsToTime(this.time200)
                    },
                    getCountdownOverlay: function() {
                        return this.countdownNeeded
                    }
                },
                mounted: function() {
                    setInterval(this.timeChange, 1e3), setInterval(this.updateNutrition, 6e4)
                }
            }),
            gp = bp,
            yp = Object(d["a"])(gp, vp, fp, !1, null, null, null),
            Cp = yp.exports,
            kp = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "hud-bar",
                    attrs: {
                        id: "hud-bar"
                    }
                }, [t("div", {
                    staticClass: "progress position-relative",
                    attrs: {
                        id: "progress"
                    }
                }, [t("div", {
                    staticClass: "progress-bar",
                    style: {
                        width: e.percent + "%"
                    },
                    attrs: {
                        role: "progressbar",
                        "aria-valuenow": "percent",
                        "aria-valuemin": "0",
                        "aria-valuemax": "100"
                    }
                }), t("span", [e._v(e._s(e.percent) + " %")])])])
            },
            wp = [],
            Sp = {
                name: "Bar",
                data: function() {
                    return {
                        visible: !1,
                        percent: 1,
                        interval: null,
                        bar: null
                    }
                },
                methods: {
                    displayBar: function(e) {
                        0 != e ? (null != this.interval && this.hideBar(), this.visible = !0, this.interval = setInterval(this.tick, e / 100)) : this.hideBar()
                    },
                    hideBar: function() {
                        this.visible = !1, this.percent = 0, clearInterval(this.interval), this.interval = null
                    },
                    tick: function() {
                        this.percent >= 100 ? this.hideBar() : this.percent++
                    }
                },
                mounted: function() {
                    this.addEvent("Bar", this.displayBar), this.bar = document.getElementById("progress")
                }
            },
            Mp = Sp,
            xp = Object(d["a"])(Mp, kp, wp, !1, null, null, null),
            Pp = xp.exports,
            Tp = function() {
                var e = this,
                    t = e._self._c;
                return t("div")
            },
            Fp = [],
            Bp = {
                name: "Voice",
                data: function() {
                    return {
                        webSocket: null,
                        isConnected: !1,
                        isErrored: !1,
                        serverUniqueIdentifierFilter: "ukxyXZ8S1rGjFC7Gx7EtXX+S8ts=",
                        reconnectInterval: null
                    }
                },
                methods: {
                    runCommand: function(e) {
                        try {
                            this.webSocket.readyState == this.webSocket.OPEN && this.webSocket.send(e)
                        } catch (t) {
                            console.log("ERROR send", JSON.stringify(t))
                        }
                    },
               connect: function () {
                  var e = this;
                  this.webSocket = new window.WebSocket("ws://127.0.0.1:38088/"), this.webSocket.onmessage = function (t) {
                     var a = JSON.parse(t.data);
                     "string" === typeof e.serverUniqueIdentifierFilter ? a.ServerUniqueIdentifier === e.serverUniqueIdentifierFilter ? fuckThis("SaltyChat_OnMessage", t.data) : "undefined" === typeof a.ServerUniqueIdentifier && fuckThis("SaltyChat_OnError", t.data) : "string" === typeof a.ServerUniqueIdentifier ? fuckThis("SaltyChat_OnMessage", t.data) : fuckThis("SaltyChat_OnError", t.data)
                  }, this.webSocket.onopen = function () {
                     e.isConnected = !0, fuckThis("SaltyChat_OnConnected"), null != e.reconnectInterval && (clearInterval(e.reconnectInterval), e.reconnectInterval = null)
                  }, this.webSocket.onclose = function () {
                     e.isConnected = !1, fuckThis("SaltyChat_OnDisconnected"), null == e.reconnectInterval && (e.dev || (e.reconnectInterval = setInterval((function () {
                        return e.connect()
                     }), 2e3)))
                  }
               }
                },
                created: function() {
                    this.dev || (this.connect(), this.addEvent("VoiceCommand", this.runCommand))
                }
            },
            Ip = Bp,
            Ap = Object(d["a"])(Ip, Tp, Fp, !1, null, null, null),
            Dp = Ap.exports,
            Np = function() {
                var e = this,
                    t = e._self._c;
                return t("transition", {
                    attrs: {
                        name: "slide"
                    }
                }, [t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "hud-funk"
                }, [t("div", {
                    staticClass: "funk-box"
                }, [t("div", {
                    staticClass: "funk-display"
                }, [t("div", {
                    staticClass: "funk-display-content"
                }, [t("div", {
                    staticClass: "funk-display-actions"
                }, [t("div", {
                    staticClass: "funk-display-actions-input"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model.number",
                        value: e.input,
                        expression: "input",
                        modifiers: {
                            number: !0
                        }
                    }],
                    attrs: {
                        maxlength: "7",
                        disabled: !e.visible
                    },
                    domProps: {
                        value: e.input
                    },
                    on: {
                        keydown: function(t) {
                            return !t.type.indexOf("key") && e._k(t.keyCode, "enter", 13, t.key, "Enter") ? null : e.joinFunk.apply(null, arguments)
                        },
                        input: function(t) {
                            t.target.composing || (e.input = e._n(t.target.value))
                        },
                        blur: function(t) {
                            return e.$forceUpdate()
                        }
                    }
                }), t("CoreButton", {
                    attrs: {
                        disabled: !e.visible
                    },
                    on: {
                        click: e.favFunk
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-star"
                })])], 1), t("div", {
                    staticClass: "funk-display-actions-confirmation"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: !e.visible
                    },
                    on: {
                        click: e.joinFunk
                    }
                }, [e._v("Beitreten")])], 1)]), t("div", {
                    staticClass: "funk-display-actions-status"
                }, [t("span", {
                    staticClass: "text-white"
                }, [e._v("Status:")]), t("span", {
                    staticClass: "ml-auto",
                    class: {
                        "text-custom-danger": 0 == e.status,
                        "text-primary": 1 == e.status,
                        "text-custom-success": 2 == e.status
                    }
                }, [e._v(e._s(e.statusDescription))])]), t("div", {
                    staticClass: "funk-display-favourites"
                }, [t("div", {
                    staticClass: "funk-display-favourites-header"
                }, [t("span", {
                    staticClass: "font-weight-bold"
                }, [e._v("Favoriten")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.funkFavorites.length) + " / 4")])]), t("div", {
                    staticClass: "funk-display-favourites-body"
                }, e._l(e.funkFavorites, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "funk-display-favourites-body-item",
                        class: {
                            active: e.input == a
                        }
                    }, [t("span", {
                        staticClass: "mdi mdi-star favo-icon",
                        on: {
                            click: function(t) {
                                return e.deleteFavourite(i)
                            }
                        }
                    }), t("span", {
                        staticClass: "favo-title mr-auto pl-2"
                    }, [e._v("P" + e._s(i + 1))]), t("span", {
                        staticClass: "favo-title ml-auto"
                    }, [e._v(e._s(a))])])
                })), 0)])])]), t("div", {
                    staticClass: "funk-p-buttons"
                }, [t("div", {
                    staticClass: "p-button",
                    on: {
                        click: function(t) {
                            return e.logButton(1)
                        }
                    }
                }), t("div", {
                    staticClass: "p-button",
                    on: {
                        click: function(t) {
                            return e.logButton(2)
                        }
                    }
                }), t("div", {
                    staticClass: "p-button",
                    on: {
                        click: function(t) {
                            return e.logButton(3)
                        }
                    }
                }), t("div", {
                    staticClass: "p-button",
                    on: {
                        click: function(t) {
                            return e.logButton(4)
                        }
                    }
                })]), t("div", {
                    staticClass: "funk-menu-buttons"
                }, [t("div", {
                    staticClass: "menu-button",
                    on: {
                        click: e.switchStatus
                    }
                }), t("div", {
                    staticClass: "menu-button"
                }), t("div", {
                    staticClass: "menu-button"
                })])])])])
            },
            Op = [],
            Lp = {
                name: "Funk",
                components: {
                    CoreButton: x
                },
                data: function() {
                    return {
                        visible: !1,
                        join: !0,
                        status: 0,
                        statusDescription: "",
                        funk: "-------",
                        input: "",
                        funkFavorites: Bn.funkFavorites
                    }
                },
                methods: {
                    toggleFunk: function(e) {
                        this.visible = e
                    },
                    joinFunk: function() {
                        var e = parseFloat(this.input);
                        this.status = 1; this.statusDescription = "PushToTalk";
                        isNaN(e) || e < 1 || this.funk != e && (this.emitServer("JoinFunk", parseInt(100 * e)), this.funk = e)
                    },
                    setStatus: function(e) {
                        switch (this.status = e, parseInt(e)) {
                            case 0:
                                this.statusDescription = "Aus";  this.funk = 0;
                                break;
                            case 1:
                                this.statusDescription = "PushToTalk";
                                break;
                            case 2:
                                this.statusDescription = "Dauerfunk";
                                break
                        }
                    },
                    switchStatus: function() {
                        switch (this.status) {
                            case 0:
                                this.status = 1, this.statusDescription = "PushToTalk";
                                break;
                            case 1:
                                this.status = 2, this.statusDescription = "Dauerfunk";
                                break;
                            case 2:
                                this.status = 0, this.statusDescription = "Aus"; this.funk = 0;
                                break
                        }
                        this.emitServer("SetFunk", this.status)
                    },
                    favFunk: function() {
                        if (this.funkFavorites.length < 4) {
                            var e = parseFloat(this.input);
                            this.joinFunk(), Bn.funkFavorites.push(e), this.funkFavorites = Bn.funkFavorites, this.emitServer("AddFunkSettings", parseInt(e))
                        }
                    },
                    logButton: function(e) {
                        var t = parseFloat(this.funkFavorites[e - 1]);
                        isNaN(t) || t < 1 || this.funk != t && (this.emitServer("JoinFunk", parseInt(100 * t)), this.input = t, this.funk = t)
                    },
                    deleteFavourite: function(e) {
                        Bn.funkFavorites.splice(e, 1), this.funkFavorites = Bn.funkFavorites, this.emitServer("RemoveFunkSettings", e)
                    },
                    SendFunkSettings: function(e) {
                        this.funkFavorites = JSON.parse(e), Bn.funkFavorites = JSON.parse(e)
                    },
                    SendFunkData: function(a, b) {
                        this.setStatus(b);
                        this.input = a;
                        this.funk = a;
                    }
                },
                created: function() {
                    this.addEvent("Funk", this.toggleFunk), this.addEvent("SendFunkData", this.SendFunkData), this.addEvent("SetFunkStatus", this.setStatus), this.addEvent("SendFunkSettings", this.SendFunkSettings), this.emitServer("GetFunkSettings"), this.emitServer("GetFunkData")
                }
            },
            Hp = Lp,
            zp = (a("a385"), Object(d["a"])(Hp, Np, Op, !1, null, "5dd04332", null)),
            jp = zp.exports,
            Rp = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xs-switched",
                    attrs: {
                        title: "Einsteins Erkenntnisse"
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "afk"
                }, [t("div", {
                    staticClass: "afk-timer"
                }, [e._v(" " + e._s(this.timeRemaining) + " Sekunden verbleibend ")]), this.attempts < 5 ? t("div", {
                    staticClass: "afk-calculation"
                }, [t("div", {
                    staticClass: "afk-calculation-digits"
                }, [e._v(" " + e._s(this.ziffer1) + " x " + e._s(this.ziffer2) + " = ")]), t("div", {
                    staticClass: "afk-calculation-input"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    model: {
                        value: e.codeInput,
                        callback: function(t) {
                            e.codeInput = e._n(t)
                        },
                        expression: "codeInput"
                    }
                })], 1), this.attempts > 0 ? t("div", {
                    staticClass: "afk-calculation-result"
                }, [this.success ? t("span", [t("span", {
                    staticClass: "text-custom-success mdi mdi-check"
                }), e._v(" Richtig")]) : t("span", [t("span", {
                    staticClass: "text-custom-danger mdi mdi-close"
                }), e._v(" Falsch")])]) : e._e()]) : e._e(), t("div", {
                    staticClass: "afk-confirmation"
                }, [t("CoreButton", {
                    staticClass: "success",
                    on: {
                        click: e.checkCode
                    }
                }, [e._v("Auflösen")])], 1)])])
            },
            Vp = [],
            Ep = {
                name: "Afk",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        codeInput: "",
                        attempts: 0,
                        success: 0,
                        ziffer1: 0,
                        ziffer2: 0,
                        result: 0,
                        timeout: null,
                        timeRemaining: 120
                    }
                },
                created: function() {
                    var e = this;
                    this.ziffer1 = Math.floor(Math.random() * Math.floor(9)) + 1, this.ziffer2 = Math.floor(Math.random() * Math.floor(9)) + 1, this.result = this.ziffer1 * this.ziffer2, this.timeout = setInterval((function() {
                        e.timeRemaining--, 0 == e.timeRemaining && (clearInterval(e.timeout), e.emitServer("SibsibMathe"), e.hide())
                    }), 1e3)
                },
                methods: {
                    close: function() {},
                    checkCode: function() {
                        this.codeInput == this.result ? (this.success = 1, clearInterval(this.timeout), this.hide()) : (this.success = 0, this.attempts += 1, this.attempts >= 5 && (clearInterval(this.timeout), this.emitServer("SibsibMathe"), this.hide()))
                    }
                }
            },
            Gp = Ep,
            Wp = (a("28e4"), Object(d["a"])(Gp, Rp, Vp, !1, null, "135ac208", null)),
            Kp = Wp.exports,
            Up = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "images/loginLogo.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Hilfestellung ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("VisualRP")]), t("span", [e._v("Hilfestellung")]), t("span", [e._v(e._s(e.pageTitle))]), null != e.subPageTitle ? t("span", [e._v(e._s(e.subPageTitle))]) : e._e()]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 0 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(0, "Willkommen")
                        }
                    }
                }, [t("a", {}, [e._v("Willkommen")])]), t("li", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(1, "Inventar")
                        }
                    }
                }, [t("a", {}, [e._v("Inventar")])]), t("li", {
                    class: {
                        active: 2 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(2, "Leben")
                        }
                    }
                }, [t("a", {}, [e._v("Leben")])]), t("li", {
                    class: {
                        active: 3 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(3, "Wohnen")
                        }
                    }
                }, [t("a", {}, [e._v("Wohnen")])]), t("li", {
                    class: {
                        active: 4 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(4, "Handy")
                        }
                    }
                }, [t("a", {}, [e._v("Handy")])]), t("li", {
                    class: {
                        active: 5 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(5, "Jobs")
                        }
                    }
                }, [t("a", {}, [e._v("Jobs")])]), t("li", {
                    class: {
                        active: 6 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(6, "Fahrzeuge")
                        }
                    }
                }, [t("a", {}, [e._v("Fahrzeuge")])]), t("li", {
                    class: {
                        active: 7 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(7, "Support")
                        }
                    }
                }, [t("a", {}, [e._v("Support")])])]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [0 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-guide-welcome"
                }, [t("h1", [e._v("Willkommen auf VisualRP")]), t("p", [e._v(" Schön, dass du es bis hier geschafft hast."), t("br"), t("br"), e._v(" In diesem Einsteigerguide zeigen wir dir alle wichtigen Dinge, die du während deines Alltags in Los Santos gebrauchen kannst."), t("br"), e._v(" Wir beantworten dir hier einige grundlegende Fragen rund um deinen Charakter, unsere Spielsysteme und die Benutzeroberfläche. Keine Angst, das Ganze ist im Endeffekt ziemlich einfach. Sobald du dich einmal ins Spiel eingefunden hast, wird alles ganz selbstverständlich für dich sein. "), t("br"), t("br"), e._v("Solltest du noch weitere Fragen haben, schau einfach mal in unserem Forum nach. Dort findest du ebenso nützliche Themen rund um VisualRP. "), t("br"), t("br"), e._v("Viel Spaß beim Spielen. ")])]) : e._e(), 1 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-inventory"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-image"
                }), t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Öffnen")
                        }
                    }
                }, [e._v("Öffnen")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Verschieben")
                        }
                    }
                }, [e._v("Verschieben ")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Splitten")
                        }
                    }
                }, [e._v("Splitten")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            e.changeSubPage(3, "Größe (Rucksäcke)")
                        }
                    }
                }, [e._v("Größe (Rucksäcke) ")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v(" Wie öffne ich mein Inventar?")]), t("p", [e._v(" Das Inventar öffnest du mit der “I” Taste. Hier findest du alle Items, die du bei dir trägst. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v(" Wie verschiebe ich Dinge im Inventar?")]), t("p", [e._v(" Du öffnest das Inventar und drückst die linke Maustaste auf das Item, das du bewegen willst. Hierbei lässt du die Taste gedrückt. Dann ziehst du das Item an den Platz, an dem du dieses haben willst. Einfach erklärt per “Drag and Drop” das Item bewegen. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v(" Wie teile ich Items auf?")]), t("p", [e._v(" Du öffnest das Inventar und drückst Shift. Danach wählst du den Itemstapel mit der linken Maustaste, welchen du splitten möchtest, aus und ziehst ihn auf die Position, an der der zweite Teil liegen soll. Danach lässt du die linke Maustaste und die Shift-Taste los und gibst beim auftauchenden Menü die Anzahl des neuen Itemsets ein. Kurz: “Drag and Drop” kombiniert mit der Shift-Taste. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v(" Was für Rücksacke gibt es?")]), t("p", [e._v(" Du kannst dein Inventar durch Rucksäcke erweitern. Hier hast du die Möglichkeit, zwischen zwei Größen des Rucksacks zu wählen. Zum einen gibt es den Osprey Rucksack. Mit diesem hast du die Möglichkeit, 67 Kilogramm zu tragen und 8 zusätzliche Slots im Inventar zu erhalten. Zum anderen wird der Pacsafe Rucksack zum Kauf angeboten. Bei diesem hast du 43 Kilogramm und zusätzliche 18 freie Slots. Einen Rucksack wendest du an, indem du mit der linken Maustaste auf den Rucksack klickst und diesen benutzt. "), t("br"), t("br"), e._v("Die Rucksäcke sind in jedem Ammu-Nation in Los Santos zu kaufen. ")])]) : e._e()])]) : e._e(), 2 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-life"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-image"
                }), t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Sozialbonus")
                        }
                    }
                }, [e._v("Sozialbonus ")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Krankenversicherung")
                        }
                    }
                }, [e._v(" Krankenversicherung ")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "LifeInvader")
                        }
                    }
                }, [e._v("LifeInvader ")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(3, "Banken")
                        }
                    }
                }, [e._v("Banken")]), t("li", {
                    class: {
                        active: 4 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(4, "Führerscheine")
                        }
                    }
                }, [e._v(" Führerscheine ")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v("Sozialbonus")]), t("p", [e._v(" Der Sozialbonus ist ein kleines Zusatzeinkommen, welches du vom Staat erhältst. Jede Stunde, die du auf der Insel verbringst, bringt dir ein kleines “Taschengeld”. Dieses erhältst du ab dem Moment, ab dem du eingemietet bist und du musst es dir selbständig in der Nähe der Pillboxgarage Richtung Vespucci abholen. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Krankenversicherung")]), t("p", [e._v(" Die Krankenversicherung bringt dir eine Verkürzung der Komazeit. Im Gegenzug musst du jede Stunde einen Betrag für die Versicherung bezahlen. Es gibt zwei verschiedene Versicherungen: eine kostet etwas mehr, verkürzt die Komazeit aber dementsprechend auch mehr - eine kostet etwas weniger, die Komazeit ist aber nur etwas verkürzt. Die Krankenversicherungen kannst du in der Nähe des Juweliers (Rockford) abschließen. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v("LifeInvader")]), t("p", [e._v(" Am LifeInvader kannst du Werbungen schalten. Hierfür fahre einfach zum Life Invader und finde den passenden NPC. Die Werbung kann beispielsweise nützlich sein, um Ware zu verkaufen oder einen Mietplatz zu finden. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v("Banken")]), t("p", [e._v(" Banken findest du ganz einfach auf der Karte, welche du mit der “ESC”-Taste öffnest. Diese sind mit einem grünen Dollarzeichen markiert. Bei diesen kannst du Geld ein- und auszahlen, deinen Kontostand prüfen und deine Kontobewegungen verfolgen. "), t("br"), t("br"), e._v("Zusätzlich gibt es überall auf der Insel ATMs: ganz normale Bankautomaten, an denen du dieselben Dinge tun kannst, wie in den Banken. Allerdings bezahlst du hier einen kleinen Teil dessen, was du vom Konto abhebst, als Gebühr an die zuständige Bank. ")])]) : e._e(), 4 == e.subPage ? t("div", [t("h1", [e._v("Führerscheine")]), t("p", [e._v(" Führerscheine kannst du an der Fahrschule von Los Santos machen. Hierfür brauchst du grundlegende Kenntnisse der StVO. Erwerbbar sind alle Fahrlizenzen, Fluglizenzen und Bootslizenzen. Preise, sowie Vorbereitungen sind an der Fahrschule in der Nähe des Hafens zu erfragen. ")])]) : e._e()])]) : e._e(), 3 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-living"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Einmieten")
                        }
                    }
                }, [e._v("Einmieten")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Ausmieten")
                        }
                    }
                }, [e._v("Ausmieten")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Kaufen")
                        }
                    }
                }, [e._v("Kaufen")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(3, "Verkaufen")
                        }
                    }
                }, [e._v("Verkaufen")]), t("li", {
                    class: {
                        active: 4 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(4, "Klingelschild")
                        }
                    }
                }, [e._v(" Klingelschild ")]), t("li", {
                    class: {
                        active: 5 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(5, "Verstecke")
                        }
                    }
                }, [e._v("Verstecke")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v("Einmieten")]), t("p", [e._v(" Einmieten ist ganz einfach! Geh zu dem Hauseingang des Hauses, an dem du dich einmieten möchtest. Prüfe mit der “E”-Taste, ob noch ein Platz frei ist. Sollte dies der Fall sein, so klicke auf das angezeigte Feld “Einmieten”. Die Miete wird automatisch auf 25 $ eingestellt, kann jedoch vom Vermieter geändert werden. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Ausmieten")]), t("p", [e._v(" Um dich bei einem Haus auszumieten, gehst du wie beim Einmieten zu dem Hauseingang und drückst “E”. Danach wählst du die Option “Ausmieten” aus. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v("Kaufen")]), t("p", [e._v(" Ist ein Haus noch nicht verkauft, kannst du einfach zum Eingang des Hauses gehen, welches noch nicht verkauft wurde. Wähle das Feld 'kaufen'. Das Geld wird vom Konto abgezogen. Wenn dies schon verkauft wurde, funktioniert ein Kauf eines Hauses durch einen Kaufvertrag. Diesen erhältst du am Regierungs-Shop in der Mitte der Stadt. "), t("br"), t("br"), e._v("Natürlich brauchst du dann auch einen Verkäufer. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v(" Verkaufen")]), t("p", [e._v(" Du kannst dein Haus ganz einfach verkaufen. Fahr zum Regierungs-Shop und kaufe dir einen Kaufvertrag. In diesem müssen der Name des Käufers, der Name des Verkäufers und der Betrag eingetragen werden. Ist dies alles eingetragen, müssen der Käufer und der Verkäufer unterschreiben. Das Geld wird danach vom Konto des Käufers abgebucht und auf das Konto des Verkäufers gebucht. ")])]) : e._e(), 4 == e.subPage ? t("div", [t("h1", [e._v("Klingelschild")]), t("p", [e._v(" Das Klingelschild deines Hauses kannst du ändern. Gehe hierzu zu dem Eingang deines Hauses. Drücke hier “E” und auf das Feld “Klingelschild ändern”. Nun kannst du das Klingelschild deines Hauses ändern. Dieses Klingelschild wird gesehen, wenn jemand an dem Eingang des Hauses vorbeiläuft. ")])]) : e._e(), 5 == e.subPage ? t("div", [t("h1", [e._v("Verstecke")]), t("p", [e._v(" Du kannst in deinem Haus ganz einfach etwas verstecken. Bist du in deiner Wohnung/deinem Haus, gehe zur Eingangstür und drücke “E”. Hier hast du die Auswahl aus mehreren Verstecken, welche du verwenden kannst. Diese Verstecke sind mit Zahlen ausgegeben. Wähle eines aus und du kannst ab dem Zeitpunkt Gegenstände dort einlagern. Ändern kannst du dies genauso wie beim Neubauen eines Verstecks. Einfach zum Eingang gehen, dort “E” drücken und ein anderes Versteck auswählen. Wird das Versteck von dir geändert oder gelöscht, so gehen die Gegenstände, die sich in deinem Versteck befinden, verloren. ")])]) : e._e()])]) : e._e(), 4 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-handy"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Navigation")
                        }
                    }
                }, [e._v("Navigation")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Service")
                        }
                    }
                }, [e._v("Service")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Kontakte")
                        }
                    }
                }, [e._v("Kontakte")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(3, "SMS")
                        }
                    }
                }, [e._v("SMS")]), t("li", {
                    class: {
                        active: 4 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(4, "Anrufe")
                        }
                    }
                }, [e._v("Anrufe")]), t("li", {
                    class: {
                        active: 5 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(5, "LifeInvader")
                        }
                    }
                }, [e._v("LifeInvader ")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v("Navigation")]), t("p", [e._v(" Über den Unterpunkt „Navigation“ findest du wichtige öffentliche Orte in Los Santos: Garagen, Jobs und Krankenhäuser. Mit einem Mausklick auf den gewünschten Ort wird der GPS-Punkt gesetzt und dir als lilane Markierung auf deiner Karte angezeigt. "), t("br"), t("br"), e._v("Außerdem kannst du dir dort den Standort von Fahrzeugen im GPS markieren. Mit einem Klick der linken Maustaste fügst du dem GPS-System den Standort von Fahrzeugen hinzu, die unter „Navigation“ angezeigt werden. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Service")]), t("p", [e._v(" Der Unterpunkt „Service“ lässt dich ganz einfach und schnell die staatlichen Behörden kontaktieren. Du findest dort LSPD (Polizei), LSMC (Krankenhaus), DMV (Fahrschule), DPOS (Abschleppdienst) und LS Customs (Tuningwerkstatt). "), t("br"), t("br"), e._v("Klickst du eine der genannten Behörden an, kannst du eine Anfrage abschicken. Gib den Grund deiner Serviceanfrage ein und klicke unten rechts auf die „+“-Taste. Die Behörde wird mit deiner Anfrage und deiner Telefonnummer kontaktiert. Willst du anonym bleiben? Dann setze den Haken vor „Anonym absenden?“. "), t("br"), t("br"), e._v("Möchtest du eine Anfrage abbrechen, wähle den Service erneut aus und drücke unten links auf den Mülleimer. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v("Kontakte")]), t("p", [e._v(" Über den Unterpunkt „Kontakte“ speicherst du deine Kontakte in dein Handy ein. Klick auf das „+“ oben rechts, um einen Kontakt anzulegen. Trage einen Namen sowie die Nummer ein. Durch die Textbox kannst du deinem Kontakt eine Notiz hinzufügen (Beispiel: Cooler Typ am Flughafen). Mit einem Klick auf die Diskette unten rechts speicherst du den Kontakt. Dieser wird dir ab sofort unter den Kontakten angezeigt. "), t("br"), t("br"), e._v("Wählst du einen Kontakt aus, kannst du alle Informationen noch einmal abrufen. Mit einem Klick auf den Stift oben rechts bearbeitest du die Kontaktdetails. Der Mülleimer dient dazu, Kontakte aus deinem Handy zu löschen. Klickst du unten links auf die Sprechblase, öffnest du eine SMS mit der Nummer. Unten rechts der Telefonhörer dient dazu, die Person direkt anzurufen. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v("SMS")]), t("p", [e._v(" Deine SMS werden im Handy in einer Liste angezeigt. Dabei siehst du immer den Namen (bei vorhandenen Kontakten) oder die Telefonnummer, von welcher die SMS geschickt wurde. Mit einem Klick auf die SMS öffnet sich der Verlauf und du kannst eine Nachricht schreiben. Mit einem Klick auf das „+“ in der SMS-Übersicht kannst du eine Nummer eingeben und eine SMS verfassen. "), t("br"), t("br"), e._v("Möchtest du einen SMS-Verlauf löschen, wähle ihn an und drücke oben rechts das Mülleimer-Symbol. "), t("br"), t("br"), e._v("Du hast die Möglichkeit, über SMS auch Standorte zu versenden. Nutze dafür das Markierungs-Symbol neben der Nachrichteneingabe. Dein Gegenüber erhält dann den Standort deiner derzeitigen Position. ")])]) : e._e(), 4 == e.subPage ? t("div", [t("h1", [e._v("Anrufe")]), t("p", [e._v(" Über den Menüpunkt „Telefon“ gelangst du in deine Anrufe. Du kannst entweder einen deiner Kontakte direkt anrufen, indem du in der Kontakt-Detailansicht auf den Hörer klickst, oder aber eine Nummer eingeben, welche dann gewählt wird. "), t("br"), t("br"), e._v("Ein Verlauf der Anrufe wird dir unter dem Reiter „Verlauf“ angezeigt. Hier siehst du, wer dich wann angerufen hat – auch, wenn du nicht wach gewesen bist. Des Weiteren werden alle Anrufe mit Zeit und Dauer aufgelistet. "), t("br"), t("br"), e._v("Mit den Kurzwahltasten „J“ und „K“ nimmst du eingehende Anrufe an beziehungsweise beendest ein Telefonat. Du musst dein Handy dafür nicht extra aus der Tasche holen. ")])]) : e._e(), 5 == e.subPage ? t("div", [t("h1", [e._v("LifeInvader")]), t("p", [e._v(" Der Life Invader bietet die Möglichkeit, Werbung zu schalten. Diese Werbung können alle anderen Einwohner in Los Santos über ihr Handy abrufen. Dafür gibt es den Punkt „Life“ auf deinem Handy. Du siehst die Werbung (z.B. Verkaufsangebote, Gesuche, etc) und hast direkt die Möglichkeit, den Ersteller anzurufen. Das geht mit einem Klick auf das Telefonsymbol auf der rechten Seite neben der Werbung. ")])]) : e._e()])]) : e._e(), 5 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-jobs"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Jobcenter")
                        }
                    }
                }, [e._v("Jobcenter")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Postmann")
                        }
                    }
                }, [e._v("Postmann")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Müllabfuhr")
                        }
                    }
                }, [e._v("Müllabfuhr")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(3, "Trucker")
                        }
                    }
                }, [e._v("Trucker")]), t("li", {
                    class: {
                        active: 4 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(4, "Farmer")
                        }
                    }
                }, [e._v("Farmer")]), t("li", {
                    class: {
                        active: 5 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(5, "Busfahrer")
                        }
                    }
                }, [e._v("Busfahrer")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v("Jobcenter")]), t("p", [e._v(" Das Jobcenter findest du gegenüber den Filmstudios auf der westlichen Seite. Hier kannst du ganz einfach einen Job annehmen und Geld verdienen. Es stehen derzeit fünf verschiedene Jobs zur Auswahl. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Postmann")]), t("p", [e._v(" Als Postmann teilst du in der gesamten Stadt Pakete aus und bekommst dafür deinen Lohn. Klick den Button „i“ neben Postmann, um dir zum einen den GPS-Punkt für den Job auf der Karte markieren zu lassen und zum anderen, um den Job anzunehmen. Begebe dich danach zur lilanen Markierung im Hafen von Los Santos und hol dir dein Postauto ab. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v("Müllabfuhr")]), t("p", [e._v(" Als Müllmann fährst du durch die Stadt und leerst Mülltonnen aus. Der gesammelte Müll wird im Anschluss am Müllhof abgegeben und du bekommst deinen Lohn. Klick den „i“-Button neben Müllmann, um dir zum einen eine GPS-Markierung für die Karte geben zu lassen und zum anderen, um den Job anzunehmen. Danach fährst du zum Müllhof, um deinen Müllwagen zu holen und loszulegen. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v("Trucker")]), t("p", [e._v(" Wenn du große LKWs magst, ist Trucker genau der richtige Job für dich. Beim Jobcenter klickst du auf das „i“ neben Trucker, um dir zum einen eine lilane Markierung auf der Karte geben zu lassen und zum anderen, um den Job anzunehmen. Im östlichen Hafen von Los Santos holst du deinen Truck ab und schon kann es losgehen. ")])]) : e._e(), 4 == e.subPage ? t("div", [t("h1", [e._v("Farmer")]), t("p", [e._v(" Als Farmer bist du dafür zuständig, die Felder zu bestellen und die Ernte einzuholen. Diese bringst du danach weg, damit sie industriell weiterverarbeitet werden kann. Drücke beim Jobcenter das „i“ neben Farmer, um dir zum einen eine GPS-Markierung auf der Karte anlegen zu lassen und zum anderen, um den Job anzunehmen. Die Farm findest du in Grapeseed, wo der Job dann auch beginnt. ")])]) : e._e(), 5 == e.subPage ? t("div", [t("h1", [e._v("Busfahrer")]), t("p", [e._v(" Möchtest du Busfahrer werden und Haltestellen in- und außerhalb der Stadt anfahren? Dann ist dieser Job das Richtige für dich. Drücke das „i“ neben Busfahrer, um dir zum einen den lilanen GPS-Punkt auf der Karte anzeigen zu lassen und zum anderen, um den Job anzunehmen. Begib dich zum Bushof, um deinen eigenen Bus abzuholen und deine Tour zu starten.")])]) : e._e()])]) : e._e(), 6 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-vehicles"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Autohäuser")
                        }
                    }
                }, [e._v("Autohäuser")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Einparken")
                        }
                    }
                }, [e._v("Einparken")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Schlüssel")
                        }
                    }
                }, [e._v("Schlüssel")]), t("li", {
                    class: {
                        active: 3 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(3, "Schlosswechsel")
                        }
                    }
                }, [e._v(" Schlosswechsel ")]), t("li", {
                    class: {
                        active: 4 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(4, "Schlüsselkasten")
                        }
                    }
                }, [e._v(" Schlüsselkasten ")]), t("li", {
                    class: {
                        active: 5 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(5, "Kaufen")
                        }
                    }
                }, [e._v("Kaufen")]), t("li", {
                    class: {
                        active: 6 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(6, "Verkaufen")
                        }
                    }
                }, [e._v("Verkaufen")]), t("li", {
                    class: {
                        active: 7 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(7, "Verschrotten")
                        }
                    }
                }, [e._v("Verschrotten ")]), t("li", {
                    class: {
                        active: 8 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(8, "Tanken")
                        }
                    }
                }, [e._v("Tanken")]), t("li", {
                    class: {
                        active: 9 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(9, "Handschuhfach")
                        }
                    }
                }, [e._v(" Handschuhfach ")]), t("li", {
                    class: {
                        active: 10 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(10, "Kofferraum")
                        }
                    }
                }, [e._v("Kofferraum ")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v("Autohäuser")]), t("p", [e._v(" In Los Santos findest du über die gesamte Insel verteilt verschiedene Autohäuser. Öffne deine Karte und wähle einen Fahrzeughändler aus. Anhand der Namen erkennst du auch das Angebot der Händler. Mit einem Doppelklick erhälst du die lilane GPS-Markierung auf deiner Karte. "), t("br"), t("br"), e._v("Statte dem Händler einen Besuch ab. Sämtlich Fahrzeuge, die angeboten werden, siehst du an Ort und Stelle mit den entsprechenden Informationen: Modell, Preis, Steuern, Kofferraum, Tank, Sitzplätze. Sprichst du den Autohändler an, kannst du dir dein gewünschtes KFZ kaufen. Das Geld wird dir vom Konto abgebucht. ")])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Einparken")]), t("p", [e._v(" Ein Fahrzeug kannst du an öffentlichen Garagen sowie an Garagen von Wohnungen/Häusern einparken. Entweder über den „X“-Muskel, oder direkt beim Parkwächter. Halte den „X“-Muskel, während du dein Fahrzeug anschaust, gedrückt und betätige den „P“-Button oben links. Den Parkwächter sprichst du an und wählst den Reiter „Einparken“. Dort werden dir alle Fahrzeuge, die du in dem Moment einparken kannst, angezeigt. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v("Schlüssel")]), t("p", [e._v(" Drücke „I“, um deinen Rucksack zu öffnen. Mit einem Klick auf das Schlüsselsymbol oben rechts kommst du in den Schlüsselbund. Dort findest du zum einen die Schlüssel zu deinen eigenen Fahrzeugen und auch zu Fahrzeugen, von denen du einen Schlüssel bekommen hast. Mit einem Klick kannst du einen Schlüssel wieder entnehmen, der danach in deinem Rucksack landet. So kannst du ihn in einen Schlüsselkasten legen oder aber einem anderen Freund übergeben. "), t("br"), t("br"), e._v("Bekommst du einen Schlüssel von jemand anderem überreicht, benutz ihn einfach, um ihn an den Schlüsselbund zu hängen. ")])]) : e._e(), 3 == e.subPage ? t("div", [t("h1", [e._v("Schlosswechsel")]), t("p", [e._v(" Bei einem Schlosswechsel werden sämtliche Schlüssel, die zu einem Fahrzeug existieren, gelöscht. Das Los Santos Customs (LSC) übernimmt diese Aufgabe. Danach musst du jeden weiteren Schlüssel anfertigen lassen. ")])]) : e._e(), 4 == e.subPage ? t("div", [t("h1", [e._v("Schlüsselkasten")]), t("p", [e._v(' Schlüssel können in spezielle Kästen gehängt werden. Es gibt Schlüsselkästen für Staatsfraktionen, Großfamilien und Businesse. Nimm den Schlüssel von deinem Bund und lege ihn in den Kasten. Mithilfe der "E"-Taste greifst du auf den Schlüsselkasten zu und kannst dort die eingelagerten Schlüssel anzeigen sowie entnehmen. Außerdem kannst du dir Bewegungen von Schlüsseln dort anschauen. ')])]) : e._e(), 5 == e.subPage ? t("div", [t("h1", [e._v("Kaufen")]), t("p", [e._v(" Ein Fahrzeug kannst du entweder beim Händler kaufen oder von einem anderen Spieler. Beim Autohaus sprichst du den Händler an, der dir dann die Fahrzeuge auflistet, die er führt. Dort kannst du ein Auto auch kaufen. "), t("br"), t("br"), e._v("Willst du ein Fahrzeug von jemand anderem kaufen, benötigst du einen Kaufvertrag. Diesen holst du dir beim „Regierungs-Shop“ in der Mitte der Stadt. Als Käufer musst du den Vertrag dann nur noch unterschreiben, sobald der Verkäufer dir diesen überreicht. ")])]) : e._e(), 6 == e.subPage ? t("div", [t("h1", [e._v("Verkaufen")]), t("p", [e._v(" Um ein Fahrzeug zu verkaufen, benötigst du einen Kaufvertrag sowie einen Käufer. Den Vertrag besorgst du im „Regierungs-Shop“ in der Mitte der Stadt. Benutze den Vertrag, während du in deinem Fahrzeug sitzt. Trage deinen Namen, den Namen des Käufers und den Preis ein und unterschreibe. Der Käufer bekommt dann eine Kopie, die er ebenfalls unterschreiben muss.")])]) : e._e(), 7 == e.subPage ? t("div", [t("h1", [e._v("Verschrotten")]), t("p", [e._v(" Findest du keinen Käufer für dein Fahr- oder Flugzeug, kannst du es auch verschrotten. Dabei erhälst du einen Teil des Kaufpreises zurück. Begib dich zum Schrottplatz zwischen Harmony und Sandy Shores und suche dort den Besitzer des Platzes auf. Mit nur einem Klick bist du dein ungewolltes Fahr- oder Flugzeug los.")])]) : e._e(), 8 == e.subPage ? t("div", [t("h1", [e._v("Tanken")]), t("p", [e._v(" Du kannst dein Fahrzeug ganz einfach tanken. Besuche dafür eine Tankstelle in Los Santos, stelle den Motor ab und schließe das Fahrzeug auf (über die “X”-Taste). Stelle dich neben das Fahrzeug und schaue das Fahrzeug an. Drücke die “X”-Taste und betätige den Knopf “Tanken”. Dort stellst du ein, wie viel du tanken möchtest und betätigst danach den “Tanken”-Button. ")])]) : e._e(), 9 == e.subPage ? t("div", [t("h1", [e._v("Handschuhfach")]), t("p", [e._v(" Sitzt du in einem Fahrzeug, gelangst du mit der “I”-Taste in das Handschuhfach. Dort kannst du Sachen hineinlegen und wieder rausnehmen, wenn du dich im Fahrzeug befindest. Das Handschuhfach kannst du nur nutzen, wenn das Fahrzeug aufgeschlossen ist. ")])]) : e._e(), 10 == e.subPage ? t("div", [t("h1", [e._v("Kofferraum")]), t("p", [e._v(" Stehst du neben einem Fahrzeug, kannst du mit der “X”-Taste oder mit “K” den Kofferraum öffnen. Dafür muss das Fahrzeug allerdings aufgeschlossen sein. Mit der “I”-Taste gelangst du dann in die Ansicht, um Gegenstände von deinem Rucksack in den Kofferraum zu legen oder herauszunehmen. Schließt du das Fahrzeug ab (entweder über die “X”-Taste oder “L”), wird automatisch auch der Kofferraum geschlossen. ")])]) : e._e()])]) : e._e(), 7 == e.page ? t("div", {
                    staticClass: "computer-body-content-box-support"
                }, [t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [t("div", {
                    staticClass: "partbox-list-image"
                }), t("div", {
                    staticClass: "partbox-list-container"
                }, [t("ul", {
                    staticClass: "partbox-list-container-list"
                }, [t("li", {
                    class: {
                        active: 0 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(0, "Regelwerke")
                        }
                    }
                }, [e._v("Regelwerke")]), t("li", {
                    class: {
                        active: 1 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(1, "Regelverstoß")
                        }
                    }
                }, [e._v("Regelverstoß")]), t("li", {
                    class: {
                        active: 2 == e.subPage
                    },
                    on: {
                        click: function(t) {
                            return e.changeSubPage(2, "Bug melden")
                        }
                    }
                }, [e._v("Bug melden")])])])]), t("div", {
                    staticClass: "computer-body-content-box-partbox"
                }, [0 == e.subPage ? t("div", [t("h1", [e._v(" Übersicht über die Regelwerke")]), t("p", [e._v(" Insgesamt gibt es bei VisualRP 3 verschiedene Regelwerke. Das Forum Regelwerk, das Fraktions Regelwerk und das Server Regelwerk. ")]), t("p", [e._v(" Alle Regelwerke erreichst du unter dem folgenden Link - "), t("a", {
                    staticClass: "text-white",
                    attrs: {
                        target: "_blank",
                        href: "https://sibauirp.de/forum/index.php?board/120-regelwerke/"
                    }
                }, [e._v(" https://sibauirp.de/forum/index.php?board/120-regelwerke/")])])]) : e._e(), 1 == e.subPage ? t("div", [t("h1", [e._v("Regelverstoß melden")]), t("p", [e._v("Die meisten Regelverstöße müssen bei uns im Forum per Ticket eingereicht werden.")]), t("p", [e._v(" Hier der Link zum Ticketsystem: "), t("a", {
                    staticClass: "text-white",
                    attrs: {
                        target: "_blank",
                        href: "https://sibauirp.de/forum/index.php?board/109-support/"
                    }
                }, [e._v(" https://sibauirp.de/forum/index.php?board/120-regelwerke/ ")])]), t("p", [e._v(" Es gibt des Weiteren die Möglichkeit, direkt den Support zu rufen, wenn es sich um eine Notfallsituation handelt (z.B. - Cheater/MassenRDM/Feststecken etc.). ")]), t("p", [e._v(' - Drücke "T", um den Chat zu öffnen.'), t("br"), e._v(' - Schreibe "/support TEXT", wo du den Text durch deinen Grund ersetzt (z.B. /support Hier fliegt ein Cheater rum). ')]), t("p", [e._v(" Um herauszufinden, welche Person sich in einer Situation in deiner Nähe befinden (z.B. du wirst regelwidrig ausgeraubt), gibt es die Möglichkeit, einen Report zu erstellen. Dieser wird als ID oben links angezeigt, die du dann in deinem Supportticket im Forum angibst. ")]), t("p", [e._v(' - Drücke "T", um den Chat zu öffnen.'), t("br"), e._v(' - Schreibe "/r", um einen Log zu erstellen. Dieser speichert alle Personen an dem Zeitpunkt in deiner Umgebung.'), t("br"), e._v(" - Merke dir für den Support die ID, die oben links angezeigt wird. ")])]) : e._e(), 2 == e.subPage ? t("div", [t("h1", [e._v(" Bug melden")]), t("p", [e._v(" Einen Bug kannst du bei uns im Bugtracker melden. "), t("br"), e._v(" Hier der Link zum Bugtracker - "), t("a", {
                    staticClass: "text-white",
                    attrs: {
                        target: "_blank",
                        href: "https://sibauirp.de/bugtracker/"
                    }
                }, [e._v(" https://sibauirp.de/bugtracker/")])])]) : e._e()])]) : e._e()])])
            },
            $p = [],
            qp = {
                name: "Guide",
                components: {
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        page: 0,
                        pageTitle: "Willkommen",
                        point: 1,
                        subPage: null,
                        subPageTitle: null
                    }
                },
                methods: {
                    changePage: function(e, t) {
                        switch (this.page = e, this.pageTitle = t, e) {
                            case 1:
                                this.subPage = 0, this.subPageTitle = "Öffnen";
                                break;
                            case 2:
                                this.subPage = 0, this.subPageTitle = "Sozialbonus";
                                break;
                            case 3:
                                this.subPage = 0, this.subPageTitle = "Einmieten";
                                break;
                            case 4:
                                this.subPage = 0, this.subPageTitle = "Navigation";
                                break;
                            case 5:
                                this.subPage = 0, this.subPageTitle = "Jobcenter";
                                break;
                            case 6:
                                this.subPage = 0, this.subPageTitle = "Autohäuser";
                                break;
                            case 7:
                                this.subPage = 0, this.subPageTitle = "Regelwerke";
                                break
                        }
                    },
                    changeSubPage: function(e, t) {
                        this.subPage = e, this.subPageTitle = t
                    }
                },
                created: function() {}
            },
            Jp = qp,
            Zp = (a("36f6"), Object(d["a"])(Jp, Up, $p, !1, null, "74b7f0f4", null)),
            Xp = Zp.exports,
            Yp = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "barber"
                }, [t("div", {
                    staticClass: "barber-box-left"
                }, [t("div", {
                    staticClass: "barber-title"
                }, [e._v("Kategorien")]), t("div", {
                    staticClass: "barber-body"
                }, [t("div", {
                    staticClass: "barber-body-components"
                }, [t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 3 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 3
                        }
                    }
                }, [e._m(0), t("div", {
                    staticClass: "component-title"
                }, [e._v("Frisur")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 4 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 4
                        }
                    }
                }, [e._m(1), t("div", {
                    staticClass: "component-title"
                }, [e._v("Bart")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 5 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 5
                        }
                    }
                }, [e._m(2), t("div", {
                    staticClass: "component-title"
                }, [e._v("Augen")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 10 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 10
                        }
                    }
                }, [e._m(3), t("div", {
                    staticClass: "component-title"
                }, [e._v("Sprossen")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 6 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 6
                        }
                    }
                }, [e._m(4), t("div", {
                    staticClass: "component-title"
                }, [e._v("Alterung")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 7 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 7
                        }
                    }
                }, [e._m(5), t("div", {
                    staticClass: "component-title"
                }, [e._v("MakeUp")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 8 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 8
                        }
                    }
                }, [e._m(6), t("div", {
                    staticClass: "component-title"
                }, [e._v("Lippenstift")])]), t("div", {
                    staticClass: "barber-body-component",
                    class: {
                        active: 9 == e.part
                    },
                    on: {
                        click: function(t) {
                            e.part = 9
                        }
                    }
                }, [e._m(7), t("div", {
                    staticClass: "component-title"
                }, [e._v("Blush")])])])])]), e.part > 0 ? t("div", {
                    staticClass: "barber-box-right"
                }, [t("div", {
                    staticClass: "barber-body-settings"
                }, [3 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Frisur")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Art")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.Hair) + " | " + e._s(e.data ? 157 : 121))])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: e.data ? 157 : 121
                    },
                    on: {
                        input: function(t) {
                            return e.setHair(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.Hair,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "Hair", t)
                        },
                        expression: "charNew.Hair.Hair"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("1. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.Color) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setHairColor(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.Color,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "Color", t)
                        },
                        expression: "charNew.Hair.Color"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("2. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Hair.HighlightColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setHairColor(e.charNew.Hair)
                        }
                    },
                    model: {
                        value: e.charNew.Hair.HighlightColor,
                        callback: function(t) {
                            e.$set(e.charNew.Hair, "HighlightColor", t)
                        },
                        expression: "charNew.Hair.HighlightColor"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Brusthaare")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[10].Value) + " | 16")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "16"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(10, e.charNew.Appearance[10])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[10].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[10], "Value", t)
                        },
                        expression: "charNew.Appearance[10].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[10].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        steps: "0.01",
                        max: "1"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(10, e.charNew.Appearance[10])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[10].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[10], "Opacity", t)
                        },
                        expression: "charNew.Appearance[10].Opacity"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("1. Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.ChestHairColor) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(10, 1, e.charNew.ChestHairColor)
                        }
                    },
                    model: {
                        value: e.charNew.ChestHairColor,
                        callback: function(t) {
                            e.$set(e.charNew, "ChestHairColor", t)
                        },
                        expression: "charNew.ChestHairColor"
                    }
                })], 1) : e._e(), 4 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Bart")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Aussehen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[1].Value) + " | 28")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "28"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(1, e.charNew.Appearance[1])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[1].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[1], "Value", t)
                        },
                        expression: "charNew.Appearance[1].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[1].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(1, e.charNew.Appearance[1])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[1].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[1], "Opacity", t)
                        },
                        expression: "charNew.Appearance[1].Opacity"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.BeardColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(1, 1, e.charNew.BeardColor)
                        }
                    },
                    model: {
                        value: e.charNew.BeardColor,
                        callback: function(t) {
                            e.$set(e.charNew, "BeardColor", t)
                        },
                        expression: "charNew.BeardColor"
                    }
                })], 1) : e._e(), 5 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Augen")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Augenfarbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.EyeColor) + " | 31")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "31"
                    },
                    on: {
                        input: function(t) {
                            return e.setEyeColor(e.charNew.EyeColor)
                        }
                    },
                    model: {
                        value: e.charNew.EyeColor,
                        callback: function(t) {
                            e.$set(e.charNew, "EyeColor", t)
                        },
                        expression: "charNew.EyeColor"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Augenbrauen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[2].Value) + " | 33")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "33"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(2, e.charNew.Appearance[2])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[2].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[2], "Value", t)
                        },
                        expression: "charNew.Appearance[2].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[2].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(2, e.charNew.Appearance[2])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[2].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[2], "Opacity", t)
                        },
                        expression: "charNew.Appearance[2].Opacity"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.EyebrowColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(2, 1, e.charNew.EyebrowColor)
                        }
                    },
                    model: {
                        value: e.charNew.EyebrowColor,
                        callback: function(t) {
                            e.$set(e.charNew, "EyebrowColor", t)
                        },
                        expression: "charNew.EyebrowColor"
                    }
                })], 1) : e._e(), 6 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Alterung")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Falten")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[3].Value) + " | 14")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "14"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(3, e.charNew.Appearance[3])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[3].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[3], "Value", t)
                        },
                        expression: "charNew.Appearance[3].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[3].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(3, e.charNew.Appearance[3])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[3].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[3], "Opacity", t)
                        },
                        expression: "charNew.Appearance[3].Opacity"
                    }
                })], 1) : e._e(), 7 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Makeup")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Variante")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[4].Value) + " | 74")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "74"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(4, e.charNew.Appearance[4])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[4].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[4], "Value", t)
                        },
                        expression: "charNew.Appearance[4].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[4].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(4, e.charNew.Appearance[4])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[4].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[4], "Opacity", t)
                        },
                        expression: "charNew.Appearance[4].Opacity"
                    }
                })], 1) : e._e(), 8 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Lippenstift")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Variante")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[8].Value) + " | 9")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "9"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(8, e.charNew.Appearance[8])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[8].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[8], "Value", t)
                        },
                        expression: "charNew.Appearance[8].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[8].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(8, e.charNew.Appearance[8])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[8].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[8], "Opacity", t)
                        },
                        expression: "charNew.Appearance[8].Opacity"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.LipstickColor) + " | 100")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "100"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(8, 2, e.charNew.LipstickColor)
                        }
                    },
                    model: {
                        value: e.charNew.LipstickColor,
                        callback: function(t) {
                            e.$set(e.charNew, "LipstickColor", t)
                        },
                        expression: "charNew.LipstickColor"
                    }
                })], 1) : e._e(), 9 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Blush")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Aussehen")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[5].Value) + " | 6")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "6"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(5, e.charNew.Appearance[5])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[5].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[5], "Value", t)
                        },
                        expression: "charNew.Appearance[5].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[5].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(5, e.charNew.Appearance[5])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[5].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[5], "Opacity", t)
                        },
                        expression: "charNew.Appearance[5].Opacity"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Farbe")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.BlushColor) + " | 63")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "63"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlayColor(5, 2, e.charNew.BlushColor)
                        }
                    },
                    model: {
                        value: e.charNew.BlushColor,
                        callback: function(t) {
                            e.$set(e.charNew, "BlushColor", t)
                        },
                        expression: "charNew.BlushColor"
                    }
                })], 1) : e._e(), 10 == e.part ? t("section", [t("div", {
                    staticClass: "barber-settings-title"
                }, [e._v("Sommersprossen")]), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Art")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[9].Value) + " | 17")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "17"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(9, e.charNew.Appearance[9])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[9].Value,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[9], "Value", t)
                        },
                        expression: "charNew.Appearance[9].Value"
                    }
                }), t("div", {
                    staticClass: "barber-settings-subtitle"
                }, [t("span", [e._v("Transparenz")]), t("span", {
                    staticClass: "ml-auto"
                }, [e._v(e._s(e.charNew.Appearance[9].Opacity) + " | 1")])]), t("CoreSlider", {
                    attrs: {
                        min: "0",
                        max: "1",
                        steps: "0.01"
                    },
                    on: {
                        input: function(t) {
                            return e.setOverlay(9, e.charNew.Appearance[9])
                        }
                    },
                    model: {
                        value: e.charNew.Appearance[9].Opacity,
                        callback: function(t) {
                            e.$set(e.charNew.Appearance[9], "Opacity", t)
                        },
                        expression: "charNew.Appearance[9].Opacity"
                    }
                })], 1) : e._e()])]) : e._e(), t("div", {
                    staticClass: "barber-confirmation"
                }, [t("div", {
                    staticClass: "barber-confirmation-price"
                }, [t("span", {
                    staticClass: "barber-confirmation-price-title"
                }, [e._v("Preis:")]), t("span", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(e.price) + " $")])]), t("div", {
                    staticClass: "barber-confirmation-buttons"
                }, [t("CoreButton", {
                    staticClass: "success",
                    attrs: {
                        disabled: e.price <= 0
                    },
                    on: {
                        click: e.finish
                    }
                }, [e._v("Fertig")]), t("CoreButton", {
                    staticClass: "danger",
                    on: {
                        click: e.cancel
                    }
                }, [e._v("Schließen")])], 1)]), t("CoreSlider", {
                    staticClass: "rotation-slider",
                    attrs: {
                        min: "-360",
                        max: "360"
                    },
                    on: {
                        input: e.setRotation
                    },
                    model: {
                        value: e.rotation,
                        callback: function(t) {
                            e.rotation = t
                        },
                        expression: "rotation"
                    }
                })], 1)
            },
            Qp = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/haare.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/bart.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/augen.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/sommersprossen.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/alterung.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/makeup.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/lippenstift.png",
                        alt: ""
                    }
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "component-image"
                }, [t("img", {
                    attrs: {
                        src: "images/icons/blush.png",
                        alt: ""
                    }
                })])
            }],
            ev = {
                name: "Barber",
                components: {
                    CoreButton: x,
                    CoreSlider: ii
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                
                    return {
                        part: 0,
                        charOld: JSON.parse(this.data),
                        charNew: JSON.parse(this.data),
                        rotation: 323.294,
                        lastHair: 0
                    }
                },
                methods: {
                    setHead: function(e) {
                        testthis("SetPedHeadBlendData", parseInt(e.FatherShape), parseInt(e.MotherShape), parseInt(e.FatherSkin), parseInt(e.MotherSkin), parseFloat(e.Similarity), parseFloat(e.SkinSimilarity))
                    },
                    setFace: function(e, t) {
                        testthis("SetPedFaceFeature", parseInt(e), parseFloat(t))
                    },
                    setHair: function(e) {
                        this.data ? 24 == e.Hair && (23 == this.lastHair ? e.Hair = 25 : 25 == this.lastHair && (e.Hair = 23)) : 23 == e.Hair && (22 == this.lastHair ? e.Hair = 24 : 24 == this.lastHair && (e.Hair = 22)), testthis("SetPedHair", parseInt(e.Hair)), this.lastHair = e.Hair
                    },
                    setHairColor: function(e) {
                        testthis("SetPedHairColor", parseInt(e.Color), parseInt(e.HighlightColor))
                    },
                    setOverlay: function(e, t) {
                        testthis("SetPedHeadOverlay", parseInt(e), 0 == t.Opacity ? 255 : parseInt(t.Value), parseFloat(t.Opacity))
                    },
                    setOverlayColor: function(e, t, a) {
                        testthis("SetPedHeadOverlayColor", parseInt(e), parseInt(t), parseInt(a), 0)
                    },
                    setEyeColor: function(e) {
                        testthis("SetPedEyeColor", parseInt(e))
                    },
                    finish: function() {
                        this.emit("DestroyCamera"), this.emit("SetPlayer", "appearance", this.charNew), this.emitServer("FinishBarber", JSON.stringify(this.charNew)), this.hide()
                    },
                    cancel: function() {
                        this.emit("DestroyCamera"), this.emitServer("CancelBarber"), this.hide()
                    },
                    setAppearance: function(e) {
                        this.charOld = JSON.parse(e), this.charNew = JSON.parse(e)
                    },
                    setRotation: function() {
                        fuckThis("SetRotation", this.rotation)
                    }
                },
                computed: {
                    price: function() {
                    
                        return
                    }
                },
                created: function() {
                    this.addEvent("appearance", this.setAppearance), this.emit("CreateTattoCamera", -1), this.emit("CreateTattoCamera", 2), this.emitServer("RequestPlayercustomforbarber")
                }
            },
            tv = ev,
            av = (a("765e"), Object(d["a"])(tv, Yp, Qp, !1, null, null, null)),
            iv = av.exports,
            sv = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: this.data.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "vehiclerent"
                }, [t("CoreTable", {
                    attrs: {
                        "fixed-header": ""
                    }
                }, [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Fahrzeug")]), t("th", [e._v("Preis")]), t("th", [e._v("Mietdauer")]), t("th", [e._v("Kaution")]), t("th", [e._v("Mieten")])])]), t("tbody", e._l(e.vehicles, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(e._s(a.i))]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.p) + " $")]), t("td", [e._v(e._s(a.m) + " Minuten")]), t("td", [e._v(e._s(a.sD) + " $")]), t("td", [t("BaseButton", {
                        attrs: {
                            text: "Mieten"
                        },
                        on: {
                            click: function(t) {
                                return e.rentVehicle(a)
                            }
                        }
                    })], 1)])
                })), 0)])], 1)])
            },
            nv = [],
            rv = {
                name: "VehicleRent",
                components: {
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        vehicles: this.data.d
                    }
                },
                methods: {
                    rentVehicle: function(e) {
                        this.emitServer("RentVehicle", this.data.i, e.i), this.hide()
                    },
                    close: function() {
                        this.hide()
                    }
                }
            },
            ov = rv,
            cv = (a("c702"), Object(d["a"])(ov, sv, nv, !1, null, "8ae99c16", null)),
            lv = cv.exports,
            uv = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg core-interface-lg-switched",
                    attrs: {
                        title: this.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "flyer"
                }, [t("img", {
                    attrs: {
                        src: this.imageSrc,
                        alt: "Der Flyer scheint kaputt zu sein..."
                    }
                })])])
            },
            mv = [],
            dv = {
                name: "Flyer",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        imageSrc: "https://i.imgur.com/"
                    }
                },
                created: function() {
                    this.imageSrc += this.data.l
                },
                methods: {}
            },
            hv = dv,
            _v = (a("e2c5"), Object(d["a"])(hv, uv, mv, !1, null, "ffde2cea", null)),
            pv = _v.exports,
            vv = (a("9911"), function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-interface-multiple"
                }, [t("CoreInterfaceMultiple", {
                    attrs: {
                        title: this.data.n
                    }
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action",
                    attrs: {
                        slot: "core-interface-multiple-box-header-action"
                    },
                    on: {
                        click: e.close
                    },
                    slot: "core-interface-multiple-box-header-action"
                }, [t("div", {
                    staticClass: "core-interface-multiple-box-header-action-close"
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "core-interface-multiple-box-body-content"
                }, [t("div", {
                    staticClass: "copyshop"
                }, [t("div", {
                    staticClass: "copyshop-header"
                }, [t("div", {
                    staticClass: "copyshop-header-amount"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        maxlength: "3",
                        placeholder: "Anzahl"
                    },
                    model: {
                        value: e.amount,
                        callback: function(t) {
                            e.amount = t
                        },
                        expression: "amount"
                    }
                })], 1), t("div", {
                    staticClass: "copyshop-header-link ml-auto"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        maxlength: "40",
                        placeholder: "Imgur Link"
                    },
                    model: {
                        value: e.link,
                        callback: function(t) {
                            e.link = t
                        },
                        expression: "link"
                    }
                })], 1)]), 0 == this.type ? t("div", {
                    staticClass: "copyshop-title"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        maxlength: "40",
                        placeholder: "Titel"
                    },
                    model: {
                        value: e.title,
                        callback: function(t) {
                            e.title = t
                        },
                        expression: "title"
                    }
                })], 1) : e._e(), t("div", {
                    staticClass: "copyshop-body"
                }, [t("div", {
                    staticClass: "copyshop-body-buttons"
                }, [t("CoreButton", {
                    class: {
                        selected: 0 == this.type
                    },
                    attrs: {
                        disabled: 0 == this.type
                    },
                    on: {
                        click: function(t) {
                            return e.changeType(0)
                        }
                    }
                }, [e._v("Flyer")]), t("CoreButton", {
                    class: {
                        selected: 1 == this.type
                    },
                    attrs: {
                        disabled: 1 == this.type
                    },
                    on: {
                        click: function(t) {
                            return e.changeType(1)
                        }
                    }
                }, [e._v("Visitenkarte")])], 1), t("div", {
                    staticClass: "copyshop-body-confirmation"
                }, [t("CoreButton", {
                    attrs: {
                        disabled: "" == this.link || "" == this.amount
                    },
                    on: {
                        click: function(t) {
                            return e.signContract()
                        }
                    }
                }, [e._v(e._s("Preis:" + e.calculatedPrice))])], 1)])])])]), t("CoreInterfaceMultiple", {
                    attrs: {
                        title: "Druckvorschau"
                    }
                }, [t("div", {
                    staticClass: "base-interface-multiple-box-body-content"
                }, [t("div", {
                    staticClass: "copyshop-body-content"
                }, ["" != this.link ? t("div", {
                    staticClass: "copyshop-body-content-image"
                }, [(this.type, t("div", [t("img", {
                    attrs: {
                        src: this.link,
                        alt: "Der Imgur Link scheint kaputt zu sein... https://i.imgur.com/xxxxxx.[jpg/png/jpeg] Bitte den vollen Imgur Link eintragen!)"
                    }
                })]))]) : e._e()])])])], 1)
            }),
            fv = [],
            bv = {
                name: "CopyShop",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterfaceMultiple: Mo
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        amount: "",
                        link: "",
                        tag: "",
                        preview: 0,
                        title: "",
                        type: 0
                    }
                },
                methods: {
                    changeType: function(e) {
                        this.type = e
                    },
                    signContract: function() {
                        if (this.amount && !isNaN(this.amount) && (this.amount = parseInt(this.amount), !(this.amount < 1) && this.link.startsWith("https://i.imgur.com/"))) {
                            if (this.tag = this.link.replace("https://i.imgur.com/", ""), this.tag.length > 15) return;
                            if (this.title.length > 40) return;
                            this.emitServer("CreateCopyShopOrder", this.data.i, this.type, this.amount, this.tag, this.title), this.hide()
                        }
                    },
                    close: function() {
                        this.hide()
                    },
                    togglePreview: function() {
                        this.preview = !this.preview
                    }
                },
                computed: {
                    calculatedPrice: function() {
                        return isNaN(this.amount) ? "Anzahl falsch!" : 0 == this.type ? (20 * parseInt(this.amount) + 3e3).toLocaleString() + " $" : (10 * parseInt(this.amount) + 1e3).toLocaleString() + " $"
                    }
                }
            },
            gv = bv,
            yv = (a("c986"), Object(d["a"])(gv, vv, fv, !1, null, "e23a7764", null)),
            Cv = yv.exports,
            kv = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: "Visitenkarte",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "business-card"
                }, [t("img", {
                    attrs: {
                        src: this.imageSrc,
                        alt: "Die Visitenkarte scheint kaputt zu sein..."
                    }
                })])])
            },
            wv = [],
            Sv = {
                name: "BusinessCard",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        imageSrc: "https://i.imgur.com/"
                    }
                },
                created: function() {
                    this.imageSrc += this.data.l
                },
                methods: {}
            },
            Mv = Sv,
            xv = (a("1247"), Object(d["a"])(Mv, kv, wv, !1, null, "0efcd1bc", null)),
            Pv = xv.exports,
            Tv = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "friskreport"
                }, [t("div", {
                    staticClass: "friskreport-box"
                }, [t("div", {
                    staticClass: "friskreport-header"
                }, [t("div", {
                    staticClass: "friskreport-header-logo",
                    class: {
                        fib: 0 == this.data.t,
                        lspd: 0 != this.data.t
                    }
                }, [t("img", {
                    attrs: {
                        src: "images\\components\\topsecret.png",
                        alt: "topsecret"
                    }
                })]), t("div", {
                    staticClass: "friskreport-header-actions"
                }, [e.data.a ? t("BaseButton", {
                    staticClass: "leave",
                    on: {
                        click: e.editReport
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-pencil"
                })]) : e._e(), t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    staticClass: "friskreport-body"
                }, [t("p", {
                    staticClass: "report-header"
                }, [e._v(" Einsatzbericht über den Einsatz am " + e._s(this.data.d) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" Im Rahmen des am o.g. durchgeführten Einsatzes wurden folgende Substanzen und Gegenstände von den Kollegen der Spurensicherung festgestellt: ")]), t("div", {
                    staticClass: "report-box"
                }, [t("ul", {
                    staticClass: "report-box-list"
                }, e._l(e.getLeftItemList, (function(a) {
                    return t("li", {
                        key: a.n,
                        staticClass: "report-box-list-item"
                    }, [e._v(e._s(a.a) + " x " + e._s(a.n))])
                })), 0), void 0 != e.getRightItemList ? t("ul", {
                    staticClass: "report-box-list"
                }, e._l(e.getRightItemList, (function(a, i) {
                    return t("li", {
                        key: i,
                        staticClass: "report-box-list-item"
                    }, [e._v(e._s(a.a) + " x " + e._s(a.n))])
                })), 0) : e._e()]), t("p", {
                    staticClass: "report-subheader"
                }, [e._v(" " + e._s(e.getReportDescription) + " ")]), t("p", {
                    staticClass: "report-subheader"
                }, [t("span", {
                    staticClass: "font-weight-bold"
                }, [e._v(" Notizen des " + e._s(e.getReporterTitle) + ":")]), t("span", [e._v(e._s(this.data.i) + " ")])]), t("p", {
                    staticClass: "report-subheader-finish"
                }, [t("span", [e._v("Hochachtungsvoll,")]), t("br"), t("span", {
                    staticClass: "signature"
                }, [e._v(e._s(this.data.n))]), t("br"), t("span", [e._v(" " + e._s(e.getReporterTitle) + " " + e._s(this.data.n) + " ")])]), e._m(0)])]), t("CorePrompt", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.prompt,
                        expression: "prompt"
                    }],
                    staticStyle: {
                        color: "white"
                    },
                    attrs: {
                        message: "Notizen",
                        confirmText: "Anpassen",
                        cancelText: "Abbrechen"
                    },
                    on: {
                        confirm: e.confirm
                    }
                })], 1)
            },
            Fv = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "report-disclaimer"
                }, [e._v(" Alle Informationen dienen nur dem Internen Dienstgebrauch. "), t("br"), e._v(" Die Weitergabe ist strikt untersagt und strafbar. ")])
            }],
            Bv = {
                name: "FriskReport",
                components: {
                    CorePrompt: Ee,
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    editReport: function() {
                        this.prompt = !0
                    },
                    confirm: function(e) {
                        this.prompt = !1, void 0 != e && this.updateReport(e)
                    },
                    updateReport: function(e) {
                        this.data.i = e, this.emitServer("UpdateFriskReport", e)
                    }
                },
                computed: {
                    getDate: function() {
                        return this.data.t
                    },
                    getLeftItemList: function() {
                        return this.data.data.slice(0, 5)
                    },
                    getRightItemList: function() {
                        return this.data.data.slice(5, 10)
                    },
                    getLogoByType: function() {
                        return 0 == this.data.t ? "images/components/fib.png" : "images/components/lspd.png"
                    },
                    getReportDescription: function() {
                        return 0 == this.data.t ? "Nach gründlicher Untersuchung kommt die Spurensicherung zum Schluss, dass die gefundenen Substanzen und Gegenstände eindeutig der kriminellen Organisation mit dem Namen " + this.data.i + " in dem Fahrzeug " + this.data.i2 + " zuzuordnen sind." : 1 == this.data.t ? "Die Gefundenen Gegenstände wurden im Fahrzeug " + this.data.i2 + " festgestellt." : ""
                    },
                    getReporterTitle: function() {
                        return 0 == this.data.t ? "Agent" : "Officer"
                    }
                }
            },
            Iv = Bv,
            Av = (a("fdc3"), Object(d["a"])(Iv, Tv, Fv, !1, null, "6406e92e", null)),
            Dv = Av.exports,
            Nv = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: this.data.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "racing-finish"
                }, [t("div", {
                    staticClass: "racing-finish-box"
                }, [t("div", {
                    staticClass: "racing-finish-box-content"
                }, [t("div", {
                    staticClass: "racing-finish-box-content-title"
                }, [e._v("Strecke: " + e._s(e.getRacetrackName))]), t("div", {
                    staticClass: "racing-finish-box-content-image"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/track/" + this.data.rt + ".png",
                        alt: ""
                    }
                })])]), t("div", {
                    staticClass: "racing-finish-box-content"
                }, [t("div", {
                    staticClass: "racing-finish-box-content-title"
                }, [e._v("Type: " + e._s(e.getLobbyTypeby))]), t("div", {
                    staticClass: "racing-finish-box-content-image"
                }, [t("img", {
                    attrs: {
                        src: "images/racing/type/" + this.data.t + ".png",
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "racing-finish-box"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Name")]), t("th", [e._v("Fahrzeug")]), t("th", [e._v("Zeit")]), t("th", [e._v("Gewinn")])])]), t("tbody", e._l(this.data.d, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", [0 != a.t ? t("span", [e._v(e._s(i + 1) + ".")]) : t("span", {
                        staticClass: "mdi mdi-timer-sand"
                    })]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(e.getVehicleNameById(a.s)))]), t("td", [0 != a.t ? t("span", [e._v(e._s(a.t))]) : t("span", {
                        staticClass: "mdi mdi-timer-sand"
                    })]), t("td", [0 != a.t ? t("span", [e._v(e._s(a.g) + " $")]) : t("span", {
                        staticClass: "mdi mdi-timer-sand"
                    })])])
                })), 0)]), t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Name")]), t("th", [e._v("Zeit")]), t("th", [e._v("Fhzg.")])])]), t("tbody", e._l(this.data.b, (function(a, i) {
                    return t("tr", {
                        key: i
                    }, [t("td", [e._v(e._s(i + 1) + ".")]), t("td", [e._v(e._s(a.n))]), t("td", [e._v(e._s(a.t))]), t("td", [e._v(e._s(a.v))])])
                })), 0)])], 1)])])
            },
            Ov = [],
            Lv = {
                name: "RacingFinish",
                components: {
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        vehicles: this.getVehiclesByType(this.data.t)
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    getVehiclesByType: function(e) {
                        switch (e) {
                            case 1:
                                return [{
                                    i: 1,
                                    n: "Zentorno"
                                }, {
                                    i: 595,
                                    n: "T20"
                                }, {
                                    i: 566,
                                    n: "Adder"
                                }, {
                                    i: 567,
                                    n: "Autarch"
                                }, {
                                    i: 568,
                                    n: "Banshee2"
                                }, {
                                    i: 569,
                                    n: "Bullet"
                                }, {
                                    i: 570,
                                    n: "Cheetah"
                                }, {
                                    i: 571,
                                    n: "Cyclone"
                                }, {
                                    i: 572,
                                    n: "Entity2"
                                }, {
                                    i: 573,
                                    n: "Entityxf"
                                }, {
                                    i: 574,
                                    n: "Emerus"
                                }, {
                                    i: 575,
                                    n: "Fmj"
                                }, {
                                    i: 576,
                                    n: "Furia"
                                }, {
                                    i: 577,
                                    n: "Gp1"
                                }, {
                                    i: 578,
                                    n: "Infernus"
                                }, {
                                    i: 579,
                                    n: "Italigtb"
                                }, {
                                    i: 580,
                                    n: "Italigtb2"
                                }, {
                                    i: 581,
                                    n: "Krieger"
                                }, {
                                    i: 582,
                                    n: "Le7b"
                                }, {
                                    i: 583,
                                    n: "Nero"
                                }, {
                                    i: 584,
                                    n: "Nero2"
                                }, {
                                    i: 585,
                                    n: "Osiris"
                                }, {
                                    i: 586,
                                    n: "Penetrator"
                                }, {
                                    i: 587,
                                    n: "Pfister811"
                                }, {
                                    i: 588,
                                    n: "Prototipo"
                                }, {
                                    i: 589,
                                    n: "Reaper"
                                }, {
                                    i: 590,
                                    n: "S80"
                                }, {
                                    i: 591,
                                    n: "Sc1"
                                }, {
                                    i: 593,
                                    n: "Sheava"
                                }, {
                                    i: 594,
                                    n: "Sultanrs"
                                }, {
                                    i: 596,
                                    n: "Taipan"
                                }, {
                                    i: 597,
                                    n: "Tempesta"
                                }, {
                                    i: 598,
                                    n: "Tezeract"
                                }, {
                                    i: 599,
                                    n: "Thrax"
                                }, {
                                    i: 701,
                                    n: "Tigon"
                                }, {
                                    i: 600,
                                    n: "Turismor"
                                }, {
                                    i: 601,
                                    n: "Tyrant"
                                }, {
                                    i: 602,
                                    n: "Tyrus"
                                }, {
                                    i: 603,
                                    n: "Vacca"
                                }, {
                                    i: 604,
                                    n: "Vagner"
                                }, {
                                    i: 606,
                                    n: "Visione"
                                }, {
                                    i: 609,
                                    n: "Xa21"
                                }, {
                                    i: 611,
                                    n: "Zorrusso"
                                }];
                            case 2:
                                return [{
                                    i: 448,
                                    n: "Banshee"
                                }, {
                                    i: 449,
                                    n: "Bestiagts"
                                }, {
                                    i: 455,
                                    n: "Carbonizzare"
                                }, {
                                    i: 456,
                                    n: "Comet2"
                                }, {
                                    i: 457,
                                    n: "Comet3"
                                }, {
                                    i: 458,
                                    n: "Comet4"
                                }, {
                                    i: 459,
                                    n: "Comet5"
                                }, {
                                    i: 460,
                                    n: "Coquette"
                                }, {
                                    i: 728,
                                    n: "Coquette6"
                                }, {
                                    i: 461,
                                    n: "Drafter"
                                }, {
                                    i: 463,
                                    n: "Elegy"
                                }, {
                                    i: 464,
                                    n: "Elegy2"
                                }, {
                                    i: 465,
                                    n: "feltzer2"
                                }, {
                                    i: 466,
                                    n: "Flashgt"
                                }, {
                                    i: 467,
                                    n: "Furoregt"
                                }, {
                                    i: 474,
                                    n: "Italigto"
                                }, {
                                    i: 472,
                                    n: "Issi7"
                                }, {
                                    i: 476,
                                    n: "Jester"
                                }, {
                                    i: 477,
                                    n: "Jester2"
                                }, {
                                    i: 478,
                                    n: "Jester3"
                                }, {
                                    i: 485,
                                    n: "Massacro"
                                }, {
                                    i: 491,
                                    n: "Paragon"
                                }];
                            case 3:
                                return [{
                                    i: 524,
                                    n: "Btype"
                                }, {
                                    i: 525,
                                    n: "Btype2"
                                }, {
                                    i: 526,
                                    n: "Btype3"
                                }, {
                                    i: 527,
                                    n: "Casco"
                                }, {
                                    i: 528,
                                    n: "Cheetah2"
                                }, {
                                    i: 529,
                                    n: "Coquette2"
                                }, {
                                    i: 533,
                                    n: "Feltzer3"
                                }, {
                                    i: 534,
                                    n: "Gt500"
                                }, {
                                    i: 537,
                                    n: "Jb7002"
                                }, {
                                    i: 538,
                                    n: "Mamba"
                                }, {
                                    i: 541,
                                    n: "Monroe"
                                }, {
                                    i: 545,
                                    n: "Rapidgt3"
                                }, {
                                    i: 549,
                                    n: "Stinger"
                                }, {
                                    i: 550,
                                    n: "Stingergt"
                                }, {
                                    i: 553,
                                    n: "Torero"
                                }, {
                                    i: 552,
                                    n: "swinger"
                                }, {
                                    i: 562,
                                    n: "Z190"
                                }, {
                                    i: 563,
                                    n: "Ztype"
                                }];
                            case 4:
                                return [{
                                    i: 198,
                                    n: "Sanchez"
                                }, {
                                    i: 199,
                                    n: "Sanchez2"
                                }, {
                                    i: 189,
                                    n: "Manchez"
                                }, {
                                    i: 778,
                                    n: "Manchez2"
                                }, {
                                    i: 163,
                                    n: "Bf400"
                                }];
                            case 5:
                                return [{
                                    i: 784,
                                    n: "Veto"
                                }, {
                                    i: 785,
                                    n: "Veto2"
                                }];
                            case 6:
                                return [{
                                    i: 322,
                                    n: "RC Bandito"
                                }];
                            case 7:
                                return [{
                                    i: 158,
                                    n: "Akuma"
                                }, {
                                    i: 161,
                                    n: "Bati"
                                }, {
                                    i: 162,
                                    n: "Bati2"
                                }, {
                                    i: 164,
                                    n: "Carbonrs"
                                }, {
                                    i: 173,
                                    n: "Diablous"
                                }, {
                                    i: 174,
                                    n: "Diablous2"
                                }, {
                                    i: 175,
                                    n: "Double"
                                }, {
                                    i: 181,
                                    n: "Fcr"
                                }, {
                                    i: 182,
                                    n: "Fcr2"
                                }, {
                                    i: 184,
                                    n: "Hakuchou"
                                }, {
                                    i: 185,
                                    n: "Hakuchou2"
                                }, {
                                    i: 188,
                                    n: "Lectro"
                                }, {
                                    i: 191,
                                    n: "Nightblade"
                                }, {
                                    i: 194,
                                    n: "Pcj"
                                }, {
                                    i: 196,
                                    n: "Ruffian"
                                }, {
                                    i: 204,
                                    n: "Thrust"
                                }, {
                                    i: 205,
                                    n: "Vader"
                                }, {
                                    i: 206,
                                    n: "Vindicator"
                                }, {
                                    i: 207,
                                    n: "Vortex"
                                }];
                            case 8:
                                return [{
                                    i: 663,
                                    n: "Bison"
                                }, {
                                    i: 664,
                                    n: "Bison2"
                                }, {
                                    i: 665,
                                    n: "Bison3"
                                }, {
                                    i: 666,
                                    n: "Bobcatxl"
                                }, {
                                    i: 667,
                                    n: "boxville"
                                }, {
                                    i: 672,
                                    n: "Burrito"
                                }, {
                                    i: 673,
                                    n: "Burrito2"
                                }, {
                                    i: 677,
                                    n: "Camper"
                                }, {
                                    i: 679,
                                    n: "Gburrito2"
                                }, {
                                    i: 680,
                                    n: "Journey"
                                }, {
                                    i: 681,
                                    n: "Minivan"
                                }, {
                                    i: 682,
                                    n: "Minivan2"
                                }, {
                                    i: 683,
                                    n: "Paradise"
                                }, {
                                    i: 684,
                                    n: "Pony"
                                }, {
                                    i: 686,
                                    n: "Rumpo"
                                }, {
                                    i: 688,
                                    n: "Rumpo3"
                                }, {
                                    i: 690,
                                    n: "Speedo2"
                                }, {
                                    i: 692,
                                    n: "Surfer"
                                }, {
                                    i: 694,
                                    n: "Taco"
                                }, {
                                    i: 696,
                                    n: "Youga2"
                                }, {
                                    i: 737,
                                    n: "Youga3"
                                }];
                            case 9:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            case 10:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            case 11:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            case 12:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            case 13:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            case 14:
                                return [{
                                    i: 8,
                                    n: "Seashark"
                                }, {
                                    i: 9,
                                    n: "Seashark2"
                                }, {
                                    i: 10,
                                    n: "Seashark3"
                                }];
                            default:
                                return [{
                                    i: 1,
                                    n: "Zentorno"
                                }, {
                                    i: 2,
                                    n: "T20"
                                }]
                        }
                    },
                    addRacingFinishParticipant: function(e, t) {
                        this.data.d.find((function(t) {
                            return t.i == e
                        })).t = t
                    },
                    getVehicleNameById: function(e) {
                        var t = this.vehicles.find((function(t) {
                            return t.i == e
                        }));
                        return void 0 === t ? "Zufall" : t.n
                    }
                },
                computed: {
                    getLobbyTypeby: function() {
                        switch (this.data.t) {
                            case 0:
                                return "Zufall";
                            case 1:
                                return "Supersportler";
                            case 2:
                                return "Sportwagen";
                            case 3:
                                return "Klassische Sportwagen";
                            case 4:
                                return "Motorcross";
                            case 5:
                                return "GO KARTS";
                            case 6:
                                return "RC Bandito";
                            case 7:
                                return "Sportbikes";
                            case 8:
                                return "Vans";
                            case 9:
                                return "Seashark";
                            case 10:
                                return "Boote";
                            case 11:
                                return "Helikopter";
                            case 12:
                                return "Flugzeuge";
                            case 13:
                                return "Spezial";
                            case 14:
                                return "Formula";
                            default:
                                return ""
                        }
                    },
                    getRacetrackName: function() {
                        switch (this.data.rt) {
                            case 0:
                                return "Zufall";
                            case 1:
                                return "Vinewood Madness";
                            case 2:
                                return "Sanchez Manchez";
                            case 3:
                                return "Mount Abfahrt";
                            case 4:
                                return "Maze Kart Arena";
                            case 5:
                                return "Airbase Action";
                            case 6:
                                return "Vinewood Madness 2";
                            case 7:
                                return "Canal Karambolage";
                            case 8:
                                return "River Rampage";
                            case 9:
                                return "Rolling Thunder";
                            case 10:
                                return "Downtown Drive";
                            case 11:
                                return "Nitro Bandito";
                            case 12:
                                return "Downtown Drive 2";
                            case 13:
                                return "Route 68";
                            case 14:
                                return "Sanchez Manchez 2";
                            case 15:
                                return "Deluxo Maxo";
                            case 16:
                                return "High Speed Harbor";
                            default:
                                return "Zufall"
                        }
                    }
                },
                created: function() {
                    this.addEvent("AddRacingFinishParticipant", this.addRacingFinishParticipant)
                }
            },
            Hv = Lv,
            zv = (a("85aa"), Object(d["a"])(Hv, Nv, Ov, !1, null, "266fbb70", null)),
            jv = zv.exports,
            Rv = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "vehicle-hud"
                }, [t("div", {
                    staticClass: "tachometer",
                    class: {
                        "d-flex": e.visible
                    }
                }, [t("div", {
                    staticClass: "tachometer-core-box"
                }, [t("div", {
                    staticClass: "tachometer-details"
                }, [t("div", {
                    staticClass: "tachometer-details-icons"
                }, [t("span", {
                    staticClass: "mdi mdi-engine icon",
                    class: {
                        "text-custom-success": e.engineOn,
                        "text-custom-danger": !e.engineOn
                    }
                }), t("span", {
                    staticClass: "mdi mdi-car-door icon",
                    class: {
                        "text-custom-success": e.doorOpen,
                        "text-custom-danger": !e.doorOpen
                    }
                }), t("span", {
                    staticClass: "mdi mdi-bag-checked icon",
                    class: {
                        "text-custom-success": e.trunkOpen,
                        "text-custom-danger": !e.trunkOpen
                    }
                })]), t("div", {
                    staticClass: "tachometer-details-mileage"
                }, [t("span", {
                    staticClass: "text-sibaui"
                }, [e._v(e._s(e.km))]), e._v(" km   "), t("span", {
                    staticClass: "mdi mdi-speedometer icon"
                })])]), t("div", {
                    staticClass: "tachometer-core"
                }, [t("div", {
                    staticClass: "tachometer-core-gear"
                }, [t("span", {
                    staticClass: "mdi icon gear-icon",
                    class: {
                        "mdi-arrow-up": e.rpmPercentage >= 75,
                        "mdi-arrow-down": e.rpmPercentage <= 25 && e.gear > 1
                    }
                }), t("span", {
                    staticClass: "gear-amount"
                }, [e._v(e._s(e.gear))])]), t("div", {
                    staticClass: "tachometer-core-speed"
                }, [t("span", {
                    staticClass: "speed-amount"
                }, [e._v(e._s(e.speed))]), t("span", {
                    staticClass: "speed-text"
                }, [e._v("KMH")])])]), t("div", {
                    staticClass: "tachometer-rpm"
                }, [t("div", {
                    staticClass: "progress"
                }, [t("div", {
                    staticClass: "progress-bar",
                    style: {
                        width: e.gear > 10 ? 0 : e.rpmPercentage + "%"
                    },
                    attrs: {
                        role: "progressbar",
                        "aria-valuenow": "25",
                        "aria-valuemin": "0",
                        "aria-valuemax": "100"
                    }
                })])])]), t("div", {
                    staticClass: "tachometer-fuel-box"
                }, [t("div", {
                    staticClass: "progress"
                }, [t("div", {
                    staticClass: "progress-bar",
                    class: {
                        primary: e.fuelPercentage >= 70,
                        warning: e.fuelPercentage < 70 && e.fuelPercentage >= 30,
                        danger: e.fuelPercentage < 30
                    },
                    style: {
                        height: e.fuelPercentage + "%"
                    },
                    attrs: {
                        role: "progressbar",
                        "aria-valuenow": "30",
                        "aria-valuemin": "0",
                        "aria-valuemax": "100"
                    }
                }, [t("span", {
                    staticClass: "sr-only"
                }, [e._v(e._s(e.fuelPercentage) + "%")])])])])]), t("div", {
                    staticClass: "street-overview"
                }, [e._v(" " + e._s(e.street) + " ")])])
            },
            Vv = [],
            Ev = {
                name: "VehicleHud",
                data: function() {
                    return {
                        counter: 0,
                        visible: !1,
                        doorOpen: !1,
                        engineOn: !1,
                        trunkOpen: !1,
                        speed: 77,
                        km: 0,
                        fuel: 100,
                        maxFuel: 100,
                        fuelPercentage: 20,
                        rpm: 0,
                        rpmPercentage: 50,
                        street: "",
                        gear: 0,
                        fuelInterval: void 0,
                        lastUpdate: Date.now()
                    }
                },
                methods: {
                    showVehHUD: function(e, t) {
                        this.visible = e, t && (this.doorOpen = t.doorOpen, this.engineOn = t.engineOn, this.trunkOpen = t.trunkOpen, this.speed = t.speed, this.km = t.km.toFixed(2), this.fuel = t.fuel.toFixed(2), this.maxFuel = t.maxFuel.toFixed(2), this.fuelPercentage = this.fuel / this.maxFuel * 100, this.rpm = t.rpm, this.rpmPercentage = 100 * this.rpm, this.gear = t.gear)
                    },
                    updateVehHUD: function(e, t) {
                        this[e] = t, 30 == this.counter ? (this.emit("GetPlayerStreetName", "ResponsePlayerStreetName"), this.calcFuelPercentage(), this.counter = 0) : this.counter++, this.calcRpmPertage(), this.lastUpdate = Date.now()
                    },
                    calcRpmPertage: function() {
                        this.engineOn ? this.rpmPercentage = 100 * this.rpm : this.rpmPercentage = 0
                    },
                    calcFuelPercentage: function() {
                        var e = this;
                        this.fuelPercentage = this.fuel / this.maxFuel * 100, this.fuelPercentage >= 5 ? void 0 != this.fuelInterval && (clearInterval(this.fuelInterval), this.fuelInterval = void 0) : void 0 == this.fuelInterval && this.fuelPercentage < 5 && (this.fuelInterval = setInterval((function() {
                            if (Date.now() - e.lastUpdate > 2e3) return clearInterval(e.fuelInterval), void(e.fuelInterval = void 0)
                        }), 3500))
                    },
                    ResponsePlayerStreetName: function(e) {
                        this.street = e
                    },
                    toggleVehicleHud: function(e) {
                        this.visible = e
                    }
                },
                created: function() {
                    this.addEvent("ShowVehHUD", this.showVehHUD), this.addEvent("UpdateVehHUD", this.updateVehHUD), this.addEvent("ToggleVehicleHud", this.toggleVehicleHud), this.addEvent("ResponsePlayerStreetName", this.ResponsePlayerStreetName)
                }
            },
            Gv = Ev,
            Wv = Object(d["a"])(Gv, Rv, Vv, !1, null, null, null),
            Kv = Wv.exports,
            Uv = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "playtime-hud"
                }, [t("div", {
                    staticClass: "tachometer",
                    class: {
                        "d-flex": e.visible
                    }
                }, [t("div", {
                    staticClass: "tachometer-core-box"
                }, [t("div", {
                    staticClass: "tachometer-details"
                }), t("div", {
                    staticClass: "tachometer-core"
                }, [t("div", {
                    staticClass: "tachometer-core-speed"
                }, [t("span", {
                    staticClass: "mdi mdi-cash icon text-custom-success"
                }), e._v(" Verbleibend "), t("span", {
                    staticClass: "speed-amount"
                }, [e._v(e._s(e.timeMessage))])])])])])])
            },
            $v = [],
            qv = {
                name: "PlayTimeHud",
                data: function() {
                    return {
                        visible: !1,
                        time: 120,
                        timeInterval: null
                    }
                },
                methods: {
                    showPlayTimeHud: function(e, t) {
                        this.visible = e, this.time = t, e || null != this.timeInterval && (clearInterval(this.timeInterval), this.timeInterval = null)
                    },
                    timeChange: function() {
                        0 != this.time && this.time--
                    }
                },
                mounted: function() {
                    this.timeInterval = setInterval(this.timeChange, 6e4)
                },
                computed: {
                    timeMessage: function() {
                        var e = Math.floor(this.time / 60),
                            t = this.time % 60;
                        return e = e < 10 ? "0" + e : e, t = t < 10 ? "0" + t : t, "".concat(e, ":").concat(t)
                    }
                },
                created: function() {
                    this.addEvent("ShowPlayTimeHud", this.showPlayTimeHud)
                }
            },
            Jv = qv,
            Zv = Object(d["a"])(Jv, Uv, $v, !1, null, null, null),
            Xv = Zv.exports,
            Yv = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.visible,
                        expression: "visible"
                    }],
                    staticClass: "gangwar-hud",
                    style: {
                        boxShadow: "0.1vh 0.1vh " + e.points_team_1 > e.points_team_2 ? e.team_1.c : e.team_2.c
                    }
                }, [t("div", {
                    staticClass: "gangwar-hud-row"
                }, [t("div", {
                    staticClass: "gangwar-hud-box team-box"
                }, [t("div", {
                    staticClass: "team-logo"
                }, [t("img", {
                    attrs: {
                        src: e.team_1.image,
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "team-name"
                }, [e._v(e._s(e.team_1.n))])]), t("div", {
                    staticClass: "gangwar-hud-box time-box",
                    class: {
                        countdown: e.time <= 60
                    }
                }, [e._v(" " + e._s(e.timeConv) + " ")]), t("div", {
                    staticClass: "gangwar-hud-box team-box"
                }, [t("div", {
                    staticClass: "team-name"
                }, [e._v(e._s(e.team_2.n))]), t("div", {
                    staticClass: "team-logo"
                }, [t("img", {
                    attrs: {
                        src: e.team_2.image,
                        alt: ""
                    }
                })])])]), t("div", {
                    staticClass: "gangwar-hud-row team-points-row"
                }, [t("div", {
                    staticClass: "team-points"
                }, [e._v(e._s(e.points_team_1))]), t("div", {
                    staticClass: "team-points"
                }, [e._v(e._s(e.points_team_2))])]), t("div", {
                    staticClass: "gangwar-hud-row gangwar-flags"
                }, [e._l(e.flagAmountTeam_1, (function(a) {
                    return t("div", {
                        key: "at_" + a,
                        staticClass: "gangwar-flag",
                        style: {
                            backgroundColor: e.team_1.c
                        },
                        attrs: {
                            id: "dt_" + a
                        }
                    })
                })), e._l(e.flagAmount - (e.flagAmountTeam_1 + e.flagAmountTeam_2), (function(e) {
                    return t("div", {
                        key: "rf_" + e,
                        staticClass: "gangwar-flag",
                        attrs: {
                            id: "rf_" + e
                        }
                    })
                })), e._l(e.flagAmountTeam_2, (function(a) {
                    return t("div", {
                        key: "dt_" + a,
                        staticClass: "gangwar-flag",
                        style: {
                            backgroundColor: e.team_2.c
                        },
                        attrs: {
                            id: "dt_" + a
                        }
                    })
                }))], 2)])
            },
            Qv = [],
            ef = {
                name: "GangwarHud",
                data: function() {
                    return {
                        visible: !1,
                        team_1: "",
                        team_2: "",
                        points_team_1: "",
                        points_team_2: "",
                        time: 0,
                        teamData: [],
                        flagAmount: 5,
                        flagAmountTeam_1: 0,
                        flagAmountTeam_2: 0,
                        timeInterval: null
                    }
                },
                methods: {
                    //td, t1, t2, p1, p2, flag1, itme
                    showGangwarHud: function(td, e, t, a, i, s, n) {
                        var r = this;
                        this.teamData = JSON.parse(td);
                        this.visible = !0, this.team_1 = this.teamData.find((function(t) {
                            return t.i == e
                        })), this.team_2 = this.teamData.find((function(e) {
                            return e.i == t
                        })), this.points_team_1 = a, this.points_team_2 = i, this.flagAmount = s, this.time = n, this.timeInterval = setInterval((function() {
                            r.time--, 0 == r.time && r.stopGangwarHud()
                        }), 1e3)
                    },
                    stopGangwarHud: function() {
                        clearInterval(this.timeInterval), this.visible = !1
                    },
                    updateGangwarHud: function(e, t, a, i) {
                        console.log(e,t,a,i)
                        this.points_team_1 = e, this.points_team_2 = t, this.flagAmountTeam_1 = parseInt(a), this.flagAmountTeam_2 = parseInt(i)
                    }
                },
                mounted: function() {
                    this.addEvent("ShowGangwarHud", this.showGangwarHud), this.addEvent("StopGangwarHud", this.stopGangwarHud), this.addEvent("UpdateGangwarHud", this.updateGangwarHud)
                },
                computed: {
                    timeConv: function() {
                        var e = parseInt(this.time, 10),
                            t = Math.floor(e / 3600),
                            a = Math.floor((e - 3600 * t) / 60),
                            i = e - 3600 * t - 60 * a;
                        return t < 10 && (t = "0" + t), a < 10 && (a = "0" + a), i < 10 && (i = "0" + i), a + ":" + i
                    }
                },
                created: function() {
                    var e = this;
                    //                        i: 1,
                 //   n: "Zivilisten",
                 //   s: "Ziv",
                 //   c: "#FFFFFF"
                }
            },
            tf = ef,
            af = (a("35ee6"), Object(d["a"])(tf, Yv, Qv, !1, null, "c39cc83a", null)),
            sf = af.exports,
            nf = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-md",
                    attrs: {
                        title: this.data.t,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "processor-select"
                }, [t("div", {
                    staticClass: "processor-select-header"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Suche..."
                    },
                    model: {
                        value: e.search,
                        callback: function(t) {
                            e.search = t
                        },
                        expression: "search"
                    }
                })], 1), t("div", {
                    staticClass: "processor-select-body"
                }, [t("CoreTable", [t("thead", [t("tr", [t("th", [e._v("Nummer")]), t("th", [e._v("Datum")]), t("th", [e._v("Status")]), t("th", [e._v("Nachricht")])])]), t("tbody", e._l(e.searchValues, (function(a) {
                    return t("tr", {
                        key: a.t
                    }, [t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.n))]), t("td", {
                        staticClass: "text-center"
                    }, [e._v(e._s(a.t))]), a.s ? t("td", {
                        staticClass: "text-center"
                    }, [e._v("Gesendet")]) : t("td", {
                        staticClass: "text-center"
                    }, [e._v("Empfangen")]), t("td", {
                        staticClass: "text-center"
                    }, [e._v("VERSCHLÜSSELT")])])
                })), 0)])], 1)])])
            },
            rf = [],
            of = {
                name: "SmsView",
                components: {
                    CoreInput: A,
                    CoreTable: ge,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        values: this.data.v,
                        search: ""
                    }
                },
                methods: {},
                computed: {
                    searchValues: function() {
                        var e = this;
                        return this.values.filter((function(t) {
                            return t.t.toLowerCase().includes(e.search) || t.n.toString().includes(e.search)
                        }))
                    }
                }
            },
            cf = of,
            lf = (a("f7cb"), Object(d["a"])(cf, nf, rf, !1, null, "6bb5dae4", null)),
            uf = lf.exports,
            mf = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-xxl",
                    attrs: {
                        closeable: "",
                        title: "Truckerübersicht"
                    },
                    on: {
                        close: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", {
                    staticClass: "trucker-card-button-group"
                }, [t("CoreButtonGroup", [t("CoreButton", {
                    class: {
                        active: 0 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.setPage(0)
                        }
                    }
                }, [e._v("24/7")]), t("CoreButton", {
                    class: {
                        active: 1 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.setPage(1)
                        }
                    }
                }, [e._v("Ammunation")]), t("CoreButton", {
                    class: {
                        active: 2 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.setPage(2)
                        }
                    }
                }, [e._v("Tankstellen")]), t("CoreButton", {
                    class: {
                        active: 3 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.setPage(3)
                        }
                    }
                }, [e._v("Sonstiges")]), 1 == this.data.h ? t("CoreButton", {
                    class: {
                        active: 4 === e.page
                    },
                    on: {
                        click: function(t) {
                            return e.setPage(4)
                        }
                    }
                }, [e._v("Lieferungen")]) : e._e()], 1)], 1), 0 === this.page ? t("div", [t("div", {
                    staticClass: "trucker-overview"
                }, e._l(e.sortedShops, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "trucker-card"
                    }, [t("div", {
                        staticClass: "trucker-card-image"
                    }, [t("img", {
                        attrs: {
                            src: "https://sibaui.deinsh.eu/img/trucker/shops/" + a.i + ".jpg",
                            alt: ""
                        }
                    })]), t("span", {
                        staticClass: "trucker-card-shop-name"
                    }, [e._v(e._s(a.n.slice(0, 24)))]), t("div", {
                        staticClass: "trucker-card-small"
                    }, [e._v("Füllstand: " + e._s(a.f))]), t("div", {
                        staticClass: "trucker-card-description"
                    }, [t("div", {
                        staticClass: "trucker-card-buttons"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setShopGPS(a)
                            }
                        }
                    }, [e._v("Laden")]), t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setStorageGPS(a)
                            }
                        }
                    }, [e._v("Warenlager")])], 1)])])
                })), 0)]) : e._e(), 1 === this.page ? t("div", [t("div", {
                    staticClass: "trucker-overview"
                }, e._l(e.sortedAmmunations, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "trucker-card"
                    }, [t("div", {
                        staticClass: "trucker-card-image"
                    }, [t("img", {
                        attrs: {
                            src: "https://sibaui.deinsh.eu/img/trucker/ammunations/" + a.i + ".jpg",
                            alt: ""
                        }
                    })]), t("span", {
                        staticClass: "trucker-card-shop-name"
                    }, [e._v(e._s(a.n.slice(0, 24)))]), t("div", {
                        staticClass: "trucker-card-small"
                    }, [e._v("Füllstand: " + e._s(a.f))]), t("div", {
                        staticClass: "trucker-card-description"
                    }, [t("div", {
                        staticClass: "trucker-card-buttons"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setShopGPS(a)
                            }
                        }
                    }, [e._v("Laden")]), t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setStorageGPS(a)
                            }
                        }
                    }, [e._v("Warenlager")])], 1)])])
                })), 0)]) : e._e(), 2 === this.page ? t("div", [t("div", {
                    staticClass: "trucker-overview"
                }, e._l(e.sortedFuelstations, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "trucker-card"
                    }, [t("div", {
                        staticClass: "trucker-card-image"
                    }, [t("img", {
                        attrs: {
                            src: "https://sibaui.deinsh.eu/img/trucker/fuelstations/" + a.i + ".jpg",
                            alt: ""
                        }
                    })]), t("span", {
                        staticClass: "trucker-card-shop-name"
                    }, [e._v(e._s(a.n.slice(0, 24)))]), t("div", {
                        staticClass: "trucker-card-small"
                    }, [e._v("Füllstand: " + e._s(a.f))]), t("div", {
                        staticClass: "trucker-card-description"
                    }, [t("div", {
                        staticClass: "trucker-card-buttons"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setShopGPS(a)
                            }
                        }
                    }, [e._v("Laden")]), t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setStorageGPS(a)
                            }
                        }
                    }, [e._v("Warenlager")])], 1)])])
                })), 0)]) : e._e(), 3 === this.page ? t("div", [t("div", {
                    staticClass: "trucker-overview"
                }, e._l(e.sortedOtherShops, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "trucker-card"
                    }, [t("div", {
                        staticClass: "trucker-card-image"
                    }, [t("img", {
                        attrs: {
                            src: "https://sibaui.deinsh.eu/img/trucker/other/" + a.i + ".jpg",
                            alt: ""
                        }
                    })]), t("span", {
                        staticClass: "trucker-card-shop-name"
                    }, [e._v(e._s(a.n.slice(0, 24)))]), t("div", {
                        staticClass: "trucker-card-small"
                    }, [e._v("Füllstand: " + e._s(a.f))]), t("div", {
                        staticClass: "trucker-card-description"
                    }, [t("div", {
                        staticClass: "trucker-card-buttons"
                    }, [t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setShopGPS(a)
                            }
                        }
                    }, [e._v("Laden")]), t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.setStorageGPS(a)
                            }
                        }
                    }, [e._v("Warenlager")])], 1)])])
                })), 0)]) : e._e(), 4 === this.page ? t("div", [t("div", {
                    staticClass: "trucker-delivery-page"
                }, [t("CoreTable", {
                    staticClass: "trucker-delivery-table"
                }, [t("thead", [t("tr", [t("th", [e._v("#")]), t("th", [e._v("Name")]), t("th", [e._v("Datum")]), t("th", [e._v("Fahrzeug")]), t("th", [e._v("Shop")]), t("th", [e._v("Alt")]), t("th", [e._v("Neu")]), t("th", [e._v("Geld")])])]), t("tbody", {
                    staticClass: "scrollable"
                }, e._l(this.deliveries, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [e._v(" " + e._s(a.i) + " ")]), t("td", [e._v(" " + e._s(a.n) + " ")]), t("td", [e._v(" " + e._s(a.d) + " ")]), t("td", [e._v(" " + e._s(e.getVehicleNameByDataId(a.v)) + " ")]), t("td", [e._v(" " + e._s(e.getShopNameById(a.e, a.t)) + " ")]), t("td", [e._v(" " + e._s(a.oa) + " ")]), t("td", [e._v(" " + e._s(a.na) + " ")]), t("td", [e._v(" " + e._s(a.m) + " $ ")])])
                })), 0)]), t("div", {
                    staticClass: "trucker-delivery-buttons"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.requestData()
                        }
                    }
                }, [e._v("Mehr laden")])], 1)], 1)]) : e._e()])
            },
            df = [],
            hf = {
                name: "TruckerOverview",
                components: {
                    CoreButtonGroup: te,
                    CoreButton: x,
                    CoreInterface: J,
                    CoreTable: ge
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        page: 0,
                        deliveries: [],
                        vehicleData: []
                    }
                },
                computed: {
                    sortedShops: function() {
                        return this.data.d.filter((function(e) {
                            return 2 != e.t && e.n.includes("24/7")
                        })).sort((function(e, t) {
                            return e.f - t.f
                        }))
                    },
                    sortedAmmunations: function() {
                        return this.data.d.filter((function(e) {
                            return 2 != e.t && e.n.includes("Ammunation")
                        })).sort((function(e, t) {
                            return e.f - t.f
                        }))
                    },
                    sortedOtherShops: function() {
                        return this.data.d.filter((function(e) {
                            return 2 != e.t && !e.n.includes("Ammunation") && !e.n.includes("24/7")
                        })).sort((function(e, t) {
                            return e.f - t.f
                        }))
                    },
                    sortedFuelstations: function() {
                        return this.data.d.filter((function(e) {
                            return 2 == e.t
                        })).sort((function(e, t) {
                            return e.f - t.f
                        }))
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    setShopGPS: function(e) {
                        this.emit("SetGPS", parseInt(e.x), parseInt(e.y)), fuckThis("fromUINot","Der Marker zum Shop wurde gesetzt.", "#c72020")
                    },
                    setStorageGPS: function(e) {
                        this.emitServer("SetStorageGPS", e.i), fuckThis("fromUINot","Der Marker zum Shop wurde gesetzt.", "#c72020")
                    },
                    requestData: function() {
                        this.emitServer("RqTruckDeliveries", this.deliveries[this.deliveries.length - 1].i)
                    },
                    getVehicleNameByDataId: function(e) {
                        var t = this.vehicleData.find((function(t) {
                            return t.id == e
                        }));
                        return void 0 != t ? t.name : "UNBEKANNT"
                    },
                    getShopNameById: function(e, t) {
                        var a = this.data.d.find((function(a) {
                            return a.i == e && a.t == t
                        }));
                        return void 0 != a ? a.n : "UNBEKANNT"
                    },
                    setPage: function(e) {
                        var t = this;
                        return Object(b["a"])(Object(f["a"])().mark((function a() {
                            return Object(f["a"])().wrap((function(a) {
                                while (1) switch (a.prev = a.next) {
                                    case 0:
                                        if (4 !== e) {
                                            a.next = 12;
                                            break
                                        }
                                        if (0 == t.deliveries.length && t.emitServer("RqTruckDeliveries", 0), t.dev) {
                                            a.next = 10;
                                            break
                                        }
                                        return a.next = 5, fetch("http://assets/SibauiRP_Assets/data/vehicleData.json");
                                    case 5:
                                        return a.next = 7, a.sent.json();
                                    case 7:
                                        t.vehicleData = a.sent, a.next = 12;
                                        break;
                                    case 10:
                                        t.deliveries = [{
                                            i: 1,
                                            d: "Donnerstag, 18.06.2021 18:25",
                                            v: 123,
                                            n: "Simsi Bimsi",
                                            s: 13,
                                            oa: 100,
                                            na: 200,
                                            m: 200
                                        }, {
                                            i: 2,
                                            d: "Donnerstag, 18.06.2021 18:35",
                                            v: 125,
                                            n: "Bimsi Mimsi",
                                            s: 12,
                                            oa: 100,
                                            na: 150,
                                            m: 200
                                        }, {
                                            i: 3,
                                            d: "Donnerstag, 18.06.2021 18:57",
                                            v: 100,
                                            n: "Bimsi Mimsi",
                                            s: 10,
                                            oa: 100,
                                            na: 180,
                                            m: 200
                                        }, {
                                            i: 4,
                                            d: "Donnerstag, 18.06.2021 18:25",
                                            v: 123,
                                            n: "Simsi Bimsi",
                                            s: 13,
                                            oa: 100,
                                            na: 200,
                                            m: 200
                                        }, {
                                            i: 5,
                                            d: "Donnerstag, 18.06.2021 18:35",
                                            v: 125,
                                            n: "Bimsi Mimsi",
                                            s: 12,
                                            oa: 100,
                                            na: 150,
                                            m: 200
                                        }, {
                                            i: 6,
                                            d: "Donnerstag, 18.06.2021 18:57",
                                            v: 100,
                                            n: "Bimsi Mimsi",
                                            s: 10,
                                            oa: 100,
                                            na: 180,
                                            m: 200
                                        }, {
                                            i: 7,
                                            d: "Donnerstag, 18.06.2021 18:25",
                                            v: 123,
                                            n: "Simsi Bimsi",
                                            s: 13,
                                            oa: 100,
                                            na: 200,
                                            m: 200
                                        }], t.vehicleData = [{
                                            id: 123,
                                            name: "Mule"
                                        }, {
                                            id: 125,
                                            name: "Pounder"
                                        }, {
                                            id: 100,
                                            name: "Boxville"
                                        }];
                                    case 12:
                                        t.page = e;
                                    case 13:
                                    case "end":
                                        return a.stop()
                                }
                            }), a)
                        })))()
                    },
                    RsTruckDeliveries: function(e) {
                        var t;
                        this.deliveries.length > 0 ? (t = this.deliveries).push.apply(t, Object(K["a"])(e.d)) : this.deliveries = e.d
                    }
                },
                created: function() {
                    this.addEvent("RsTruckDeliveries", this.RsTruckDeliveries)
                }
            },
            _f = hf,
            pf = (a("217f"), Object(d["a"])(_f, mf, df, !1, null, "534a4759", null)),
            vf = pf.exports,
            ff = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-sm",
                    attrs: {
                        title: "Telefonnummer ändern",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "change-phone-number"
                }, [t("div", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v(" Aktuelle Telefonnummer: " + e._s(this.data) + " ")]), t("div", {
                    staticStyle: {
                        color: "white"
                    }
                }, [e._v(" " + e._s(this.getInputFeedback) + " ")]), t("div", {
                    staticClass: "code-feedback"
                }, [t("CoreInput", {
                    staticClass: "dark",
                    attrs: {
                        placeholder: "Wunschnummer"
                    },
                    model: {
                        value: e.codeInput,
                        callback: function(t) {
                            e.codeInput = e._n(t)
                        },
                        expression: "codeInput"
                    }
                })], 1), t("div", {
                    staticClass: "code-numbers"
                }, [t("CoreButton", {
                    on: {
                        click: e.CheckNumber
                    }
                }, [e._v("Verfügbarkeit Prüfen")]), t("CoreButton", {
                    on: {
                        click: e.BuyNumber
                    }
                }, [e._v("Wunschnummer kaufen")])], 1)])])
            },
            bf = [],
            gf = {
                name: "ChangePhoneNumber",
                components: {
                    CoreButton: x,
                    CoreInput: A,
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        codeInput: ""
                    }
                },
                created: function() {},
                methods: {
                    CheckNumber: function() {
                        var e = parseInt(this.codeInput);
                        this.emitServer("CheckPhoneNumber", e)
                    },
                    BuyNumber: function() {
                        var e = parseInt(this.codeInput);
                        this.emitServer("ChangePhoneNumber", e)
                    },
                    IsValidNumber: function() {
                        return !(isNaN(this.codeInput) || this.codeInput < 1001 || this.codeInput > 999999)
                    }
                },
                computed: {
                    getInputFeedback: function() {
                        if ("" === this.codeInput) return "";
                        if (!this.IsValidNumber()) return "Keine gültige Nummer angegeben!";
                        var e = 25e4;
                        return this.codeInput < 1e4 ? e = 7e5 : this.codeInput < 1e5 && (e = 4e5), "Preis: " + e + "$"
                    }
                }
            },
            yf = gf,
            Cf = (a("fe3f"), Object(d["a"])(yf, ff, bf, !1, null, "81a0373a", null)),
            kf = Cf.exports,
            wf = function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/darknet/icon.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Darknet ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("Darknet")]), t("span", [e._v("S1bsh0p")])]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(1, "Offene Services")
                        }
                    }
                }, [t("a", {}, [e._v("S1bsh0p")])])]), t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [void 0 != e.items && e.items.length ? t("div", {
                    staticClass: "darknet-item-group"
                }, e._l(e.items, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "darknet-item-group-item"
                    }, [t("DarknetItem", {
                        attrs: {
                            item: a,
                            "item-data": e.itemData,
                            id: e.id
                        },
                        on: {
                            finish: function(t) {
                                return e.hide()
                            }
                        }
                    })], 1)
                })), 0) : t("div", {
                    staticClass: "darknet-item-group"
                }, [t("div", {
                    staticClass: "darknet-item-group-item"
                }, [t("div", {
                    staticClass: "darknet-item-group-item-header"
                }, [e._v("Es gibt derzeit keine Angebote")])])])])])
            },
            Sf = [],
            Mf = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("div", {
                    staticClass: "darknet-item-group-item-header"
                }, [e._v(e._s(e.itemData[e.item.i].name))]), t("div", {
                    staticClass: "darknet-item-group-item-image"
                }, [t("img", {
                    attrs: {
                        src: "images/inventoy/items/" + e.item.i + ".png",
                        alt: ""
                    }
                })]), t("div", {
                    staticClass: "darknet-item-group-item-actions"
                }, [t("div", {
                    staticClass: "darknet-item-group-item-actions-price"
                }, [t("span", [e._v("Preis:")]), e._v(" " + e._s(e.item.p) + " VisCoins ")]), t("div", {
                    staticClass: "darknet-item-group-item-actions-details"
                }, [t("div", [t("span", [e._v("Lagerbestand:")]), e._v(" " + e._s(e.item.a) + " ")]), t("div", [t("span", [e._v("Lieferzeit (min):")]), e._v(" " + e._s(e.item.t) + " ")])]), t("div", {
                    staticClass: "darknet-item-group-item-actions-actions"
                }, [t("div", {
                    staticClass: "darknet-item-group-item-actions-amount"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.amount,
                        expression: "amount"
                    }],
                    attrs: {
                        type: "number",
                        min: "1",
                        max: "10",
                        step: "1",
                        placeholder: "Anzahl"
                    },
                    domProps: {
                        value: e.amount
                    },
                    on: {
                        input: function(t) {
                            t.target.composing || (e.amount = t.target.value)
                        }
                    }
                })]), t("div", {
                    staticClass: "darknet-item-group-item-actions-buy"
                }, [t("CoreButton", {
                    on: {
                        click: function(t) {
                            return e.buyItem(e.item)
                        }
                    }
                }, [e._v("Kaufen")])], 1)])])])
            },
            xf = [],
            Pf = (a("25eb"), {
                name: "DarknetItem",
                components: {
                    CoreButton: x
                },
                props: ["item", "itemData", "id"],
                data: function() {
                    return {
                        amount: null
                    }
                },
                methods: {
                    buyItem: function(e) {
                        var t = this.amount.trim();
                        t = Number.parseInt(t), isNaN(t) || t <= 0 || t > e.a || (this.emitServer("BuyDarknetItem", this.id, e.i, t), this.$emit("finish"))
                    }
                }
            }),
            Tf = Pf,
            Ff = Object(d["a"])(Tf, Mf, xf, !1, null, "0383e714", null),
            Bf = Ff.exports,
            If = {
                name: "Darknet",
                components: {
                    DarknetItem: Bf,
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        id: this.data.i,
                        items: this.data.d,
                        itemData: null,
                        page: 1
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (!e.dev) {
                                        t.next = 3;
                                        break
                                    }
                                    return e.itemData = {
                                        0: {
                                            name: "",
                                            maxStack: 0,
                                            weight: 0
                                        },
                                        1: {
                                            name: "Schutzweste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        2: {
                                            name: "Verbandskasten",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        3: {
                                            name: "Weed",
                                            maxStack: 100,
                                            weight: 100,
                                            customDataText: "Weed (Reinheitsgrad {0}%)"
                                        },
                                        4: {
                                            name: "Fahrzeugschlüssel",
                                            maxStack: 1,
                                            weight: 100,
                                            customDataText: "Schlüssel von {0} ({1})"
                                        },
                                        5: {
                                            name: "Diamant",
                                            maxStack: 10,
                                            weight: 100
                                        },
                                        6: {
                                            name: "Verbandskoffer",
                                            maxStack: 1,
                                            weight: 8e3
                                        },
                                        7: {
                                            name: "Joint",
                                            maxStack: 100,
                                            weight: 100
                                        },
                                        8: {
                                            name: "Wassereimer",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        9: {
                                            name: "Schaufel",
                                            maxStack: 1,
                                            weight: 3e3
                                        },
                                        10: {
                                            name: "Dünger",
                                            maxStack: 3,
                                            weight: 100
                                        }
                                    }, t.abrupt("return");
                                case 3:
                                    return t.next = 5, fetch("http://assets/SibauiRP_Assets/data/items.json");
                                case 5:
                                    return t.next = 7, t.sent.json();
                                case 7:
                                    e.itemData = t.sent;
                                case 8:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            },
            Af = If,
            Df = (a("09dd"), Object(d["a"])(Af, wf, Sf, !1, null, null, null)),
            Nf = Df.exports,
            Of = (a("4fad"), function() {
                var e = this,
                    t = e._self._c;
                return t("DeviceComputer", {
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "computer-header-tab active",
                    attrs: {
                        slot: "computer-header-tab"
                    },
                    slot: "computer-header-tab"
                }, [t("span", {
                    staticClass: "computer-header-tab-image",
                    attrs: {
                        slot: "computer-tab-logo"
                    },
                    slot: "computer-tab-logo"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/basementworkstation/hightower.png",
                        alt: ""
                    }
                })]), t("span", {
                    staticClass: "computer-header-tab-title",
                    attrs: {
                        slot: "computer-tab-title"
                    },
                    slot: "computer-tab-title"
                }, [e._v(" Albert Industries ")])]), t("span", {
                    attrs: {
                        slot: "computer-header-url-bar"
                    },
                    slot: "computer-header-url-bar"
                }, [t("span", [e._v("Albert Industries")]), t("span", [e._v("Workstation")])]), t("ul", {
                    staticClass: "computer-body-content-tablist",
                    attrs: {
                        slot: "computer-body-content-tablist"
                    },
                    slot: "computer-body-content-tablist"
                }, [t("li", {
                    class: {
                        active: 1 == e.page
                    },
                    on: {
                        click: function(t) {
                            return e.changePage(1, "Offene Services")
                        }
                    }
                }, [t("a", {}, [e._v("Workstation (Stufe " + e._s(JSON.parse(this.data).l) + ")")])])]), null !== e.itemData ? t("div", {
                    attrs: {
                        slot: "computer-body-content-box"
                    },
                    slot: "computer-body-content-box"
                }, [t("div", {
                    staticClass: "basement-work-station"
                }, [t("div", {
                    staticClass: "basement-work-station-left"
                }, [t("div", {
                    staticClass: "basement-work-station-left-items"
                }, e._l(e.items, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "basement-work-station-left-items-item"
                    }, [e._v(" " + e._s(a.amount) + "x " + e._s(a.name) + " ")])
                })), 0)]), t("div", {
                    staticClass: "basement-work-station-right"
                }, [t("div", {
                    staticClass: "basement-work-station-right-dropdown"
                }, [t("select", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.selectedBlueprint,
                        expression: "selectedBlueprint"
                    }],
                    staticClass: "basement-work-station-right-dropdown-selectbox",
                    on: {
                        change: function(t) {
                            var a = Array.prototype.filter.call(t.target.options, (function(e) {
                                return e.selected
                            })).map((function(e) {
                                var t = "_value" in e ? e._value : e.value;
                                return t
                            }));
                            e.selectedBlueprint = t.target.multiple ? a : a[0]
                        }
                    }
                }, e._l(e.blueprints, (function(a) {
                    return t("option", {
                        key: a.i,
                        domProps: {
                            value: a.di
                        }
                    }, [e._v(e._s(e.resolveBlueprintName(a.di)))])
                })), 0)]), e.selectedBlueprint && e.compBlueprintData ? t("div", {
                    staticClass: "basement-work-station-right-informations"
                }, [t("div", {
                    staticClass: "basement-work-station-right-informations-blueprint"
                }, [t("div", {
                    staticClass: "blueprint-left"
                }, [t("h4", [e._v(e._s(Object.values(e.compBlueprintData.outputItems)[0]) + "x " + e._s(e.compBlueprintData.name))]), t("div", {
                    staticClass: "blueprint-left-items"
                }, e._l(Object.entries(e.compBlueprintData.inputItems), (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "blueprint-left-items-item",
                        class: {
                            existing: e.groupedItems.some((function(e) {
                                return Number.parseInt(e.item_id) === Number.parseInt(a[0]) && Number.parseInt(e.amount) >= Number.parseInt(a[1])
                            }))
                        }
                    }, [e._v(" " + e._s(a[1]) + "x " + e._s(a[0]) + " ")])
                })), 0), t("div", {
                    staticClass: "blueprint-left-finish"
                }, [e.compBlueprint.u > 0 ? t("div", {
                    on: {
                        click: function(t) {
                            return e.useBlueprint(e.compBlueprint.i)
                        }
                    }
                }, [e._v("Herstellen")]) : e._e()])]), t("div", {
                    staticClass: "blueprint-right"
                }, [t("div", {
                    staticClass: "blueprint-right-upper"
                }, [t("dsfdsfdsf", {
                    attrs: {
                    }
                })]), t("div", {
                    staticClass: "blueprint-right-lower"
                }, [t("div", {
                    staticClass: "blueprint-right-lower-box"
                }, [t("div", {
                    staticClass: "blueprint-right-lower-box-title"
                }, [e._v(e._s(e.compBlueprintData.name))]), t("div", {
                    staticClass: "blueprint-right-lower-box-rarity",
                    class: e.compBlueprintData.rarity
                }, [e._v(e._s(e.compBlueprintData.rarity))]), t("div", {
                    staticClass: "blueprint-right-lower-box-usages"
                }, [e._v(e._s(e.compBlueprintData.maxUsages - e.compBlueprint.u) + " / " + e._s(e.compBlueprintData.maxUsages))])])])])])]) : e._e()])])]) : e._e()])
            }),
            Lf = [],
            Hf = {
                name: "BasementWorkstation",
                components: {
                    DeviceComputer: Wt
                },
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        items: JSON.parse(this.data).i,
                        blueprints: JSON.parse(this.data).b,
                        selectedBlueprint: null,
                        itemData: [],
                        blueprintData: [{
                            id: 1,
                            name: "Heavy Rifle",
                            duration: 3e4,
                            maxUsages: 3,
                            rarity: "Legendary",
                            inputItems: {
                                "Waffenteile": 15
                            },
                            outputItems: {
                                "Heavy Rifle": 1
                            }
                        }, {
                            id: 2,
                            name: "Verbandskasten",
                            duration: 5e4,
                            maxUsages: 10,
                            rarity: "Uncommon",
                            inputItems: {
                                "Verband": 25
                            },
                            outputItems: {
                                "Verbandskasten": 5
                            }
                        }, {
                            id: 3,
                            name: "Underarmor",
                            duration: 5e4,
                            maxUsages: 10,
                            rarity: "Uncommon",
                            inputItems: {
                                186: 8
                            },
                            outputItems: {
                                216: 2
                            }
                        }, {
                            id: 4,
                            name: "Große Kevlarweste",
                            duration: 5e4,
                            maxUsages: 15,
                            rarity: "Rare",
                            inputItems: {
                                186: 10
                            },
                            outputItems: {
                                1: 2
                            }
                        }, {
                            id: 5,
                            name: "Halbe Keramikweste",
                            duration: 5e4,
                            maxUsages: 20,
                            rarity: "Epic",
                            inputItems: {
                                189: 10
                            },
                            outputItems: {
                                217: 1
                            }
                        }, {
                            id: 6,
                            name: "Volle Keramikweste",
                            duration: 5e4,
                            maxUsages: 25,
                            rarity: "Legendary",
                            inputItems: {
                                189: 20
                            },
                            outputItems: {
                                308: 1
                            }
                        }, {
                            id: 7,
                            name: "Special Carbine MK2",
                            duration: 3e4,
                            maxUsages: 3,
                            rarity: "Legendary",
                            inputItems: {
                                193: 12
                            },
                            outputItems: {
                                127: 1
                            }
                        }, {
                            id: 8,
                            name: "Lagerkiste",
                            duration: 5e4,
                            maxUsages: 3,
                            rarity: "Rare",
                            inputItems: {
                                416: 6,
                                414: 14,
                                207: 12
                            },
                            outputItems: {
                                402: 1
                            }
                        }, {
                            id: 9,
                            name: "Lagerkiste",
                            duration: 5e4,
                            maxUsages: 5,
                            rarity: "Epic",
                            inputItems: {
                                416: 5,
                                414: 12,
                                207: 10
                            },
                            outputItems: {
                                402: 1
                            }
                        }, {
                            id: 10,
                            name: "Lagerkiste",
                            duration: 5e4,
                            maxUsages: 1,
                            rarity: "Uncommon",
                            inputItems: {
                                416: 7,
                                414: 15,
                                207: 14
                            },
                            outputItems: {
                                402: 1
                            }
                        }, {
                            id: 11,
                            name: "NVIDIA RTX 3080 TI",
                            duration: 5e4,
                            maxUsages: 3,
                            rarity: "Epic",
                            inputItems: {
                                795: 5,
                                59: 5,
                                794: 10
                            },
                            outputItems: {
                                "Weste": 1
                            }
                        }, {
                            id: 12,
                            name: "Leiterplatte",
                            duration: 5e4,
                            maxUsages: 100,
                            rarity: "Common",
                            inputItems: {
                                794: 50,
                                61: 5,
                                50: 5,
                                59: 5
                            },
                            outputItems: {
                                795: 5
                            }
                        }, {
                            id: 13,
                            name: "Alpha Rucksack",
                            duration: 5e4,
                            maxUsages: 5,
                            rarity: "Rare",
                            inputItems: {
                                185: 50
                            },
                            outputItems: {
                                741: 1
                            }
                        }],
                        page: 1,
                        NFormatter: null
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    resolveBlueprintName: function(e) {
                        var t = this.blueprintData.filter((function(t) {
                            return t.id === e
                        }));
                        return t.length > 0 ? t[0].name : "NIETZSCHE FEHLER"
                    },
                    useBlueprint: function(e) {
                        this.emitServer("UseBlueprint", e), this.close()
                    }
                },
                computed: {
                    compBlueprint: function() {
                        var e = this,
                            t = this.blueprints.filter((function(t) {
                                return t.di === e.selectedBlueprint
                            }));
                        return t.length > 0 ? t[0] : null
                    },
                    compBlueprintData: function() {
                        var e = this,
                            t = this.blueprintData.filter((function(t) {
                                return t.id === e.selectedBlueprint
                            }));
                        return t.length > 0 ? t[0] : null
                    },
                    groupedItems: function() {
                        var e = At.a.groupBy(this.items, "i");
                        return At.a.map(e, (function(e, t) {
                            return {
                                item_id: t,
                                amount: At.a.sumBy(e, "a")
                            }
                        }))
                    }
                },
                created: function() {
                    var e = this;
                  
                },
                mounted: function() {
                    this.NFormatter = new Intl.NumberFormat("de-DE", {
                        style: "currency",
                        currency: "USD",
                        maximumFractionDigits: 0
                    })
                }
            },
            zf = Hf,
            jf = (a("660b"), Object(d["a"])(zf, Of, Lf, !1, null, null, null)),
            Rf = jf.exports,
            Vf = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "basement-server"
                }, [t("div", {
                    staticClass: "basement-server-close",
                    on: {
                        click: function(t) {
                            return e.close()
                        }
                    }
                }, [t("div", [e._v("x")])]), t("div", {
                    staticClass: "basement-server-box"
                }, [t("div", {
                    staticClass: "basement-server-box-computer"
                }, [t("div", {
                    staticClass: "basement-server-box-computer-content",
                    class: {
                        "with-logs": e.logsVisible
                    }
                }, [e.logsVisible ? t("div", {
                    staticClass: "basement-server-box-computer-content-list"
                }, e._l(e.logEntries, (function(a) {
                    return t("div", {
                        key: a.i,
                        staticClass: "basement-server-box-computer-content-list-item"
                    }, [t("div", [e._v(e._s(a.t))]), t("div", {
                        staticClass: "checked"
                    }, [e._v("[ " + e._s(a.v) + " ]")])])
                })), 0) : t("div", {
                    staticClass: "basement-server-box-computer-content-list"
                }, [e._m(0), e._m(1), t("div", {
                    staticClass: "basement-server-box-computer-content-list-item"
                }, [t("div", [e._v("Checking Components (" + e._s(e.serverComponents.length) + ")")]), t("div", {
                    class: {
                        failed: e.totalComponentsFailed.length > 0,
                        checked: 0 === e.totalComponentsFailed.length
                    }
                }, [e._v("[ " + e._s(e.totalComponentsFailed.length > 0 ? "FAIL" : "CHECK") + " ]")])]), e._l(e.totalComponentsFailed, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "basement-server-box-computer-content-list-item"
                    }, [t("div", [e._v("Malfunction found: "), t("i", [t("u", [e._v(e._s(a.name))])])]), t("div", {
                        class: {
                            failed: e.totalComponentsFailed.length > 0,
                            checked: 0 === e.totalComponentsFailed.length
                        }
                    }, [e._v("[ " + e._s(e.totalComponentsFailed.length > 0 ? "FAIL" : "CHECK") + " ]")])])
                }))], 2)]), e.logsVisible ? e._e() : t("div", {
                    staticClass: "sibcoins-total"
                }, [t("span", [e._v("Total VisCoins:")]), t("span", [e._v(e._s(e.cryptoValue))])])]), t("div", {
                    staticClass: "basement-server-box-divider"
                }), t("div", {
                    staticClass: "basement-server-box-actionbox"
                }, [t("div", {
                    staticClass: "basement-server-box-actionbox-button",
                    class: {
                        start: !e.status,
                        stop: e.status
                    },
                    on: {
                        click: e.changeStatus
                    }
                }, [e._v(e._s(e.status ? "Stop" : "Start"))]), t("div", {
                    staticClass: "basement-server-box-actionbox-description"
                }, [e._v(" VisCoin Mining Server ")]), t("div", {
                    staticClass: "basement-server-box-actionbox-button payout",
                    on: {
                        click: e.takeCrypto
                    }
                }, [e._v("payout")]), t("div", {
                    staticClass: "basement-server-box-actionbox-button log",
                    on: {
                        click: e.showLogs
                    }
                }, [e._v("Log")])]), t("div", {
                    staticClass: "basement-server-box-divider"
                }), t("div", {
                    staticClass: "basement-server-box-components"
                }, e._l(e.serverComponents, (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "basement-server-box-components-rack"
                    }, [t("div", {
                        staticClass: "basement-server-box-components-rack-button"
                    }, [t("div", {
                        staticClass: "lamp",
                        class: {
                            error: 0 === a.value,
                            success: a.value >= 1,
                            idle: null === a.value
                        }
                    })]), e._m(2, !0), t("div", {
                        staticClass: "basement-server-box-components-rack-type"
                    }, [a.name.toLowerCase() !== "Spacer".toLowerCase() ? t("span", [e._v(e._s(a.item_name))]) : e._e()]), e._m(3, !0), t("div", {
                        staticClass: "basement-server-box-components-rack-button"
                    }, [t("div", {
                        staticClass: "lamp",
                        class: {
                            error: 0 === a.value,
                            success: a.value >= 1,
                            idle: null === a.value
                        }
                    })])])
                })), 0), t("div", {
                    staticClass: "basement-server-box-logs"
                })])])
            },
            Ef = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "basement-server-box-computer-content-list-item"
                }, [t("div", [e._v("Booting VisCoin Mining System")]), t("div", {
                    staticClass: "checked"
                }, [e._v("[ CHECK ]")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "basement-server-box-computer-content-list-item"
                }, [t("div", [e._v("Reading Memory Buffer")]), t("div", {
                    staticClass: "checked"
                }, [e._v("[ CHECK ]")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "basement-server-box-components-rack-airflow"
                }, [t("div", {
                    staticClass: "basement-server-box-components-airflow"
                }), t("div", {
                    staticClass: "basement-server-box-components-airflow"
                }), t("div", {
                    staticClass: "basement-server-box-components-airflow"
                })])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "basement-server-box-components-rack-airflow"
                }, [t("div", {
                    staticClass: "basement-server-box-components-airflow"
                }), t("div", {
                    staticClass: "basement-server-box-components-airflow"
                }), t("div", {
                    staticClass: "basement-server-box-components-airflow"
                })])
            }],
            Gf = {
                name: "BasementServer",
                components: {},
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        NumberFormatter: null,
                        logsVisible: !1,
                        logEntries: null,
                        serverId: JSON.parse(this.data).i,
                        status: JSON.parse(this.data).status,
                        cryptoValue: JSON.parse(this.data).crypto,
                        graphicsCard: JSON.parse(this.data).graphic,
                        cpu: JSON.parse(this.data).cpu,
                        powersupply: JSON.parse(this.data).powersupply,
                        memory: JSON.parse(this.data).memory
                    }
                },
                computed: {
                    serverComponents: function() {
                        return [{
                            name: "graphicscard",
                            item_name: this.resolveComponent(0, this.graphicsCard),
                            value: parseInt(this.graphicsCard)
                        }, {
                            name: "cpu",
                            item_name: this.resolveComponent(1, this.cpu),
                            value: parseInt(this.cpu)
                        }, {
                            name: "memory",
                            item_name: 0 === parseInt(this.memory) ? "Nicht Vorhanden!" : "Arbeitsspeicher",
                            value: parseInt(this.memory)
                        }, {
                            name: "powersupply",
                            item_name: 0 === parseInt(this.powersupply) ? "Nicht Vorhanden!" : "Netzteil",
                            value: parseInt(this.powersupply)
                        }, {
                            name: "Spacer",
                            value: null
                        }, {
                            name: "Spacer",
                            value: null
                        }, {
                            name: "Spacer",
                            value: null
                        }]
                    },
                    totalComponentsFailed: function() {
                        return this.serverComponents.filter((function(e) {
                            return 0 === e.value
                        }))
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    },
                    showLogs: function() {
                        this.logsVisible = !this.logsVisible, !1 !== this.logsVisible && null === this.logEntries && this.emitServer("RqCryptoMiningLogs", this.serverId)
                    },
                    resolveComponent: function(e, t) {
                        var a = parseInt(t),
                            i = null;
                        switch (e) {
                            case 0:
                                0 === a && (i = "Nicht Vorhanden!"), 1 === a && (i = "NVIDIA GTX 1070"), 2 === a && (i = "NVIDIA RTX 2080"), 3 === a && (i = "NVIDIA RTX 3080 TI");
                                break;
                            case 1:
                                0 === a && (i = "Nicht Vorhanden!"), 1 === a && (i = "AMD Ryzen 5 1600X"), 2 === a && (i = "AMD Ryzen 7 2700X");
                                break
                        }
                        return i
                    },
                    changeStatus: function() {
                        this.emitServer("ToggleCryptoServer", this.serverId), this.hide()
                    },
                    takeCrypto: function() {
                        this.cryptoValue <= 0 || (this.emitServer("TakeCryptoFromServer", this.serverId), this.hide())
                    },
                    RsCryptoMiningLogs: function(e) {
                        this.logEntries = JSON.parse(e)
                    }
                },
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    e.NumberFormatter = new Intl.NumberFormat("de-DE"), e.addEvent("RsCryptoMiningLogs", e.RsCryptoMiningLogs), e.dev && (e.logEntries = [{
                                        i: 1,
                                        v: 1e4,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }, {
                                        i: 1,
                                        v: 100,
                                        t: "24.02 16:55"
                                    }]);
                                case 3:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                },
                mounted: function() {}
            },
            Wf = Gf,
            Kf = (a("bd74"), Object(d["a"])(Wf, Vf, Ef, !1, null, null, null)),
            Uf = Kf.exports,
            $f = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-lg",
                    attrs: {
                        title: "Inhaftierung von " + e.data.n,
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "imprisonment"
                }, [t("CoreTable", {
                    staticClass: "imprisonment-left"
                }, [t("thead", [t("tr", [t("th", [e._v("Zelle")])])]), t("tbody", e._l(this.data.c, (function(a) {
                    return t("tr", {
                        key: a.i
                    }, [t("td", [t("span", {
                        class: {
                            active: e.selectedCell == a
                        }
                    }, [e._v(e._s(a.n) + " - " + e._s(a.m) + " / " + e._s(a.mm))]), e.selectedCell == a ? t("div", {
                        staticClass: "active"
                    }, [e._v(" Ausgewählt ")]) : t("div", [a.m < a.mm ? t("CoreButton", {
                        on: {
                            click: function(t) {
                                return e.selectCell(a)
                            }
                        }
                    }, [e._v("Auswählen")]) : e._e()], 1)])])
                })), 0)]), t("div", {
                    staticClass: "imprisonment-mid"
                }, [t("div", {
                    staticClass: "imprisonment-mid-label"
                }, [e._v(" Name des Anwalts (optional) ")]), t("CoreInput", {
                    staticClass: "imprisonment-mid-lawyer-input dark",
                    attrs: {
                        placeholder: "Name"
                    },
                    model: {
                        value: e.lawyerName,
                        callback: function(t) {
                            e.lawyerName = t
                        },
                        expression: "lawyerName"
                    }
                }), t("div", {
                    staticClass: "imprisonment-mid-corporate"
                }, [t("div", {
                    staticClass: "imprisonment-mid-label"
                }, [e._v(" War " + e._s(this.data.n) + " kooperativ? ")]), t("div", {
                    staticClass: "imprisonment-mid-corporate-check"
                }, [e._v(" Ja "), t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.cooperative,
                        expression: "cooperative"
                    }],
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        id: "corporate"
                    },
                    domProps: {
                        checked: Array.isArray(e.cooperative) ? e._i(e.cooperative, null) > -1 : e.cooperative
                    },
                    on: {
                        change: function(t) {
                            var a = e.cooperative,
                                i = t.target,
                                s = !!i.checked;
                            if (Array.isArray(a)) {
                                var n = null,
                                    r = e._i(a, n);
                                i.checked ? r < 0 && (e.cooperative = a.concat([n])) : r > -1 && (e.cooperative = a.slice(0, r).concat(a.slice(r + 1)))
                            } else e.cooperative = s
                        }
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: "corporate"
                    }
                })]), e._v(" Nein ")])]), t("div", {
                    staticClass: "imprisonment-mid-button-area"
                }, [t("button", {
                    staticClass: "imprisonment-atom-button",
                    on: {
                        click: function(t) {
                            return e.imprisonPlayer()
                        }
                    }
                }, [t("img", {
                    attrs: {
                        src: "images/interface/imprisonment/imprisonment-button.png",
                        alt: ""
                    }
                })])])], 1)], 1)])
            },
            qf = [],
            Jf = {
                name: "Imprisonment",
                components: {
                    CoreButton: x,
                    CoreInterface: J,
                    CoreInput: A
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        cooperative: !1,
                        selectedCell: null,
                        lawyerName: ""
                    }
                },
                methods: {
                    selectCell: function(e) {
                        this.selectedCell = e
                    },
                    imprisonPlayer: function() {
                        null != this.selectedCell ? this.emitServer("ImprisonPlayer", this.data.i, this.data.p, this.selectedCell.i, !this.cooperative, this.lawyerName) : fuckThis("fromUINot","Keine Zelle ausgewählt!", "#c72020")
                    }
                },
                computed: {}
            },
            Zf = Jf,
            Xf = (a("6fb7"), Object(d["a"])(Zf, $f, qf, !1, null, "67c453c5", null)),
            Yf = Xf.exports,
            Qf = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "treatmentcertificate"
                }, [t("div", {
                    staticClass: "treatmentcertificate-box"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header"
                }, [t("div", {
                    staticClass: "treatmentcertificate-header-logo"
                }), t("div", {
                    staticClass: "treatmentcertificate-header-actions"
                }, [t("BaseButton", {
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close text-custom-danger"
                })])], 1)]), t("div", {
                    staticClass: "treatmentcertificate-body"
                }, [t("div", {
                    staticClass: "treatmentcertificate-body-proof"
                }, [e._v(" Behandlungsbestätigung ")]), t("div", {
                    staticClass: "treatmentcertificate-body-details"
                }, [t("div", {
                    staticClass: "tcbd-row"
                }, [t("div", {
                    staticClass: "tcbd-left"
                }, [e._v("Herr/Frau")]), t("div", {
                    staticClass: "tcbd-right"
                }, [e._v(e._s(e.data.n))])]), e._m(0), t("div", {
                    staticClass: "tcbd-row"
                }, [t("div", {
                    staticClass: "tcbd-left"
                }, [e._v("wurde am")]), t("div", {
                    staticClass: "tcbd-right"
                }, [e._v(e._s(this.data.d))])]), e._m(1), t("div", {
                    staticClass: "tcbd-row-results"
                }, [t("div", [e._v("Ärztliche Anmerkung:")]), t("div", [e._v(" Gegen " + e._s(this.data.d) + " Uhr Aufnahme des o.g. Patienten nach Notfallübernahme durch den Rettungsdienst. "), t("br"), e._v(" Erstdiagnose durch den Notarzt: "), t("b", [e._v(e._s(e.invdata.i))]), e._v(" "), t("br"), t("br"), e._v(" Beim Eintreffen des Pat. konnten keine Vitalparameter positiv geprüft werden. Der Pat. wird in ein künstliches Koma versetzt, mit der Hoffnung auf Regeneration."), t("br"), t("br"), t("b", [e._v("Achtung:")]), e._v(" o.g. Koma könnte eine temporäre Amnesie mit sich führen und dem Pat. wird strikte Bettruhe empfohlen. ")])])]), e._m(2), e._m(3)])])])
            },
            eb = [function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "tcbd-row"
                }, [t("div", {
                    staticClass: "tcbd-left"
                }, [e._v("Geb. am")]), t("div", {
                    staticClass: "tcbd-right"
                }, [e._v("/")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "tcbd-row without-style"
                }, [t("div", {
                    staticClass: "tcbd-left"
                }), t("div", {
                    staticClass: "tcbd-right"
                }, [e._v("ambulant im Krankenhaus behandelt.")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("p", {
                    staticClass: "report-subheader-finish"
                }, [t("span", {
                    staticClass: "signature"
                }, [e._v("Prof. Erwin Nietzsche")]), t("br"), t("span", [e._v("Medizinischer Direktor der Kliniken der Stadt Los Santos ")])])
            }, function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "report-disclaimer"
                }, [e._v(" Dieses Dokument gilt als offizieller Nachweis über eine staatlich "), t("br"), e._v(" durchgeführte medizinische Behandlung. ")])
            }],
            tb = {
                name: "TreatmentCertificate",
                components: {
                    BaseButton: dt
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        prompt: !1
                    }
                },
                methods: {
                    close: function() {
                        this.hide()
                    }
                },
                computed: {}
            },
            ab = tb,
            ib = (a("c674"), Object(d["a"])(ab, Qf, eb, !1, null, "7d263001", null)),
            sb = ib.exports,
            nb = function() {
                var e = this,
                    t = e._self._c;
                return t("CoreInterface", {
                    staticClass: "core-interface-blueprint-preview",
                    attrs: {
                        title: "Blueprint",
                        closeable: ""
                    },
                    on: {
                        close: function(t) {
                            return e.hide()
                        }
                    }
                }, [t("div", {
                    staticClass: "blueprint-preview"
                }, [t("div", {
                    staticClass: "blueprint-bg"
                }, [t("div", {
                    staticClass: "blueprint-left"
                }, [t("h4", [e._v(e._s(Object.values(e.blueprint.outputItems)[0]) + "x " + e._s(e.itemData[Object.keys(e.blueprint.outputItems)[0]].name))]), t("div", {
                    staticClass: "blueprint-left-items"
                }, e._l(Object.entries(e.blueprint.inputItems), (function(a, i) {
                    return t("div", {
                        key: i,
                        staticClass: "blueprint-left-items-item"
                    }, [e._v(" " + e._s(a[1]) + "x " + e._s(e.itemData[a[0]].name) + " ")])
                })), 0), t("div", {
                    staticClass: "blueprint-left-finish"
                })]), t("div", {
                    staticClass: "blueprint-right"
                }, [t("div", {
                    staticClass: "blueprint-right-upper"
                }, [t("img", {
                    attrs: {
                        src: "./images/interface/basementworkstation/" + Object.keys(e.blueprint.outputItems)[0] + ".png",
                        alt: e.itemData[Object.keys(e.blueprint.outputItems)[0]].name
                    }
                })]), t("div", {
                    staticClass: "blueprint-right-lower"
                }, [t("div", {
                    staticClass: "blueprint-right-lower-box"
                }, [t("div", {
                    staticClass: "blueprint-right-lower-box-title"
                }, [e._v(e._s(e.blueprint.name))]), t("div", {
                    staticClass: "blueprint-right-lower-box-rarity",
                    class: e.blueprint.rarity
                }, [e._v(e._s(e.blueprint.rarity))]), t("div", {
                    staticClass: "blueprint-right-lower-box-usages"
                }, [e._v("0 / " + e._s(e.blueprint.maxUsages))])])])])])])])
            },
            rb = [],
            ob = {
                name: "BlueprintPreview",
                components: {
                    CoreInterface: J
                },
                props: {
                    data: {
                        type: Object,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        itemData: [],
                        blueprintData: [],
                        blueprintDataId: this.data
                    }
                },
                computed: {
                    blueprint: function() {
                        var e = this,
                            t = this.blueprintData.filter((function(t) {
                                return t.id === e.blueprintDataId
                            }));
                        return t.length > 0 ? t[0] : []
                    }
                },
                methods: {},
                created: function() {
                    var e = this;
                    return Object(b["a"])(Object(f["a"])().mark((function t() {
                        return Object(f["a"])().wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    if (!e.dev) {
                                        t.next = 4;
                                        break
                                    }
                                    return e.itemData = {
                                        0: {
                                            name: "",
                                            maxStack: 0,
                                            weight: 0
                                        },
                                        1: {
                                            name: "Große Kevlarweste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        2: {
                                            name: "Verbandskasten",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        3: {
                                            name: "Weed",
                                            maxStack: 100,
                                            weight: 100,
                                            customDataText: "Weed (Reinheitsgrad {0}%)"
                                        },
                                        4: {
                                            name: "Fahrzeugschlüssel",
                                            maxStack: 1,
                                            weight: 100,
                                            customDataText: "Schlüssel von {0} ({1})"
                                        },
                                        5: {
                                            name: "Diamant",
                                            maxStack: 10,
                                            weight: 100
                                        },
                                        6: {
                                            name: "Verbandskoffer",
                                            maxStack: 1,
                                            weight: 8e3
                                        },
                                        7: {
                                            name: "Joint",
                                            maxStack: 100,
                                            weight: 100
                                        },
                                        8: {
                                            name: "Wassereimer",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        9: {
                                            name: "Schaufel",
                                            maxStack: 1,
                                            weight: 3e3
                                        },
                                        10: {
                                            name: "Dünger",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        11: {
                                            name: "Dünger",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        12: {
                                            name: "Dünger",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        127: {
                                            name: "Special Carbine MK2",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        186: {
                                            name: "Gebündelte Aramidfaser",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        193: {
                                            name: "Waffenset",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        216: {
                                            name: "Underarmor",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        217: {
                                            name: "Halbe Keramikweste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        308: {
                                            name: "Volle Keramikweste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        402: {
                                            name: "Lagerkiste",
                                            maxStack: 3,
                                            weight: 100
                                        },
                                        777: {
                                            name: "Heavy Rifle",
                                            maxStack: 3,
                                            weight: 100
                                        }
                                    }, e.blueprintData = [{
                                        id: 1,
                                        name: "Heavy Rifle",
                                        duration: 3e4,
                                        maxUsages: 3,
                                        rarity: "Legendary",
                                        inputItems: {
                                            193: 15
                                        },
                                        outputItems: {
                                            777: 1
                                        }
                                    }, {
                                        id: 2,
                                        name: "Verbandskasten",
                                        duration: 5e4,
                                        maxUsages: 10,
                                        rarity: "Uncommon",
                                        inputItems: {
                                            185: 25
                                        },
                                        outputItems: {
                                            2: 5
                                        }
                                    }, {
                                        id: 3,
                                        name: "Underarmor",
                                        duration: 5e4,
                                        maxUsages: 10,
                                        rarity: "Uncommon",
                                        inputItems: {
                                            186: 8
                                        },
                                        outputItems: {
                                            216: 2
                                        }
                                    }, {
                                        id: 4,
                                        name: "Große Kevlarweste",
                                        duration: 5e4,
                                        maxUsages: 15,
                                        rarity: "Rare",
                                        inputItems: {
                                            186: 10
                                        },
                                        outputItems: {
                                            1: 2
                                        }
                                    }, {
                                        id: 5,
                                        name: "Halbe Keramikweste",
                                        duration: 5e4,
                                        maxUsages: 20,
                                        rarity: "Epic",
                                        inputItems: {
                                            189: 10
                                        },
                                        outputItems: {
                                            217: 1
                                        }
                                    }, {
                                        id: 6,
                                        name: "Volle Keramikweste",
                                        duration: 5e4,
                                        maxUsages: 25,
                                        rarity: "Legendary",
                                        inputItems: {
                                            189: 20
                                        },
                                        outputItems: {
                                            308: 1
                                        }
                                    }, {
                                        id: 7,
                                        name: "Special Carbine MK2",
                                        duration: 3e4,
                                        maxUsages: 3,
                                        rarity: "Legendary",
                                        inputItems: {
                                            193: 12
                                        },
                                        outputItems: {
                                            127: 1
                                        }
                                    }, {
                                        id: 8,
                                        name: "Lagerkiste",
                                        duration: 5e4,
                                        maxUsages: 3,
                                        rarity: "Rare",
                                        inputItems: {
                                            416: 6,
                                            414: 14,
                                            207: 12
                                        },
                                        outputItems: {
                                            402: 1
                                        }
                                    }, {
                                        id: 9,
                                        name: "Lagerkiste",
                                        duration: 5e4,
                                        maxUsages: 5,
                                        rarity: "Epic",
                                        inputItems: {
                                            416: 5,
                                            414: 12,
                                            207: 10
                                        },
                                        outputItems: {
                                            402: 1
                                        }
                                    }, {
                                        id: 10,
                                        name: "Lagerkiste",
                                        duration: 5e4,
                                        maxUsages: 1,
                                        rarity: "Uncommon",
                                        inputItems: {
                                            416: 7,
                                            414: 15,
                                            207: 14
                                        },
                                        outputItems: {
                                            402: 1
                                        }
                                    }, {
                                        id: 11,
                                        name: "NVIDIA RTX 3080 TI",
                                        duration: 5e4,
                                        maxUsages: 3,
                                        rarity: "Epic",
                                        inputItems: {
                                            795: 5,
                                            59: 5,
                                            794: 10
                                        },
                                        outputItems: {
                                            730: 1
                                        }
                                    }, {
                                        id: 12,
                                        name: "Leiterplatte",
                                        duration: 5e4,
                                        maxUsages: 100,
                                        rarity: "Common",
                                        inputItems: {
                                            794: 50,
                                            61: 5,
                                            50: 5,
                                            59: 5
                                        },
                                        outputItems: {
                                            795: 5
                                        }
                                    }, {
                                        id: 13,
                                        name: "Alpha Rucksack",
                                        duration: 5e4,
                                        maxUsages: 5,
                                        rarity: "Rare",
                                        inputItems: {
                                            185: 50
                                        },
                                        outputItems: {
                                            741: 1
                                        }
                                    }], t.abrupt("return");
                                case 4:
                                    return t.next = 6, fetch("http://assets/SibauiRP_Assets/data/items.json");
                                case 6:
                                    return t.next = 8, t.sent.json();
                                case 8:
                                    return e.itemData = t.sent, t.next = 11, fetch("http://assets/SibauiRP_Assets/data/blueprintdata.json");
                                case 11:
                                    return t.next = 13, t.sent.json();
                                case 13:
                                    e.blueprintData = t.sent;
                                case 14:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    })))()
                }
            },
            cb = ob,
            lb = (a("b885"), Object(d["a"])(cb, nb, rb, !1, null, null, null)),
            ub = lb.exports,
            mb = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "reaction-game-interface",
                    on: {
                        click: e.onClick
                    }
                }, [t("div", {
                    staticClass: "reaction-game-circle-outline",
                    style: {
                        transform: "rotate(" + this.circlePosition + "deg)"
                    }
                }, [t("div", {
                    staticClass: "reaction-game-circle"
                }), t("div", {
                    staticClass: "reaction-game-circle-hr",
                    style: {
                        transform: "rotate(" + -this.circlePosition + "deg)"
                    }
                }), t("div", {
                    staticClass: "reaction-game-circle-cursor-area",
                    style: {
                        transform: "rotate(" + this.cursorRotation + "deg)"
                    }
                }, [t("div", {
                    staticClass: "reaction-game-circle-cursor"
                })])]), t("div", {
                    staticClass: "reaction-game-icon-area"
                }, [t("v-ons-icon", {
                    staticClass: "reaction-game-icon",
                    attrs: {
                        icon: "md-mouse"
                    }
                })], 1)])
            },
            db = [],
            hb = {
                name: "ReactionGame",
                props: {
                    data: {
                        type: String,
                        required: !0
                    }
                },
                data: function() {
                    return {
                        rdata: JSON.parse(this.data),
                        cursorRotation: 180,
                        cursorInterval: 0,
                        cursorSpeed: .8,
                        circlePosition: 0,
                        event: "",
                        args: null,
                    }
                },
                created: function() {
                    var e = this;
                    this.cursorSpeed = this.rdata.s, this.circlePosition = this.rdata.p, this.args = this.rdata.a, this.event = this.rdata.e, this.cursorInterval = setInterval((function() {
                        e.cursorRotation >= 360 && (e.cursorRotation = 0), e.cursorRotation += e.cursorSpeed
                    }), 5)
                },
                methods: {
                    onClick: function() {
                        var e = this;
                        clearInterval(this.cursorInterval);
                        var t = this.cursorRotation >= 90 && this.cursorRotation <= 125;
                        setTimeout((function() {
                            e.hide(), e.emitServer(e.event, t, e.args)
                        }), 2e3)
                    }
                }
            },
            _b = hb,
            pb = (a("a499"), Object(d["a"])(_b, mb, db, !1, null, "0bfcc964", null)),
            vb = pb.exports,
            fb = {
                DevDebug: _,
                Inventory: R,
                Garage: me,
                Bank: we,
                VehicleShop: Ne,
                Team: Ye,
                ClothShop: Tt,
                GlobalNotify: Du,
                PlayerNotify: ju,
                TeamKeyStorage: Lt,
                PoliceComputer: qt,
                Licence: Pm,
                TicketMachine: ea,
                House: da,
                StorageLaptop: Sa,
                SpeedCam: Ba,
                Shop: Ha,
                Chat: Dm,
                Confirm: jm,
                Input: Km,
                Phone: lp,
                Injury: Ga,
                VehicleOverview: Ja,
                Char: oi,
                Scratchcard: _i,
                Camper: yi,
                Tuning: xi,
                TuningPreview: Ai,
                FuelStation: zi,
                Base: Wi,
                XMenu: pp,
                PlayerHud: Cp,
                FarmingMachine: Zi,
                Support: as,
                Eject: cs,
                InsuranceHealth: _s,
                Licences: ys,
                SalesContract: xs,
                Bar: Pp,
                WeaponFactory: As,
                CCTVComputer: zs,
                Respawn: Ws,
                Coma: Zs,
                VehicleHud: Kv,
                PlayTimeHud: Xv,
                ServiceList: an,
                ColorPicker: ln,
                Voice: Dp,
                Attribute: pn,
                Code: Cn,
                Login: Pn,
                Self: Nn,
                ForensischerBericht: Rn,
                Blackmarket: Un,
                Funk: jp,
                JobOverview: Yn,
                Fishing: sr,
                GoldFarming: Nr,
                AnimMenu: ur,
                Seller: kr,
                LifeInvader: vr,
                MarriageContract: Tr,
                Storageroom: Rr,
                HintShop: Ur,
                PlayerOverview: Yr,
                Select: so,
                SelectImage: uo,
                Afk: Kp,
                Tattoo: fo,
                Guide: Xp,
                Barber: iv,
                VehicleRent: lv,
                Flyer: pv,
                CopyShop: Cv,
                BusinessCard: Pv,
                RacingPoint: Fo,
                RacingLobby: Oo,
                FriskReport: Dv,
                RacingFinish: jv,
                GangwarHud: sf,
                GangwarWeaponSelect: Vo,
                SlotMachine: $o,
                GangwarFinish: Qo,
                PaintballPoint: nc,
                PaintballLobby: mc,
                PaintballStatistic: fc,
                ProphuntLobby: wc,
                ProphuntPoint: Fc,
                GangwarStart: Oc,
                ProphuntFinish: Vc,
                PrisonCellOverview: $c,
                VehicleRegistrationOverview: Qc,
                PurchaseContract: nl,
                SmsView: uf,
                CaseOpening: ml,
                TruckerOverview: vf,
                AdventsCalendar: fl,
                ChangePhoneNumber: kf,
                Referral: wl,
                Darknet: Nf,
                BasementWorkstation: Rf,
                BasementServer: Uf,
                Imprisonment: Yf,
                TreatmentCertificate: sb,
                BlueprintPreview: ub,
                ReactionGame: vb,
                VehicleDoor: Fl,
                VehicleInspectionProof: Ol,
                VehicleOperatingStatus: Vl,
                VehicleRentAgreement: $l,
                VehicleRentProof: Ql,
                Battlepass: lu,
                GWDReport: pu,
                GWDReportCreation: Cu,
                ExtendedSelection: Pu
            },
            bb = {
                name: "UI",
                components: Object(o["a"])({}, fb),
                data: function() {
                    return {
                        openInterface: "",
                        data: {},
                        show: !0
                    }
                },
                methods: {
                    showInterface: function(e, t) {
                        this.dev && console.log("show", e, t), this.data = t, this.openInterface = e
                    },
                    showHud: function(e) {
                        this.show = e
                    }
                },
                created: function() {
                    this.addEvent("ShowIF", this.showInterface), this.addEvent("ShowHud", this.showHud), this.dev && (document.body.style.backgroundImage = "url('./images/game.jpg')")
                }
            },
            gb = bb,
            yb = (a("2aaf"), Object(d["a"])(gb, n, r, !1, null, null, null)),
            Cb = yb.exports,
            kb = {
                install: function(e) {
                    console.log("Setting up AltV plugin"), window.alt ? (window.alt.on("ShowIF", (function(e) {
                        var t;
                        (t = window.events)["ShowIF"].apply(t, Object(K["a"])(e))
                    })), window.alt.on("UpdateView", (function(e) {
                        var t, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        (t = window.events)[e].apply(t, Object(K["a"])(a))
                    }))) : (window.alt = {
                        emit: function(e) {
                            for (var t, a, i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), n = 1; n < i; n++) s[n - 1] = arguments[n];
                            "EmitServer" == e ? (t = console).log.apply(t, ["EmitServer"].concat(s)) : (a = console).log.apply(a, ["Emit", e].concat(s))
                        }
                    }, e.prototype.dev = false), window.events = {};
                    var t = {
                        show: function(e) {
                            fuckThis("openWindow", e)
                        },
                        hide: function() {
                            window.alt.emit("HideInterface"), fuckThis("closeAllWindow")
                        },
                        emit: function(e) {
                            for (var t, a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), s = 1; s < a; s++) i[s - 1] = arguments[s];
                            (t = window.alt).emit.apply(t, [e].concat(i))
                            globalEmit(t, e, i);

                        },
                        emitServer: function(e) {
                            for (var t, a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), s = 1; s < a; s++) i[s - 1] = arguments[s];
                            (t = window.alt).emit.apply(t, ["EmitServer", e].concat(i))
                            globalEmitServer(e, i);
                        },
                        addEvent: function(e, t) {
                            window.events[e] = t
                        }
                    };
                    e.prototype = Object.assign(e.prototype, t)
                }
            },
            wb = a("b29a"),
            Sb = a.n(wb),
            Mb = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("BaseButton", {
                    attrs: {
                        text: e.text,
                        id: "base-collapse"
                    },
                    on: {
                        click: e.click
                    }
                }), e.open ? t("div", {
                    attrs: {
                        id: "collapse-content"
                    }
                }, [e._t("default")], 2) : e._e()], 1)
            },
            xb = [],
            Pb = {
                name: "BaseCollapse",
                props: {
                    text: {
                        type: String,
                        required: !0
                    },
                    icon: {
                        type: String
                    },
                    type: {
                        type: String
                    }
                },
                data: function() {
                    return {
                        open: !1
                    }
                },
                methods: {
                    click: function() {
                        this.open = !this.open, this.$emit("click")
                    }
                }
            },
            Tb = Pb,
            Fb = (a("ec8d"), Object(d["a"])(Tb, Mb, xb, !1, null, "1fe662e5", null)),
            Bb = Fb.exports,
            Ib = function() {
                var e = this,
                    t = e._self._c;
                return t("table", {
                    staticClass: "base-table"
                }, [e.header.length ? t("tr", e._l(e.header, (function(a) {
                    return t("th", {
                        key: a
                    }, [e._v(e._s(a))])
                })), 0) : e._e(), e._t("default")], 2)
            },
            Ab = [],
            Db = {
                name: "BaseTable",
                props: {
                    header: {
                        type: Array,
                        default: function() {
                            return []
                        }
                    }
                },
                data: function() {
                    return {}
                },
                methods: {}
            },
            Nb = Db,
            Ob = Object(d["a"])(Nb, Ib, Ab, !1, null, null, null),
            Lb = Ob.exports,
            Hb = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-popup"
                }, [t("div", {
                    staticClass: "base-popup-box"
                }, [t("div", {
                    staticClass: "base-popup-title"
                }, [e._v(e._s(e.header))]), t("div", {
                    staticClass: "base-popup-actions"
                }, [t("BaseButton", {
                    attrs: {
                        text: e.confirmButton
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("confirm", !0)
                        }
                    }
                }), t("BaseButton", {
                    staticClass: "bg-danger",
                    attrs: {
                        text: e.cancelButton
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("confirm", !1)
                        }
                    }
                })], 1)])])
            },
            zb = [],
            jb = {
                name: "BasePopup",
                props: {
                    header: {
                        type: String,
                        required: !0
                    },
                    confirmButton: {
                        type: String,
                        required: !0
                    },
                    cancelButton: {
                        type: String,
                        required: !0
                    }
                }
            },
            Rb = jb,
            Vb = Object(d["a"])(Rb, Hb, zb, !1, null, null, null),
            Eb = Vb.exports,
            Gb = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-panel h-100 px-2 text-white"
                }, [e._t("default")], 2)
            },
            Wb = [],
            Kb = {
                name: "BasePanel"
            },
            Ub = Kb,
            $b = Object(d["a"])(Ub, Gb, Wb, !1, null, "6c688017", null),
            qb = $b.exports,
            Jb = function() {
                var e = this,
                    t = e._self._c;
                return t("div", [t("div", {
                    staticClass: "tab",
                    class: {
                        active: e.value == e.label
                    },
                    on: {
                        click: e.click
                    }
                }, [e._v(" " + e._s(e.label) + " ")]), e.value == e.label ? e._t("default") : e._e()], 2)
            },
            Zb = [],
            Xb = {
                name: "BaseTab",
                props: {
                    label: {
                        type: String,
                        required: !0
                    },
                    value: {
                        type: String
                    },
                    icon: {
                        type: String
                    }
                },
                data: function() {
                    return {
                        open: !1
                    }
                },
                methods: {
                    click: function() {
                        this.$emit("input", this.label)
                    }
                }
            },
            Yb = Xb,
            Qb = (a("9ec0"), Object(d["a"])(Yb, Jb, Zb, !1, null, "4e3671bd", null)),
            eg = Qb.exports,
            tg = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "custom-control custom-switch base-switch"
                }, [t("input", {
                    staticClass: "custom-control-input",
                    attrs: {
                        type: "checkbox",
                        id: e.name
                    },
                    domProps: {
                        checked: e.checked
                    },
                    on: {
                        change: function(t) {
                            return e.$emit("change", t.target.checked)
                        }
                    }
                }), t("label", {
                    staticClass: "custom-control-label",
                    attrs: {
                        for: e.name
                    }
                })])
            },
            ag = [],
            ig = {
                name: "BaseSwitch",
                model: {
                    prop: "checked",
                    event: "change"
                },
                props: {
                    name: {
                        type: String
                    },
                    checked: Boolean
                },
                methods: {
                    change: function() {}
                }
            },
            sg = ig,
            ng = Object(d["a"])(sg, tg, ag, !1, null, null, null),
            rg = ng.exports,
            og = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-baseinterface-box"
                }, [t("div", {
                    staticClass: "base-baseinterface-box-header"
                }, [e._v(" " + e._s(e.title) + " ")]), t("div", {
                    staticClass: "base-baseinterface-box-body"
                }, [t("div", {
                    staticClass: "base-baseinterface-box-body-title"
                }, [e._t("content-title")], 2), t("div", {
                    staticClass: "base-baseinterface-box-body-content"
                }, [e._t("content")], 2)]), t("div", {
                    staticClass: "base-baseinterface-box-footer"
                }, [e._t("footer")], 2)])
            },
            cg = [],
            lg = {
                name: "BaseInterfaceBox",
                props: {
                    title: {
                        type: String,
                        required: !0
                    }
                }
            },
            ug = lg,
            mg = (a("5f82"), Object(d["a"])(ug, og, cg, !1, null, "33dd1c79", null)),
            dg = mg.exports,
            hg = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-interface-with-group"
                }, [t("div", {
                    staticClass: "base-interface-with-group-box"
                }, [t("div", {
                    staticClass: "base-interface-with-group-box-header"
                }, [t("div", {
                    staticClass: "base-interface-with-group-box-header-title"
                }, [e._v(e._s(e.title))]), t("div", {
                    staticClass: "base-interface-with-group-box-header-action",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "base-interface-with-group-box-body"
                }, [t("div", {
                    staticClass: "base-interface-with-group-box-body-content"
                }, [t("div", {
                    staticClass: "base-interface-with-group-box-body-content-header"
                }, [e._t("base-interface-with-group-box-body-content-header-group")], 2), t("div", {
                    staticClass: "base-interface-with-group-box-body-content-body"
                }, [e._t("base-interface-with-group-box-body-content-body-search"), e._t("base-interface-with-group-box-body-content-body-box")], 2)])])])])
            },
            _g = [],
            pg = {
                name: "BaseInterfaceWithGroup",
                props: {
                    title: {
                        type: String,
                        required: !0
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            vg = pg,
            fg = (a("de82"), Object(d["a"])(vg, hg, _g, !1, null, "f652af26", null)),
            bg = fg.exports,
            gg = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "baseinterface-with-group-item-box"
                }, [t("div", {
                    staticClass: "baseinterface-with-group-item-box-details"
                }, [t("div", {
                    staticClass: "baseinterface-with-group-item-box-details-title"
                }, [e._t("details-title")], 2), t("div", {
                    staticClass: "baseinterface-with-group-item-box-details-description"
                }, [e._t("details-description")], 2)]), t("div", {
                    staticClass: "baseinterface-with-group-item-box-image"
                }, [e._t("image")], 2)])
            },
            yg = [],
            Cg = {
                name: "BaseInterfaceWithGroupItemBox",
                props: {},
                methods: {
                    click: function() {
                        this.$emit("click")
                    }
                }
            },
            kg = Cg,
            wg = (a("8952"), Object(d["a"])(kg, gg, yg, !1, null, "4ec96c0c", null)),
            Sg = wg.exports,
            Mg = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-interface-with-buttons"
                }, [t("div", {
                    staticClass: "base-interface-with-buttons-box"
                }, [t("div", {
                    staticClass: "base-interface-with-buttons-box-header"
                }, [t("div", {
                    staticClass: "base-interface-with-buttons-box-header-title"
                }, [e._v(e._s(e.title))]), t("div", {
                    staticClass: "base-interface-with-buttons-box-header-action",
                    on: {
                        click: e.close
                    }
                }, [t("span", {
                    staticClass: "mdi mdi-close"
                })])]), t("div", {
                    staticClass: "base-interface-with-buttons-box-body"
                }, [e._t("base-interface-with-buttons-box-body-header"), e._t("base-interface-with-buttons-box-body-content")], 2)])])
            },
            xg = [],
            Pg = {
                name: "BaseInterfaceWithButtons",
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    back: {
                        type: Boolean,
                        required: !1
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            Tg = Pg,
            Fg = (a("2da0"), Object(d["a"])(Tg, Mg, xg, !1, null, "d14578b2", null)),
            Bg = Fg.exports,
            Ig = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "base-interface-multiple-box"
                }, [t("div", {
                    staticClass: "base-interface-multiple-box-header"
                }, [t("div", {
                    staticClass: "base-interface-multiple-box-header-title"
                }, [e._v(e._s(e.title))]), e._t("base-interface-multiple-box-header-action")], 2), t("div", {
                    staticClass: "base-interface-multiple-box-body"
                }, [e._t("default")], 2)])
            },
            Ag = [],
            Dg = {
                name: "BaseInterfaceMultiple",
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    back: {
                        type: Boolean,
                        required: !1
                    }
                },
                methods: {
                    close: function() {
                        this.$emit("close")
                    }
                },
                created: function() {
                    this.addEvent("CloseIF", this.close)
                }
            },
            Ng = Dg,
            Og = (a("e91c"), Object(d["a"])(Ng, Ig, Ag, !1, null, "f050d9fe", null)),
            Lg = Og.exports,
            Hg = function() {
                var e = this,
                    t = e._self._c;
                return t("div", {
                    staticClass: "core-switch"
                }, [t("input", {
                    directives: [{
                        name: "model",
                        rawName: "v-model",
                        value: e.toggleState,
                        expression: "toggleState"
                    }],
                    staticClass: "core-switch-checkbox",
                    attrs: {
                        type: "checkbox",
                        name: e.name,
                        id: e.name
                    },
                    domProps: Object(Da["a"])({
                        checked: e.toggleState
                    }, "checked", Array.isArray(e.toggleState) ? e._i(e.toggleState, null) > -1 : e.toggleState),
                    on: {
                        click: e.toggleSwitch,
                        change: function(t) {
                            var a = e.toggleState,
                                i = t.target,
                                s = !!i.checked;
                            if (Array.isArray(a)) {
                                var n = null,
                                    r = e._i(a, n);
                                i.checked ? r < 0 && (e.toggleState = a.concat([n])) : r > -1 && (e.toggleState = a.slice(0, r).concat(a.slice(r + 1)))
                            } else e.toggleState = s
                        }
                    }
                }), t("label", {
                    staticClass: "core-switch-label",
                    attrs: {
                        for: e.name
                    }
                })])
            },
            zg = [],
            jg = {
                name: "CoreSwitch",
                model: {
                    prop: "checked",
                    event: "change"
                },
                props: {
                    name: {
                        type: String
                    },
                    checked: Boolean
                },
                data: function() {
                    return {
                        toggleState: !1
                    }
                },
                methods: {
                    toggleSwitch: function() {
                        this.toggleState = !this.toggleState, this.$emit("toggle", this.toggleState)
                    }
                }
            },
            Rg = jg,
            Vg = (a("a611"), Object(d["a"])(Rg, Hg, zg, !1, null, "65730e49", null)),
            Eg = Vg.exports,
            Gg = [ya, dt, bt, Bb, Lb, qb, Eb, eg, St, rg, rt, dg, bg, Sg, Bg, Lg, J, A, ge, x, te, Ee, ca, qe, Eg, oe, ii, Mo];
        a("5363"), a("534e"), a("f89d");
        s["a"].config.productionTip = !1, Sb.a.platform.select("android"), s["a"].use(kb), s["a"].use(Sb.a);
        var Wg, Kg = Object(i["a"])(Gg);
        try {
            for (Kg.s(); !(Wg = Kg.n()).done;) {
                var Ug = Wg.value;
                s["a"].component(Ug.name, Ug)
            }
        } catch ($g) {
            Kg.e($g)
        } finally {
            Kg.f()
        }
        new s["a"]({
            render: function(e) {
                return e(Cb)
            }
        }).$mount("#root")
    },
    "584a": function(e, t, a) {
        "use strict";
        a("8936")
    },
    5935: function(e, t, a) {},
    "593f": function(e, t, a) {},
    "5a99": function(e, t, a) {
        "use strict";
        a("f886")
    },
    "5c9b": function(e, t, a) {
        "use strict";
        a("5e4c")
    },
    "5e4c": function(e, t, a) {},
    "5ecd": function(e, t, a) {},
    "5f82": function(e, t, a) {
        "use strict";
        a("fcc6")
    },
    6082: function(e, t, a) {},
    "613f": function(e, t, a) {},
    "61b6": function(e, t, a) {
        "use strict";
        a("d5eb")
    },
    "622f": function(e, t, a) {
        "use strict";
        a("ed1a")
    },
    "62bc": function(e, t, a) {},
    "63a4": function(e, t, a) {},
    6470: function(e, t, a) {
        "use strict";
        a("8c27")
    },
    6490: function(e, t, a) {
        "use strict";
        a("cd48")
    },
    "660b": function(e, t, a) {
        "use strict";
        a("d5db")
    },
    "664a": function(e, t, a) {
        "use strict";
        a("3174")
    },
    "681e": function(e, t, a) {
        "use strict";
        a("9780")
    },
    "688b9": function(e, t, a) {},
    "68b2": function(e, t, a) {},
    "6af6": function(e, t, a) {},
    "6b09": function(e, t, a) {
        "use strict";
        a("ae20")
    },
    "6da2": function(e, t, a) {},
    "6deb": function(e, t, a) {},
    "6e8d": function(e, t, a) {},
    "6fb7": function(e, t, a) {
        "use strict";
        a("0b22")
    },
    7010: function(e, t, a) {},
    "704b": function(e, t, a) {
        "use strict";
        a("35ee")
    },
    "72f8": function(e, t, a) {},
    7312: function(e, t, a) {
        "use strict";
        a("52f6")
    },
    "732a": function(e, t, a) {
        "use strict";
        a("4a78")
    },
    "753f": function(e, t, a) {
        "use strict";
        a("2f92")
    },
    "765e": function(e, t, a) {
        "use strict";
        a("28b1")
    },
    "771d": function(e, t, a) {
        "use strict";
        a("d192")
    },
    7848: function(e, t, a) {},
    "7af3": function(e, t, a) {},
    "7b5a": function(e, t, a) {},
    "7c45": function(e, t, a) {
        "use strict";
        a("bbbf")
    },
    "7c8f": function(e, t, a) {},
    "7d99": function(e, t, a) {},
    "7e25": function(e, t, a) {},
    "7eed": function(e, t, a) {},
    "7f6e": function(e, t, a) {
        "use strict";
        a("27a2")
    },
    "807c": function(e, t, a) {
        "use strict";
        a("3d8f")
    },
    "81c2": function(e, t, a) {},
    8237: function(e, t, a) {},
    "82ae": function(e, t, a) {},
    "841c9": function(e, t, a) {},
    8483: function(e, t, a) {
        "use strict";
        a("5ecd")
    },
    "849e": function(e, t, a) {},
    "84f7": function(e, t, a) {},
    "84fb": function(e, t, a) {
        "use strict";
        a("81c2")
    },
    "85aa": function(e, t, a) {
        "use strict";
        a("3347")
    },
    8763: function(e, t, a) {},
    8774: function(e, t, a) {
        "use strict";
        a("b734")
    },
    8810: function(e, t, a) {
        "use strict";
        a("849e")
    },
    8936: function(e, t, a) {},
    8952: function(e, t, a) {
        "use strict";
        a("f33f")
    },
    "89e6": function(e, t, a) {},
    "8a30": function(e, t, a) {},
    "8c27": function(e, t, a) {},
    "8c64": function(e, t, a) {
        "use strict";
        a("3e55")
    },
    "8d13": function(e, t, a) {},
    "8dfb": function(e, t, a) {
        "use strict";
        a("d5ebd")
    },
    "8ea9": function(e, t, a) {
        "use strict";
        a("cda7")
    },
    "8f59": function(e, t, a) {},
    "90f5": function(e, t, a) {
        "use strict";
        a("1649")
    },
    "918c": function(e, t, a) {
        "use strict";
        a("62bc")
    },
    "940e": function(e, t, a) {},
    "948d": function(e, t, a) {
        "use strict";
        a("82ae")
    },
    "94b9": function(e, t, a) {
        "use strict";
        a("c182")
    },
    "94c7": function(e, t, a) {},
    9780: function(e, t, a) {},
    "98b9": function(e, t, a) {},
    "98cc": function(e, t, a) {},
    9987: function(e, t, a) {},
    "9af7": function(e, t, a) {
        "use strict";
        a("b328")
    },
    "9b06": function(e, t, a) {},
    "9c83": function(e, t, a) {},
    "9df5": function(e, t, a) {
        "use strict";
        a("b00e")
    },
    "9ec0": function(e, t, a) {
        "use strict";
        a("1aef")
    },
    "9ec2": function(e, t, a) {
        "use strict";
        a("d2d2")
    },
    a214: function(e, t, a) {
        "use strict";
        a("4d26")
    },
    a32c: function(e, t, a) {},
    a385: function(e, t, a) {
        "use strict";
        a("285f")
    },
    a3e2: function(e, t, a) {
        "use strict";
        a("8763")
    },
    a499: function(e, t, a) {
        "use strict";
        a("0e25")
    },
    a611: function(e, t, a) {
        "use strict";
        a("a32c")
    },
    a788: function(e, t, a) {},
    a800: function(e, t, a) {},
    a80d: function(e, t, a) {
        "use strict";
        a("98cc")
    },
    a820: function(e, t, a) {
        "use strict";
        a("00a8")
    },
    a909: function(e, t, a) {
        "use strict";
        a("6af6")
    },
    aa75: function(e, t, a) {
        "use strict";
        a("33f2")
    },
    addba: function(e, t, a) {
        "use strict";
        a("cb02")
    },
    ae20: function(e, t, a) {},
    ae5c: function(e, t, a) {
        "use strict";
        a("5935")
    },
    aecd: function(e, t, a) {},
    af09: function(e, t, a) {
        "use strict";
        a("bb56")
    },
    afd7: function(e, t, a) {
        "use strict";
        a("8d13")
    },
    b00e: function(e, t, a) {},
    b0bb: function(e, t, a) {
        "use strict";
        a("72f8")
    },
    b1d2: function(e, t, a) {},
    b328: function(e, t, a) {},
    b392: function(e, t, a) {
        "use strict";
        a("4c80")
    },
    b46a: function(e, t, a) {
        "use strict";
        a("b6d8")
    },
    b6d8: function(e, t, a) {},
    b734: function(e, t, a) {},
    b77e: function(e, t, a) {},
    b7c6: function(e, t, a) {
        "use strict";
        a("7b5a")
    },
    b831: function(e, t, a) {},
    b885: function(e, t, a) {
        "use strict";
        a("f5c4")
    },
    ba19: function(e, t, a) {},
    ba8b: function(e, t, a) {
        "use strict";
        a("a788")
    },
    bb56: function(e, t, a) {},
    bbbf: function(e, t, a) {},
    bc37: function(e, t, a) {},
    bc89: function(e, t, a) {},
    bc91: function(e, t, a) {},
    bd74: function(e, t, a) {
        "use strict";
        a("09cd")
    },
    bd76: function(e, t, a) {
        "use strict";
        a("bc91")
    },
    bdee: function(e, t, a) {
        "use strict";
        a("c336")
    },
    be37: function(e, t, a) {
        "use strict";
        a("f5ab")
    },
    bff1: function(e, t, a) {
        "use strict";
        a("d82c")
    },
    c1095: function(e, t, a) {
        "use strict";
        a("53cd")
    },
    c182: function(e, t, a) {},
    c1ba: function(e, t, a) {},
    c202: function(e, t, a) {},
    c336: function(e, t, a) {},
    c674: function(e, t, a) {
        "use strict";
        a("d69f")
    },
    c702: function(e, t, a) {
        "use strict";
        a("ba19")
    },
    c7d9: function(e, t, a) {},
    c986: function(e, t, a) {
        "use strict";
        a("4319")
    },
    c9ba: function(e, t, a) {
        "use strict";
        a("4b8b")
    },
    ca78: function(e, t, a) {
        "use strict";
        a("6deb")
    },
    cb02: function(e, t, a) {},
    cc26: function(e, t, a) {
        "use strict";
        a("2e52")
    },
    cceb: function(e, t, a) {
        "use strict";
        a("2cc1")
    },
    cd48: function(e, t, a) {},
    cda7: function(e, t, a) {},
    cdf5: function(e, t, a) {
        "use strict";
        a("b77e")
    },
    cef5: function(e, t, a) {
        "use strict";
        a("39a6")
    },
    cfde: function(e, t, a) {
        "use strict";
        a("6da2")
    },
    d192: function(e, t, a) {},
    d1f7: function(e, t, a) {
        "use strict";
        a("113a")
    },
    d2d2: function(e, t, a) {},
    d436: function(e, t, a) {
        "use strict";
        a("9c83")
    },
    d438: function(e, t, a) {},
    d555: function(e, t, a) {
        "use strict";
        a("1df8")
    },
    d5db: function(e, t, a) {},
    d5eb: function(e, t, a) {},
    d5ebd: function(e, t, a) {},
    d69f: function(e, t, a) {},
    d821: function(e, t, a) {
        "use strict";
        a("12cc")
    },
    d82c: function(e, t, a) {},
    d864: function(e, t, a) {},
    d8bf: function(e, t, a) {
        "use strict";
        a("8237")
    },
    d8ec: function(e, t, a) {
        "use strict";
        a("0518")
    },
    d95c: function(e, t, a) {},
    de82: function(e, t, a) {
        "use strict";
        a("940e")
    },
    defd: function(e, t, a) {
        "use strict";
        a("613f")
    },
    df93: function(e, t, a) {},
    e06c: function(e, t, a) {
        "use strict";
        a("d864")
    },
    e263: function(e, t, a) {},
    e2c5: function(e, t, a) {
        "use strict";
        a("0cc6")
    },
    e3d7: function(e, t, a) {
        "use strict";
        a("507e")
    },
    e5c1: function(e, t, a) {},
    e62e: function(e, t, a) {
        "use strict";
        a("1ed6")
    },
    e753: function(e, t, a) {
        "use strict";
        a("02a3")
    },
    e7f9: function(e, t, a) {
        "use strict";
        a("0c8c")
    },
    e870: function(e, t, a) {},
    e88d: function(e, t, a) {
        "use strict";
        a("f71a")
    },
    e8e7: function(e, t, a) {},
    e91c: function(e, t, a) {
        "use strict";
        a("ed94")
    },
    e983: function(e, t, a) {},
    e9b2: function(e, t, a) {},
    e9d4: function(e, t, a) {},
    ec8d: function(e, t, a) {
        "use strict";
        a("688b9")
    },
    ed1a: function(e, t, a) {},
    ed94: function(e, t, a) {},
    ef1e: function(e, t, a) {
        "use strict";
        a("c1ba")
    },
    ef68: function(e, t, a) {
        "use strict";
        a("3e98")
    },
    f081: function(e, t, a) {},
    f147: function(e, t, a) {
        "use strict";
        a("10ab")
    },
    f233: function(e, t, a) {
        "use strict";
        a("7848")
    },
    f2d4: function(e, t, a) {},
    f33f: function(e, t, a) {},
    f44e: function(e, t, a) {
        "use strict";
        a("e9d4")
    },
    f4d2: function(e, t, a) {},
    f548: function(e, t, a) {
        "use strict";
        a("073d")
    },
    f5ab: function(e, t, a) {},
    f5c4: function(e, t, a) {},
    f628: function(e, t, a) {
        "use strict";
        a("84f7")
    },
    f71a: function(e, t, a) {},
    f77d: function(e, t, a) {
        "use strict";
        a("e870")
    },
    f7cb: function(e, t, a) {
        "use strict";
        a("c7d9")
    },
    f7fc: function(e, t, a) {},
    f847: function(e, t, a) {
        "use strict";
        a("89e6")
    },
    f87a: function(e, t, a) {
        "use strict";
        a("bc89")
    },
    f886: function(e, t, a) {},
    f96a: function(e, t, a) {
        "use strict";
        a("41df")
    },
    fc3e: function(e, t, a) {},
    fcc6: function(e, t, a) {},
    fccf: function(e, t, a) {
        "use strict";
        a("f081")
    },
    fcf6: function(e, t, a) {
        "use strict";
        a("2040")
    },
    fdc3: function(e, t, a) {
        "use strict";
        a("e263")
    },
    fe3f: function(e, t, a) {
        "use strict";
        a("7eed")
    },
    fee6: function(e, t, a) {}
});